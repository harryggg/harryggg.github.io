var resultJson = [{"path":"docs/ContactUs.adoc","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"\u003d Contact Us"},{"lineNumber":2,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":3,"author":{"gitID":"-"},"content":""},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"* *Bug reports, Suggestions* : Post in our https://github.com/CS2103JAN2018-F14-B4/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."},{"lineNumber":5,"author":{"gitID":"-"},"content":"* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"* *Email us* : You can also reach us at `qiusiyu [at] u.nus.edu`"}],"authorContributionMap":{"takuyakanbr":2,"-":4}},{"path":"docs/team/johndoe.adoc","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"\u003d John Doe - Project Portfolio"},{"lineNumber":2,"author":{"gitID":"-"},"content":":imagesDir: ../images"},{"lineNumber":3,"author":{"gitID":"-"},"content":":stylesDir: ../stylesheets"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"\u003d\u003d PROJECT: Bibliotek"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"---"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"\u003d\u003d Overview"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"AddressBook - Level 4 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"\u003d\u003d Summary of contributions"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"* *Major enhancement*: added *the ability to undo/redo previous commands*"},{"lineNumber":16,"author":{"gitID":"-"},"content":"** What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command."},{"lineNumber":17,"author":{"gitID":"-"},"content":"** Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them."},{"lineNumber":18,"author":{"gitID":"-"},"content":"** Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."},{"lineNumber":19,"author":{"gitID":"-"},"content":"** Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"* *Minor enhancement*: added a history command that allows the user to navigate to previous commands using up/down keys."},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"* *Code contributed*: [https://github.com[Functional code]] [https://github.com[Test code]] _{give links to collated code files}_"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"* *Other contributions*:"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"** Project management:"},{"lineNumber":28,"author":{"gitID":"-"},"content":"*** Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"},{"lineNumber":29,"author":{"gitID":"-"},"content":"** Enhancements to existing features:"},{"lineNumber":30,"author":{"gitID":"-"},"content":"*** Updated the GUI color scheme (Pull requests https://github.com[#33], https://github.com[#34])"},{"lineNumber":31,"author":{"gitID":"-"},"content":"*** Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests https://github.com[#36], https://github.com[#38])"},{"lineNumber":32,"author":{"gitID":"-"},"content":"** Documentation:"},{"lineNumber":33,"author":{"gitID":"-"},"content":"*** Did cosmetic tweaks to existing contents of the User Guide: https://github.com[#14]"},{"lineNumber":34,"author":{"gitID":"-"},"content":"** Community:"},{"lineNumber":35,"author":{"gitID":"-"},"content":"*** PRs reviewed (with non-trivial review comments): https://github.com[#12], https://github.com[#32], https://github.com[#19], https://github.com[#42]"},{"lineNumber":36,"author":{"gitID":"-"},"content":"*** Contributed to forum discussions (examples:  https://github.com[1], https://github.com[2], https://github.com[3], https://github.com[4])"},{"lineNumber":37,"author":{"gitID":"-"},"content":"*** Reported bugs and suggestions for other teams in the class (examples:  https://github.com[1], https://github.com[2], https://github.com[3])"},{"lineNumber":38,"author":{"gitID":"-"},"content":"*** Some parts of the history feature I added was adopted by several other class mates (https://github.com[1], https://github.com[2])"},{"lineNumber":39,"author":{"gitID":"-"},"content":"** Tools:"},{"lineNumber":40,"author":{"gitID":"-"},"content":"*** Integrated a third party library (Natty) to the project (https://github.com[#42])"},{"lineNumber":41,"author":{"gitID":"-"},"content":"*** Integrated a new Github plugin (CircleCI) to the team repo"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"_{you can add/remove categories in the list above}_"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the User Guide"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":49,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"},{"lineNumber":50,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"include::../UserGuide.adoc[tag\u003dundoredo]"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"include::../UserGuide.adoc[tag\u003ddataencryption]"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"\u003d\u003d Contributions to the Developer Guide"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":59,"author":{"gitID":"-"},"content":"|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"},{"lineNumber":60,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"include::../DeveloperGuide.adoc[tag\u003dundoredo]"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"include::../DeveloperGuide.adoc[tag\u003ddataencryption]"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"\u003d\u003d PROJECT: PowerPointLabs"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"---"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"_{Optionally, you may include other projects in your portfolio.}_"}],"authorContributionMap":{"takuyakanbr":1,"-":70}},{"path":"docs/AboutUs.adoc","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"\u003d About Us"},{"lineNumber":2,"author":{"gitID":"-"},"content":":relfileprefix: team/"},{"lineNumber":3,"author":{"gitID":"-"},"content":":imagesDir: images"},{"lineNumber":4,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"Bibliotek was developed by https://github.com/CS2103JAN2018-F14-B4[Team F14-B4]. +"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"{empty} +"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"We developed this project as part of our Software Engineering Module, CS2103T. +"},{"lineNumber":9,"author":{"gitID":"-"},"content":"{empty} +"},{"lineNumber":10,"author":{"gitID":"-"},"content":"We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"\u003d\u003d Project Team"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"\u003d\u003d\u003d Qiu Siyu"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"image::takuyakanbr.png[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"{empty}[https://danielteo.me[homepage]] [http://github.com/takuyakanbr[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"Role: Developer +"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"Responsibilities: Dev Ops + Model"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"\u003d\u003d\u003d Qiu Siqi"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"image::qiu-siqi.png[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"{empty}[http://github.com/qiu-siqi[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"Role: Developer +"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"Responsibilities: Logic"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"\u003d\u003d\u003d Shi Jin"},{"lineNumber":33,"author":{"gitID":"592363789"},"content":"image::592363789.png[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":34,"author":{"gitID":"592363789"},"content":"{empty}[http://github.com/592363789[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"Role: Developer +"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"Responsibilities: Storage"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"\u003d\u003d\u003d Liu Jianghao"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"image::fishtt.png[width\u003d\"150\", align\u003d\"left\"]"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"{empty}[http://github.com/fishTT[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"Role: Developer +"},{"lineNumber":46,"author":{"gitID":"-"},"content":"Responsibilities: UI"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"\u0027\u0027\u0027"}],"authorContributionMap":{"qiu-siqi":2,"takuyakanbr":16,"592363789":2,"-":28}},{"path":"README.adoc","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"\u003d Bibliotek"},{"lineNumber":2,"author":{"gitID":"-"},"content":"ifdef::env-github,env-browser[:relfileprefix: docs/]"},{"lineNumber":3,"author":{"gitID":"-"},"content":""},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"https://travis-ci.org/CS2103JAN2018-F14-B4/main[image:https://travis-ci.org/CS2103JAN2018-F14-B4/main.svg?branch\u003dmaster[Build Status]]"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"https://ci.appveyor.com/project/takuyakanbr/main[image:https://ci.appveyor.com/api/projects/status/0b9xn6cwd3i8a80b?svg\u003dtrue[Build status]]"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"https://coveralls.io/github/CS2103JAN2018-F14-B4/main?branch\u003dmaster[image:https://coveralls.io/repos/github/CS2103JAN2018-F14-B4/main/badge.svg?branch\u003dmaster[Coverage Status]]"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"https://www.codacy.com/app/takuyakanbr/main[image:https://api.codacy.com/project/badge/Grade/aa9140dcebbd474c9dc16c57fe247e78[Codacy Badge]]"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"Bibliotek is a free book cataloguing application that is simple, fast, and easy to use. It is targeted at heavy readers who require a hassle-free way of managing and keep tracking of their read and unread books."},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"ifdef::env-github[]"},{"lineNumber":12,"author":{"gitID":"-"},"content":"image::docs/images/Ui.png[width\u003d\"600\"]"},{"lineNumber":13,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"ifndef::env-github[]"},{"lineNumber":16,"author":{"gitID":"-"},"content":"image::images/Ui.png[width\u003d\"600\"]"},{"lineNumber":17,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"\u003d\u003d Features"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"* Runs on all mainstream OS"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"* Uses short and simple commands for user interactions"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"* Provides a GUI to display lists and details of books"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"* Search online for new books and add them with a command"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"* Prioritize, rate, and mark books as read or unread"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"* Filter and sort books by title, priority, rating, etc."},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"* View book reviews"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"\u003d\u003d Site Map"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"* \u003c\u003cUserGuide#, User Guide\u003e\u003e"},{"lineNumber":32,"author":{"gitID":"-"},"content":"* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"},{"lineNumber":33,"author":{"gitID":"-"},"content":"* \u003c\u003cAboutUs#, About Us\u003e\u003e"},{"lineNumber":34,"author":{"gitID":"-"},"content":"* \u003c\u003cContactUs#, Contact Us\u003e\u003e"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"\u003d\u003d Acknowledgements"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"* This application is built upon the https://github.com/se-edu/addressbook-level4[AddressBook-Level4] project created by https://github.com/se-edu[SE-EDU] initiative."},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"* Some parts of this application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"},{"lineNumber":40,"author":{"gitID":"-"},"content":"_Marco Jakob_."},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"* Libraries used: https://github.com/TomasMikula/EasyBind[EasyBind], https://github.com/TestFX/TestFX[TextFX], https://bitbucket.org/controlsfx/controlsfx/[ControlsFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/google/guava[Guava], https://github.com/junit-team/junit4[JUnit4], https://github.com/AsyncHttpClient/async-http-client[AsyncHttpClient]"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"\u003d\u003d Licence : link:LICENSE[MIT]"}],"authorContributionMap":{"takuyakanbr":19,"-":24}},{"path":"docs/UserGuide.adoc","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"\u003d Bibliotek - User Guide"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":":toc: left"},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":":toc-title: Table of Contents"},{"lineNumber":4,"author":{"gitID":"-"},"content":":sectnums:"},{"lineNumber":5,"author":{"gitID":"-"},"content":":imagesDir: images"},{"lineNumber":6,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":7,"author":{"gitID":"-"},"content":":xrefstyle: full"},{"lineNumber":8,"author":{"gitID":"-"},"content":":experimental:"},{"lineNumber":9,"author":{"gitID":"-"},"content":"ifdef::env-github[]"},{"lineNumber":10,"author":{"gitID":"-"},"content":":tip-caption: :bulb:"},{"lineNumber":11,"author":{"gitID":"-"},"content":":note-caption: :information_source:"},{"lineNumber":12,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":":repoURL: https://github.com/CS2103JAN2018-F14-B4/main"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"By: `Team F14-B4`      Since: `Jan 2018`      Licence: `MIT`"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"\u003d\u003d Introduction"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d What is Bibliotek"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"Bibliotek is a free book cataloguing application that is simple, fast and easy to use."},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"You can use Bibliotek to search for books, manage your reading list and track the availability of your books."},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"If you *prefer to use a desktop app*, like *working with a Command Line Interface* (CLI)"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"while still having the benefits of a Graphical User Interface (GUI) or can *type fast*, Bibliotek is just for you!"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"Interested? Jump to the \u003c\u003cQuick Start\u003e\u003e to get started. Enjoy!"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Using this guide"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"This document is a reference for installing and using Bibliotek."},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"It can be accessed using the `help` command in the application."},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Features and Capabilities"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"Below are some features and capabilities that Bibliotek supports:"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"* Search for new books"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"* View book reviews"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"* Track the books you are reading, have read and want to read"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"* Update you when books in your watchlist become available in the library"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"* Recommend new books based on your reading list"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"* Undo your previous actions"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"\u003d\u003d Quick Start"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":".  Ensure you have Java version `1.8.0_60` or later installed in your Computer."},{"lineNumber":46,"author":{"gitID":"-"},"content":"+"},{"lineNumber":47,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":48,"author":{"gitID":"-"},"content":"Having any Java 8 version is not enough. +"},{"lineNumber":49,"author":{"gitID":"-"},"content":"This app will not work with earlier versions of Java 8."},{"lineNumber":50,"author":{"gitID":"-"},"content":"+"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":".  Download the latest `bibliotek.jar` link:{repoURL}/releases[here]."},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":".  Copy the file to the folder you want to use as the home folder for your Book Shelf."},{"lineNumber":53,"author":{"gitID":"-"},"content":".  Double-click the file to start the app. The GUI should appear in a few seconds."},{"lineNumber":54,"author":{"gitID":"-"},"content":"+"},{"lineNumber":55,"author":{"gitID":"-"},"content":"image::Ui.png[width\u003d\"790\"]"},{"lineNumber":56,"author":{"gitID":"-"},"content":"+"},{"lineNumber":57,"author":{"gitID":"-"},"content":".  Type the command in the command box and press kbd:[Enter] to execute it. +"},{"lineNumber":58,"author":{"gitID":"-"},"content":"e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."},{"lineNumber":59,"author":{"gitID":"-"},"content":".  Some example commands you can try:"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"* *`list`* : lists all books"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"* **`search`**`t/Babylon\u0027s Ashes c/Science Fiction` : searches for books with `Babylon\u0027s Ashes` in their title, belonging to the category `Science Fiction`."},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"* **`delete`**`3` : deletes the 3rd book shown in the current list"},{"lineNumber":64,"author":{"gitID":"-"},"content":"* *`exit`* : exits the app"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"[[Features]]"},{"lineNumber":69,"author":{"gitID":"-"},"content":"\u003d\u003d Features"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":72,"author":{"gitID":"-"},"content":"*Command Format*"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"* Words in `UPPER_CASE` are the parameters you supply e.g. in `search t/TITLE`, `TITLE` is a parameter which you can use as `search t/Harry Potter`."},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"* Items in square brackets are optional e.g you can use `[t/TITLE] [a/AUTHOR]` as `t/Harry Potter a/Rowling` or as `t/Harry Potter` (but there cannot be no parameters)."},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"* Items with `…`​ after them can be used multiple times including zero times e.g. you can use `[a/AUTHOR]...` as `{nbsp}` (i.e. 0 times), `a/Dubner`, `a/Dubner a/Steven Levitt` etc."},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"* Parameters can be in any order e.g. if the command specifies `a/AUTHOR t/TITLE`, `t/TITLE a/AUTHOR` is acceptable."},{"lineNumber":78,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Viewing help : `help`"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"If you are unsure of some commands, use the `help` command to open this document. +"},{"lineNumber":83,"author":{"gitID":"-"},"content":"Format: `help`"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Searching for books online: `search`"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"Want to lookup for a specific book? Browsing for new books? Use the `search` command. +"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"Format: `search [SEARCH_TERM] [i/ISBN] [t/TITLE] [a/AUTHOR] [c/CATEGORY]`"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"* Searches online for books using the specified `SEARCH_TERM` and constraints on its `ISBN`, `TITLE`, `AUTHOR`, and `CATEGORY`."},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"* At least one of the fields must be provided."},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"WARNING: You can only perform `search` with Internet connection."},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"Examples:"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"* `search Artemis a/Andy Weir` +"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"Returns a list of books related to `Artemis`, where `Andy Weir` matches one of the authors."},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"* `search t/Babylon\u0027s Ashes c/Science Fiction` +"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"Returns a list of `Science Fiction` books that contains `Babylon\u0027s Ashes` in the title."},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Adding a book: `add`"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"If you find a book you wish to read in your search results, you can add this book into your book shelf. Use the `add` command. +"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"Format: `add INDEX`"},{"lineNumber":108,"author":{"gitID":"-"},"content":""},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"* Adds the book at the specified `INDEX`."},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"* The index refers to the index number shown in your search results."},{"lineNumber":112,"author":{"gitID":"-"},"content":"* The index *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":113,"author":{"gitID":"-"},"content":"****"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"WARNING: You cannot perform `add` when the list shown is your book shelf. +"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"You also need Internet connection."},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"Examples:"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"* `search t/Babylon\u0027s Ashes c/Science Fiction` +"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"`add 1` +"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"Adds the 1st book in the search results."},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Listing your book shelf : `list`"},{"lineNumber":125,"author":{"gitID":"-"},"content":""},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"If you want to view a portion of the books in your book shelf, use the `list` command. +"},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":"Format: `list [t/TITLE] [a/AUTHOR] [c/CATEGORY] [p/PRIORITY] [s/STATUS]`"},{"lineNumber":128,"author":{"gitID":"-"},"content":""},{"lineNumber":129,"author":{"gitID":"-"},"content":"****"},{"lineNumber":130,"author":{"gitID":"qiu-siqi"},"content":"* Lists all books in your book shelf that satisfies all the constraints on `TITLE`, `AUTHOR`, `CATEGORY`, `PRIORITY` and `STATUS`."},{"lineNumber":131,"author":{"gitID":"qiu-siqi"},"content":"* If no parameters are provided, all books will be listed."},{"lineNumber":132,"author":{"gitID":"-"},"content":"****"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":135,"author":{"gitID":"-"},"content":""},{"lineNumber":136,"author":{"gitID":"qiu-siqi"},"content":"* `list` +"},{"lineNumber":137,"author":{"gitID":"qiu-siqi"},"content":"Lists all books in your book shelf."},{"lineNumber":138,"author":{"gitID":"qiu-siqi"},"content":"* `list a/Andy Weir` +"},{"lineNumber":139,"author":{"gitID":"qiu-siqi"},"content":"Lists books in your book shelf where `Andy Weir` matches one of the authors."},{"lineNumber":140,"author":{"gitID":"qiu-siqi"},"content":"* `list t/Babylon\u0027s Ashes c/Science Fiction` +"},{"lineNumber":141,"author":{"gitID":"qiu-siqi"},"content":"Lists `Science Fiction` books in your book shelf that contains `Babylon\u0027s Ashes` in the title."},{"lineNumber":142,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":143,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Selecting a book : `select`"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"qiu-siqi"},"content":"If you are interested in a book and want to view more information about it, use `select`. +"},{"lineNumber":146,"author":{"gitID":"-"},"content":"Format: `select INDEX`"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"****"},{"lineNumber":149,"author":{"gitID":"qiu-siqi"},"content":"* Selects the book at the specified `INDEX` and displays detailed information about it."},{"lineNumber":150,"author":{"gitID":"-"},"content":"* The index refers to the index number shown in the most recent listing."},{"lineNumber":151,"author":{"gitID":"-"},"content":"* The index *must be a positive integer* `1, 2, 3, ...`"},{"lineNumber":152,"author":{"gitID":"-"},"content":"****"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":155,"author":{"gitID":"-"},"content":""},{"lineNumber":156,"author":{"gitID":"-"},"content":"* `list` +"},{"lineNumber":157,"author":{"gitID":"-"},"content":"`select 2` +"},{"lineNumber":158,"author":{"gitID":"qiu-siqi"},"content":"Selects the 2nd book in your book shelf."},{"lineNumber":159,"author":{"gitID":"qiu-siqi"},"content":"* `list p/HIGH` +"},{"lineNumber":160,"author":{"gitID":"qiu-siqi"},"content":"`select 1` +"},{"lineNumber":161,"author":{"gitID":"qiu-siqi"},"content":"Selects the 1st book among books with `HIGH` priority in your book shelf."},{"lineNumber":162,"author":{"gitID":"qiu-siqi"},"content":"* `search Artemis a/Andy Weir` +"},{"lineNumber":163,"author":{"gitID":"-"},"content":"`select 1` +"},{"lineNumber":164,"author":{"gitID":"qiu-siqi"},"content":"Selects the 1st book in the search results."},{"lineNumber":165,"author":{"gitID":"-"},"content":""},{"lineNumber":166,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Editing a book : `edit` `[coming in v1.2]`"},{"lineNumber":167,"author":{"gitID":"-"},"content":""},{"lineNumber":168,"author":{"gitID":"qiu-siqi"},"content":"After reading a book, you may want to give the book a rating or set the book as read. Or, you may want"},{"lineNumber":169,"author":{"gitID":"qiu-siqi"},"content":"to change the priority of books to remind yourself what you should read next. These can be done using `edit`. +"},{"lineNumber":170,"author":{"gitID":"qiu-siqi"},"content":"Format: `edit INDEX [s/STATUS] [p/PRIORITY] [r/RATING]`"},{"lineNumber":171,"author":{"gitID":"-"},"content":""},{"lineNumber":172,"author":{"gitID":"-"},"content":"****"},{"lineNumber":173,"author":{"gitID":"qiu-siqi"},"content":"* Edits the book at the specified `INDEX`. The index refers to the index number shown in the last book shelf listing. The index *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":174,"author":{"gitID":"-"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":175,"author":{"gitID":"-"},"content":"* Existing values will be updated to the input values."},{"lineNumber":176,"author":{"gitID":"-"},"content":"****"},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"qiu-siqi"},"content":"WARNING: You can only perform `edit` when the list shown is from your book shelf."},{"lineNumber":179,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":180,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":181,"author":{"gitID":"-"},"content":""},{"lineNumber":182,"author":{"gitID":"qiu-siqi"},"content":"* `edit 1 p/HIGH` +"},{"lineNumber":183,"author":{"gitID":"qiu-siqi"},"content":"Changes the priority of the 1st book to `HIGH`."},{"lineNumber":184,"author":{"gitID":"qiu-siqi"},"content":"* `edit 2 s/READ r/5` +"},{"lineNumber":185,"author":{"gitID":"qiu-siqi"},"content":"Marks the 2nd book as `READ` and changes its rating to `5`."},{"lineNumber":186,"author":{"gitID":"-"},"content":""},{"lineNumber":187,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Deleting a book : `delete`"},{"lineNumber":188,"author":{"gitID":"-"},"content":""},{"lineNumber":189,"author":{"gitID":"qiu-siqi"},"content":"No longer want a book in your book shelf? Remove it using `delete`. +"},{"lineNumber":190,"author":{"gitID":"-"},"content":"Format: `delete INDEX`"},{"lineNumber":191,"author":{"gitID":"-"},"content":""},{"lineNumber":192,"author":{"gitID":"-"},"content":"****"},{"lineNumber":193,"author":{"gitID":"qiu-siqi"},"content":"* Deletes the book at the specified `INDEX`."},{"lineNumber":194,"author":{"gitID":"-"},"content":"* The index refers to the index number shown in the most recent listing."},{"lineNumber":195,"author":{"gitID":"-"},"content":"* The index *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":196,"author":{"gitID":"-"},"content":"****"},{"lineNumber":197,"author":{"gitID":"-"},"content":""},{"lineNumber":198,"author":{"gitID":"qiu-siqi"},"content":"WARNING: You can only perform `delete` if the list shown is from your book shelf."},{"lineNumber":199,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":200,"author":{"gitID":"qiu-siqi"},"content":"TIP: You don\u0027t have to delete books after reading them. Simply mark them as read."},{"lineNumber":201,"author":{"gitID":"qiu-siqi"},"content":"They may serve as useful reference in the future."},{"lineNumber":202,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":203,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":204,"author":{"gitID":"-"},"content":""},{"lineNumber":205,"author":{"gitID":"-"},"content":"* `list` +"},{"lineNumber":206,"author":{"gitID":"-"},"content":"`delete 2` +"},{"lineNumber":207,"author":{"gitID":"-"},"content":"Deletes the 2nd person in the address book."},{"lineNumber":208,"author":{"gitID":"-"},"content":"* `find Betsy` +"},{"lineNumber":209,"author":{"gitID":"-"},"content":"`delete 1` +"},{"lineNumber":210,"author":{"gitID":"-"},"content":"Deletes the 1st person in the results of the `find` command."},{"lineNumber":211,"author":{"gitID":"-"},"content":""},{"lineNumber":212,"author":{"gitID":"-"},"content":""},{"lineNumber":213,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Viewing book reviews: `reviews` `[coming in v1.3]`"},{"lineNumber":214,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":215,"author":{"gitID":"qiu-siqi"},"content":"If a book catches your eyes but you are not sure whether it\u0027s worth the read, use"},{"lineNumber":216,"author":{"gitID":"qiu-siqi"},"content":"`reviews` to find out what other readers think. +"},{"lineNumber":217,"author":{"gitID":"qiu-siqi"},"content":"Format: `reviews INDEX`"},{"lineNumber":218,"author":{"gitID":"-"},"content":""},{"lineNumber":219,"author":{"gitID":"-"},"content":"****"},{"lineNumber":220,"author":{"gitID":"qiu-siqi"},"content":"* Loads reviews of the book at the specified `INDEX`."},{"lineNumber":221,"author":{"gitID":"-"},"content":"* The index refers to the index number shown in the most recent listing."},{"lineNumber":222,"author":{"gitID":"-"},"content":"* The index *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":223,"author":{"gitID":"-"},"content":"****"},{"lineNumber":224,"author":{"gitID":"-"},"content":""},{"lineNumber":225,"author":{"gitID":"qiu-siqi"},"content":"WARNING: You can only perform `reviews` with Internet connection."},{"lineNumber":226,"author":{"gitID":"-"},"content":""},{"lineNumber":227,"author":{"gitID":"qiu-siqi"},"content":"Examples:"},{"lineNumber":228,"author":{"gitID":"-"},"content":""},{"lineNumber":229,"author":{"gitID":"qiu-siqi"},"content":"* `search t/Babylon\u0027s Ashes c/Science Fiction` +"},{"lineNumber":230,"author":{"gitID":"qiu-siqi"},"content":"`reviews 1` +"},{"lineNumber":231,"author":{"gitID":"qiu-siqi"},"content":"Shows online reviews of 1st book in the search results."},{"lineNumber":232,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":233,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Listing recently viewed books: `recent` `[since v1.2]`"},{"lineNumber":234,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":235,"author":{"gitID":"qiu-siqi"},"content":"You recently selected a book in one of your searches but did not add it into your"},{"lineNumber":236,"author":{"gitID":"qiu-siqi"},"content":"book shelf, and now you have trouble searching up that book again? No worries, `recent`"},{"lineNumber":237,"author":{"gitID":"qiu-siqi"},"content":"is designed to take care of this. +"},{"lineNumber":238,"author":{"gitID":"qiu-siqi"},"content":"Format: `recent`"},{"lineNumber":239,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":240,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":241,"author":{"gitID":"qiu-siqi"},"content":"* Lists the books you recently selected in reverse chronological order."},{"lineNumber":242,"author":{"gitID":"qiu-siqi"},"content":"* Limited to the last 50 books."},{"lineNumber":243,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":244,"author":{"gitID":"-"},"content":""},{"lineNumber":245,"author":{"gitID":"qiu-siqi"},"content":"[NOTE]"},{"lineNumber":246,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":247,"author":{"gitID":"qiu-siqi"},"content":"You can select books in the `recent` list, but this will not count as a newest selection."},{"lineNumber":248,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":249,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":250,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Finding a book in the library: `library` `[coming in v1.4]`"},{"lineNumber":251,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":252,"author":{"gitID":"qiu-siqi"},"content":"If you want to know whether a book is available in a library, use `library`. +"},{"lineNumber":253,"author":{"gitID":"qiu-siqi"},"content":"Format: `library INDEX`"},{"lineNumber":254,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":255,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":256,"author":{"gitID":"qiu-siqi"},"content":"* Check for the availability of a book in a \u003c\u003csettings-library,pre-configured library\u003e\u003e."},{"lineNumber":257,"author":{"gitID":"qiu-siqi"},"content":"* Default library searched is National Library Board."},{"lineNumber":258,"author":{"gitID":"-"},"content":"****"},{"lineNumber":259,"author":{"gitID":"-"},"content":""},{"lineNumber":260,"author":{"gitID":"qiu-siqi"},"content":"WARNING: You can only perform `library` with Internet connection."},{"lineNumber":261,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":262,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":263,"author":{"gitID":"-"},"content":""},{"lineNumber":264,"author":{"gitID":"-"},"content":"* `list` +"},{"lineNumber":265,"author":{"gitID":"qiu-siqi"},"content":"`library 1` +"},{"lineNumber":266,"author":{"gitID":"qiu-siqi"},"content":"Search your chosen library for the 1st book in your book shelf."},{"lineNumber":267,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":268,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Placing a book on watchlist: `watch` `[coming in v1.4]`"},{"lineNumber":269,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":270,"author":{"gitID":"qiu-siqi"},"content":"Interested in so many books that searching them up using `library` is time consuming?"},{"lineNumber":271,"author":{"gitID":"qiu-siqi"},"content":"With `watch`, you can automatically get notified when a book in your watchlist"},{"lineNumber":272,"author":{"gitID":"qiu-siqi"},"content":"becomes available at the library, saving you the trouble! +"},{"lineNumber":273,"author":{"gitID":"qiu-siqi"},"content":"Format: `watch INDEX`"},{"lineNumber":274,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":275,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":276,"author":{"gitID":"qiu-siqi"},"content":"* Adds the book at the specified `INDEX` into your watchlist."},{"lineNumber":277,"author":{"gitID":"-"},"content":"* The index refers to the index number shown in the most recent listing."},{"lineNumber":278,"author":{"gitID":"-"},"content":"* The index *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":279,"author":{"gitID":"-"},"content":"****"},{"lineNumber":280,"author":{"gitID":"-"},"content":""},{"lineNumber":281,"author":{"gitID":"qiu-siqi"},"content":"[NOTE]"},{"lineNumber":282,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":283,"author":{"gitID":"qiu-siqi"},"content":"Bibliotek informs you of the availability of your watchlisted books in the library"},{"lineNumber":284,"author":{"gitID":"qiu-siqi"},"content":"everytime you start up the application."},{"lineNumber":285,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":286,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":287,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Ordering a book online: `order` `[coming in v1.5]`"},{"lineNumber":288,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":289,"author":{"gitID":"qiu-siqi"},"content":"If you wish to purchase a book, use `order`. +"},{"lineNumber":290,"author":{"gitID":"qiu-siqi"},"content":"Format: `order INDEX`"},{"lineNumber":291,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":292,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":293,"author":{"gitID":"qiu-siqi"},"content":"* Navigates to the purchase page for the book at the specified `INDEX`."},{"lineNumber":294,"author":{"gitID":"qiu-siqi"},"content":"* The online shopping site used is the \u003c\u003csettings-order,pre-configured site\u003e\u003e."},{"lineNumber":295,"author":{"gitID":"-"},"content":"* The index refers to the index number shown in the most recent listing."},{"lineNumber":296,"author":{"gitID":"-"},"content":"* The index *must be a positive integer* 1, 2, 3, ..."},{"lineNumber":297,"author":{"gitID":"-"},"content":"****"},{"lineNumber":298,"author":{"gitID":"-"},"content":""},{"lineNumber":299,"author":{"gitID":"qiu-siqi"},"content":"WARNING: You can only perform `order` with Internet connection."},{"lineNumber":300,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":301,"author":{"gitID":"qiu-siqi"},"content":"Examples:"},{"lineNumber":302,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":303,"author":{"gitID":"qiu-siqi"},"content":"* `list` +"},{"lineNumber":304,"author":{"gitID":"qiu-siqi"},"content":"`order 1` +"},{"lineNumber":305,"author":{"gitID":"qiu-siqi"},"content":"Opens the purchase page of the 1st book in your book shelf in your chosen site."},{"lineNumber":306,"author":{"gitID":"-"},"content":""},{"lineNumber":307,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Listing entered commands : `history`"},{"lineNumber":308,"author":{"gitID":"-"},"content":""},{"lineNumber":309,"author":{"gitID":"qiu-siqi"},"content":"If you want to view the commands that you have entered previously, use `history`. +"},{"lineNumber":310,"author":{"gitID":"-"},"content":"Format: `history`"},{"lineNumber":311,"author":{"gitID":"-"},"content":""},{"lineNumber":312,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":313,"author":{"gitID":"qiu-siqi"},"content":"* Lists the previous commands in reverse chronological order."},{"lineNumber":314,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":315,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":316,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":317,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":318,"author":{"gitID":"-"},"content":"Pressing the kbd:[\u0026uarr;] and kbd:[\u0026darr;] arrows will display the previous and next input respectively in the command box."},{"lineNumber":319,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":320,"author":{"gitID":"-"},"content":""},{"lineNumber":321,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Undoing previous command : `undo`"},{"lineNumber":322,"author":{"gitID":"-"},"content":""},{"lineNumber":323,"author":{"gitID":"qiu-siqi"},"content":"If you regret executing a command, use `undo` to reverse your action. +"},{"lineNumber":324,"author":{"gitID":"-"},"content":"Format: `undo`"},{"lineNumber":325,"author":{"gitID":"-"},"content":""},{"lineNumber":326,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":327,"author":{"gitID":"qiu-siqi"},"content":"* Restores the book shelf to the state before the previous _undoable_ command was executed."},{"lineNumber":328,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":329,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":330,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":331,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":332,"author":{"gitID":"qiu-siqi"},"content":"Undoable commands: those commands that modify the book shelf\u0027s content (`add`, `delete`, `edit` and `clear`)."},{"lineNumber":333,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":334,"author":{"gitID":"-"},"content":""},{"lineNumber":335,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":336,"author":{"gitID":"-"},"content":""},{"lineNumber":337,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":338,"author":{"gitID":"-"},"content":"`list` +"},{"lineNumber":339,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":340,"author":{"gitID":"-"},"content":""},{"lineNumber":341,"author":{"gitID":"-"},"content":"* `select 1` +"},{"lineNumber":342,"author":{"gitID":"-"},"content":"`list` +"},{"lineNumber":343,"author":{"gitID":"-"},"content":"`undo` +"},{"lineNumber":344,"author":{"gitID":"-"},"content":"The `undo` command fails as there are no undoable commands executed previously."},{"lineNumber":345,"author":{"gitID":"-"},"content":""},{"lineNumber":346,"author":{"gitID":"-"},"content":"* `delete 1` +"},{"lineNumber":347,"author":{"gitID":"-"},"content":"`clear` +"},{"lineNumber":348,"author":{"gitID":"-"},"content":"`undo` (reverses the `clear` command) +"},{"lineNumber":349,"author":{"gitID":"-"},"content":"`undo` (reverses the `delete 1` command) +"},{"lineNumber":350,"author":{"gitID":"-"},"content":""},{"lineNumber":351,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Clearing all entries : `clear`"},{"lineNumber":352,"author":{"gitID":"-"},"content":""},{"lineNumber":353,"author":{"gitID":"qiu-siqi"},"content":"Don\u0027t need the data in your book shelf anymore? Remove them using `clear`. +"},{"lineNumber":354,"author":{"gitID":"-"},"content":"Format: `clear`"},{"lineNumber":355,"author":{"gitID":"-"},"content":""},{"lineNumber":356,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Changing application theme `[since v1.2]`"},{"lineNumber":357,"author":{"gitID":"-"},"content":""},{"lineNumber":358,"author":{"gitID":"-"},"content":"If you don\u0027t like the default theme used by Bibliotek, you can change it using `theme`. +"},{"lineNumber":359,"author":{"gitID":"-"},"content":"Format: `theme THEME_NAME`"},{"lineNumber":360,"author":{"gitID":"-"},"content":""},{"lineNumber":361,"author":{"gitID":"-"},"content":"****"},{"lineNumber":362,"author":{"gitID":"-"},"content":"* `THEME_NAME` must specify a valid theme, and is case-insensitive."},{"lineNumber":363,"author":{"gitID":"-"},"content":"* The current available themes are: `white`, `light`, and `dark`."},{"lineNumber":364,"author":{"gitID":"-"},"content":"****"},{"lineNumber":365,"author":{"gitID":"-"},"content":""},{"lineNumber":366,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Changing settings: `settings` `[coming in v1.4]`"},{"lineNumber":367,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":368,"author":{"gitID":"qiu-siqi"},"content":"[[settings-library]]"},{"lineNumber":369,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d Library `[coming in v1.4]`"},{"lineNumber":370,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":371,"author":{"gitID":"qiu-siqi"},"content":"If you want to search for books in other libraries, you can change your settings. +"},{"lineNumber":372,"author":{"gitID":"qiu-siqi"},"content":"Format: `settings lib/LIBRARY`"},{"lineNumber":373,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":374,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":375,"author":{"gitID":"qiu-siqi"},"content":"* Change the library searched when you perform `library`."},{"lineNumber":376,"author":{"gitID":"qiu-siqi"},"content":"* Default library searched is National Library Board."},{"lineNumber":377,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":378,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":379,"author":{"gitID":"qiu-siqi"},"content":"[NOTE]"},{"lineNumber":380,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":381,"author":{"gitID":"qiu-siqi"},"content":"Only some libraries are supported. Do https://f14-b4.netlify.com/contactus[contact us]"},{"lineNumber":382,"author":{"gitID":"qiu-siqi"},"content":"if there are other libraries you wish are supported."},{"lineNumber":383,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":384,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":385,"author":{"gitID":"qiu-siqi"},"content":"[[settings-order]]"},{"lineNumber":386,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d Online shopping site `[coming in v1.5]`"},{"lineNumber":387,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":388,"author":{"gitID":"qiu-siqi"},"content":"If you want to purchase books on other online booksellers, you can change your settings. +"},{"lineNumber":389,"author":{"gitID":"qiu-siqi"},"content":"Format: `settings order/SITE`"},{"lineNumber":390,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":391,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":392,"author":{"gitID":"qiu-siqi"},"content":"* Change the online bookseller searched when you perform `order`."},{"lineNumber":393,"author":{"gitID":"qiu-siqi"},"content":"* Default online book selling site is Book Depository."},{"lineNumber":394,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":395,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":396,"author":{"gitID":"qiu-siqi"},"content":"[NOTE]"},{"lineNumber":397,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":398,"author":{"gitID":"qiu-siqi"},"content":"Only some sites are supported. Do https://f14-b4.netlify.com/contactus[contact us]"},{"lineNumber":399,"author":{"gitID":"qiu-siqi"},"content":"if there are other sites you wish are supported."},{"lineNumber":400,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":401,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":402,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d Command alias `[coming in v1.5]`"},{"lineNumber":403,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":404,"author":{"gitID":"qiu-siqi"},"content":"If you don\u0027t like the word for a command or think it is too long, you can add a"},{"lineNumber":405,"author":{"gitID":"qiu-siqi"},"content":"command alias to make the command more intuitive or reduce typing. +"},{"lineNumber":406,"author":{"gitID":"qiu-siqi"},"content":"Format: `settings alias/COMMAND: ALIAS`"},{"lineNumber":407,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":408,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":409,"author":{"gitID":"qiu-siqi"},"content":"* Change the alias of the given command."},{"lineNumber":410,"author":{"gitID":"qiu-siqi"},"content":"* Each command can have 1 alias."},{"lineNumber":411,"author":{"gitID":"qiu-siqi"},"content":"* By default, all commands have no alias."},{"lineNumber":412,"author":{"gitID":"qiu-siqi"},"content":"****"},{"lineNumber":413,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":414,"author":{"gitID":"qiu-siqi"},"content":"TIP: Remove the alias using `settings alias/COMMAND:`"},{"lineNumber":415,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":416,"author":{"gitID":"qiu-siqi"},"content":"Examples:"},{"lineNumber":417,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":418,"author":{"gitID":"qiu-siqi"},"content":"* `settings alias/add: a` +"},{"lineNumber":419,"author":{"gitID":"qiu-siqi"},"content":"Change the command alias of `add` to `a`."},{"lineNumber":420,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":421,"author":{"gitID":"qiu-siqi"},"content":"* `settings alias/add:` +"},{"lineNumber":422,"author":{"gitID":"qiu-siqi"},"content":"Remove the command alias of `add`."},{"lineNumber":423,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":424,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d Font size `[coming in v2.0]`"},{"lineNumber":425,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":426,"author":{"gitID":"qiu-siqi"},"content":"Think the font size is too small or large for your liking? You can customize the"},{"lineNumber":427,"author":{"gitID":"qiu-siqi"},"content":"font size to your own needs. +"},{"lineNumber":428,"author":{"gitID":"qiu-siqi"},"content":"Format: `settings fontsize/FONTSIZE`"},{"lineNumber":429,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":430,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d Password `[coming in v2.0]`"},{"lineNumber":431,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":432,"author":{"gitID":"qiu-siqi"},"content":"If you want to keep your data secure, you can opt to set a password for the application. +"},{"lineNumber":433,"author":{"gitID":"qiu-siqi"},"content":"Format: `settings password/PASSWORD`"},{"lineNumber":434,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":435,"author":{"gitID":"qiu-siqi"},"content":"[NOTE]"},{"lineNumber":436,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":437,"author":{"gitID":"qiu-siqi"},"content":"You will be prompted for the password upon starting up the application. You will"},{"lineNumber":438,"author":{"gitID":"qiu-siqi"},"content":"not need to enter it again thereafter (ie. when using commands)."},{"lineNumber":439,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d"},{"lineNumber":440,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":441,"author":{"gitID":"qiu-siqi"},"content":"TIP: Remove your password using `settings password/`"},{"lineNumber":442,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":443,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Closing the program : `exit`"},{"lineNumber":444,"author":{"gitID":"-"},"content":""},{"lineNumber":445,"author":{"gitID":"qiu-siqi"},"content":"Use `exit` to close the program. +"},{"lineNumber":446,"author":{"gitID":"-"},"content":"Format: `exit`"},{"lineNumber":447,"author":{"gitID":"-"},"content":""},{"lineNumber":448,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Saving the data"},{"lineNumber":449,"author":{"gitID":"-"},"content":""},{"lineNumber":450,"author":{"gitID":"qiu-siqi"},"content":"Bibliotek saves data in the hard disk automatically after any command that changes the data. +"},{"lineNumber":451,"author":{"gitID":"-"},"content":"There is no need to save manually."},{"lineNumber":452,"author":{"gitID":"-"},"content":""},{"lineNumber":453,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Getting book recommendations: `suggest` `[coming in v2.0]`"},{"lineNumber":454,"author":{"gitID":"-"},"content":""},{"lineNumber":455,"author":{"gitID":"qiu-siqi"},"content":"Having problems deciding what to read next? Bibliotek can give you book recommendations"},{"lineNumber":456,"author":{"gitID":"qiu-siqi"},"content":"based on the books in your book shelf. Use `suggest` to obtain your personalized recommendations! +"},{"lineNumber":457,"author":{"gitID":"qiu-siqi"},"content":"Format: `suggest`"},{"lineNumber":458,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":459,"author":{"gitID":"qiu-siqi"},"content":"TIP: Give appropriate ratings to books you have read to obtain recommendations that are closer to your preferences."},{"lineNumber":460,"author":{"gitID":"-"},"content":""},{"lineNumber":461,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Importing books from other E-Readers: `import` `[coming in v2.0]`"},{"lineNumber":462,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":463,"author":{"gitID":"qiu-siqi"},"content":"If you are using other E-Readers and have many books in your collection that you wish to"},{"lineNumber":464,"author":{"gitID":"qiu-siqi"},"content":"add into your Bibliotek book shelf, `import` is the command you are looking for. +"},{"lineNumber":465,"author":{"gitID":"qiu-siqi"},"content":"Format: `import SOURCE`"},{"lineNumber":466,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":467,"author":{"gitID":"-"},"content":"\u003d\u003d FAQ"},{"lineNumber":468,"author":{"gitID":"-"},"content":""},{"lineNumber":469,"author":{"gitID":"-"},"content":"*Q*: How do I transfer my data to another Computer? +"},{"lineNumber":470,"author":{"gitID":"qiu-siqi"},"content":"*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Bibliotek folder."},{"lineNumber":471,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":472,"author":{"gitID":"qiu-siqi"},"content":"*Q*: Why do my commands keep timing out? +"},{"lineNumber":473,"author":{"gitID":"qiu-siqi"},"content":"*A*: The external service may be down at the moment. You should try again after some time."},{"lineNumber":474,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":475,"author":{"gitID":"qiu-siqi"},"content":"*Q*: I have a problem and this guide did not help. +"},{"lineNumber":476,"author":{"gitID":"qiu-siqi"},"content":"*A*: Post in our https://github.com/CS2103JAN2018-F14-B4/main/issues[issues page] and we will try our best to answer your queries."},{"lineNumber":477,"author":{"gitID":"-"},"content":""},{"lineNumber":478,"author":{"gitID":"-"},"content":"\u003d\u003d Command Summary"},{"lineNumber":479,"author":{"gitID":"-"},"content":""},{"lineNumber":480,"author":{"gitID":"qiu-siqi"},"content":"* *Add* `add INDEX` +"},{"lineNumber":481,"author":{"gitID":"qiu-siqi"},"content":"e.g. `add 1`"},{"lineNumber":482,"author":{"gitID":"-"},"content":"* *Clear* : `clear`"},{"lineNumber":483,"author":{"gitID":"-"},"content":"* *Delete* : `delete INDEX` +"},{"lineNumber":484,"author":{"gitID":"qiu-siqi"},"content":"//* *Edit* : `edit INDEX [s/STATUS] [p/PRIORITY] [r/RATING]` +"},{"lineNumber":485,"author":{"gitID":"qiu-siqi"},"content":"//e.g. `edit 2 s/READ r/5`"},{"lineNumber":486,"author":{"gitID":"qiu-siqi"},"content":"* *Exit* : `exit`"},{"lineNumber":487,"author":{"gitID":"-"},"content":"* *Help* : `help`"},{"lineNumber":488,"author":{"gitID":"qiu-siqi"},"content":"* *History* : `history`"},{"lineNumber":489,"author":{"gitID":"qiu-siqi"},"content":"//* *Import* : `import SOURCE`"},{"lineNumber":490,"author":{"gitID":"qiu-siqi"},"content":"//* *Library* : `library INDEX` +"},{"lineNumber":491,"author":{"gitID":"qiu-siqi"},"content":"* *List* : `list`"},{"lineNumber":492,"author":{"gitID":"qiu-siqi"},"content":"//*Order* : `order INDEX`"},{"lineNumber":493,"author":{"gitID":"qiu-siqi"},"content":"* *Recent* : `recent`"},{"lineNumber":494,"author":{"gitID":"qiu-siqi"},"content":"//* *Reviews* : `reviews INDEX`"},{"lineNumber":495,"author":{"gitID":"qiu-siqi"},"content":"* *Search* : `search [SEARCH_TERM] [i/ISBN] [t/TITLE] [a/AUTHOR] [c/CATEGORY]` +"},{"lineNumber":496,"author":{"gitID":"qiu-siqi"},"content":"e.g. `search t/Babylon\u0027s Ashes c/Science Fiction`"},{"lineNumber":497,"author":{"gitID":"-"},"content":"* *Select* : `select INDEX` +"},{"lineNumber":498,"author":{"gitID":"-"},"content":"* *Theme* : `theme THEME_NAME` +"},{"lineNumber":499,"author":{"gitID":"qiu-siqi"},"content":"//* *Settings* : `settings ...` +"},{"lineNumber":500,"author":{"gitID":"qiu-siqi"},"content":"//e.g. `settings lib/NLB`"},{"lineNumber":501,"author":{"gitID":"-"},"content":"* *Undo* : `undo`"},{"lineNumber":502,"author":{"gitID":"qiu-siqi"},"content":"//* *Watchlist*: `watch INDEX`"}],"authorContributionMap":{"qiu-siqi":302,"takuyakanbr":6,"-":194}},{"path":"src/test/java/systemtests/SampleDataTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.util.SampleDataUtil;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TestUtil;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"public class SampleDataTest extends BibliotekSystemTest {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * Returns null to force test app to load data of the file in {@code getDataFileLocation()}."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    protected BookShelf getInitialData() {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        return null;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     * Returns a non-existent file location to force test app to load sample data."},{"lineNumber":27,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    protected String getDataFileLocation() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        String filePath \u003d TestUtil.getFilePathInSandboxFolder(\"SomeFileThatDoesNotExist1234567890.xml\");"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        deleteFileIfExists(filePath);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        return filePath;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * Deletes the file at {@code filePath} if it exists."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private void deleteFileIfExists(String filePath) {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"            Files.deleteIfExists(Paths.get(filePath));"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"            throw new AssertionError(ioe);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    public void bookShelf_dataFileDoesNotExist_loadSampleData() {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        Book[] expectedList \u003d SampleDataUtil.getSampleBooks();"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(getBookListPanel(), expectedList);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"takuyakanbr":1,"-":44}},{"path":"src/test/java/systemtests/DeleteCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.DeleteCommand.MESSAGE_DELETE_BOOK_SUCCESS;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TestUtil.getBook;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TestUtil.getLastIndex;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TestUtil.getMidIndex;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"public class DeleteCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private static final String MESSAGE_INVALID_DELETE_COMMAND_FORMAT \u003d"},{"lineNumber":24,"author":{"gitID":"-"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public void delete() {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        /* ----------------- Performing delete operation while an unfiltered list is being shown -------------------- */"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: delete the first book in the list, command with leading spaces and trailing spaces -\u003e deleted */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        String command \u003d \"     \" + DeleteCommand.COMMAND_WORD + \"      \" + INDEX_FIRST_BOOK.getOneBased() + \"       \";"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        Book deletedBook \u003d removeBook(expectedModel, INDEX_FIRST_BOOK);"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        String expectedResultMessage \u003d String.format(MESSAGE_DELETE_BOOK_SUCCESS, deletedBook);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage);"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: delete the last book in the list -\u003e deleted */"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        Model modelBeforeDeletingLast \u003d getModel();"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        Index lastBookIndex \u003d getLastIndex(modelBeforeDeletingLast);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandSuccess(lastBookIndex);"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: undo deleting the last book in the list -\u003e last book restored */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, modelBeforeDeletingLast, expectedResultMessage);"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: delete the middle book in the list -\u003e deleted */"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        Index middleBookIndex \u003d getMidIndex(getModel());"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandSuccess(middleBookIndex);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        /* --------------------- Performing delete operation while a book card is selected ------------------------ */"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: delete the selected book -\u003e book list panel selects the book before the deleted book */"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        showAllBooks();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        Index selectedIndex \u003d getLastIndex(expectedModel);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        Index expectedIndex \u003d Index.fromZeroBased(selectedIndex.getZeroBased() - 1);"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        selectBook(selectedIndex);"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.addRecentBook(expectedModel.getFilteredBookList().get(selectedIndex.getZeroBased()));"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + selectedIndex.getOneBased();"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        deletedBook \u003d removeBook(expectedModel, selectedIndex);"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.addRecentBook(expectedModel.getFilteredBookList().get(expectedIndex.getZeroBased()));"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        expectedResultMessage \u003d String.format(MESSAGE_DELETE_BOOK_SUCCESS, deletedBook);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, expectedIndex);"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        /* --------------------------------- Performing invalid delete operation ------------------------------------ */"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" 0\";"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" -1\";"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased("},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"                getModel().getBookShelf().getBookList().size() + 1);"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + outOfBoundsIndex.getOneBased();"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (alphabets) -\u003e rejected */"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        assertCommandFailure(DeleteCommand.COMMAND_WORD + \" abc\", MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (extra argument) -\u003e rejected */"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertCommandFailure(DeleteCommand.COMMAND_WORD + \" 1 abc\", MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"DelETE 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"     * Removes the {@code Book} at the specified {@code index} in {@code model}\u0027s book shelf."},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"     * @return the removed book."},{"lineNumber":95,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"    private Book removeBook(Model model, Index index) {"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        Book targetBook \u003d getBook(model, index);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"            model.deleteBook(targetBook);"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        } catch (BookNotFoundException pnfe) {"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"            throw new AssertionError(\"targetBook is retrieved from model.\");"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        return targetBook;"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"     * Deletes the book at {@code toDelete} by creating a default {@code DeleteCommand} using {@code toDelete} and"},{"lineNumber":108,"author":{"gitID":"-"},"content":"     * performs the same verification as {@code assertCommandSuccess(String, Model, String)}."},{"lineNumber":109,"author":{"gitID":"-"},"content":"     * @see DeleteCommandSystemTest#assertCommandSuccess(String, Model, String)"},{"lineNumber":110,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":111,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(Index toDelete) {"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        Book deletedBook \u003d removeBook(expectedModel, toDelete);"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"        String expectedResultMessage \u003d String.format(MESSAGE_DELETE_BOOK_SUCCESS, deletedBook);"},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"        assertCommandSuccess("},{"lineNumber":117,"author":{"gitID":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + toDelete.getOneBased(), expectedModel, expectedResultMessage);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":121,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":122,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays an empty string.\u003cbr\u003e"},{"lineNumber":123,"author":{"gitID":"-"},"content":"     * 2. Asserts that the result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":124,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":125,"author":{"gitID":"-"},"content":"     * 4. Asserts that the selected book list card and search results card remains unchanged.\u003cbr\u003e"},{"lineNumber":126,"author":{"gitID":"-"},"content":"     * 5. Asserts that the status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":127,"author":{"gitID":"-"},"content":"     * 6. Asserts that the command box has the default style class.\u003cbr\u003e"},{"lineNumber":128,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":129,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}."},{"lineNumber":130,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":131,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, null);"},{"lineNumber":134,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitID":"-"},"content":""},{"lineNumber":136,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":137,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String)} except that the selected"},{"lineNumber":138,"author":{"gitID":"-"},"content":"     * book list card is expected to update accordingly depending on the card at {@code expectedSelectedCardIndex}."},{"lineNumber":139,"author":{"gitID":"-"},"content":"     * @see DeleteCommandSystemTest#assertCommandSuccess(String, Model, String)"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"     * @see BibliotekSystemTest#assertSelectedBookListCardChanged(Index)"},{"lineNumber":141,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":142,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage,"},{"lineNumber":143,"author":{"gitID":"-"},"content":"            Index expectedSelectedCardIndex) {"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":146,"author":{"gitID":"-"},"content":""},{"lineNumber":147,"author":{"gitID":"-"},"content":"        if (expectedSelectedCardIndex !\u003d null) {"},{"lineNumber":148,"author":{"gitID":"takuyakanbr"},"content":"            assertSelectedBookListCardChanged(expectedSelectedCardIndex);"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":150,"author":{"gitID":"takuyakanbr"},"content":"            assertSelectedBookListCardUnchanged();"},{"lineNumber":151,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitID":"-"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":155,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":14,"takuyakanbr":30,"-":113}},{"path":"src/test/java/systemtests/HelpCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertDetailsPanelDisplaysBook;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import guitests.GuiRobot;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import guitests.guihandles.HelpWindowHandle;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HelpCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.ui.StatusBarFooter;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"-"},"content":" * A system test class for the help window, which contains interaction with other UI components."},{"lineNumber":21,"author":{"gitID":"-"},"content":" */"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"public class HelpCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private static final String ERROR_MESSAGE \u003d \"ATTENTION!!!! : On some computers, this test may fail when run on \""},{"lineNumber":24,"author":{"gitID":"-"},"content":"            + \"non-headless mode as FxRobot#clickOn(Node, MouseButton...) clicks on the wrong location. We suspect \""},{"lineNumber":25,"author":{"gitID":"-"},"content":"            + \"that this is a bug with TestFX library that we are using. If this test fails, you have to run your \""},{"lineNumber":26,"author":{"gitID":"-"},"content":"            + \"tests on headless mode. See UsingGradle.adoc on how to do so.\";"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    private final GuiRobot guiRobot \u003d new GuiRobot();"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public void openHelpWindow() {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        // use accelerator"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        getCommandBox().click();"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        getResultDisplay().click();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        getBookListPanel().click();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        getBookDetailsPanel().click();"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        // use menu button"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingMenu();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        // use command box"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        // open help window and give it focus"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        getMainWindowHandle().focus();"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"        // assert that while the help window is open the UI updates correctly for a command execution"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased());"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        assertEquals(\"\", getCommandBox().getInput());"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertNotEquals(HelpCommand.SHOWING_HELP_MESSAGE, getResultDisplay().getText());"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        assertDetailsPanelDisplaysBook(getModel().getFilteredBookList().get(0), getBookDetailsPanel());"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(getBookListPanel(), getModel().getFilteredBookList());"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"        // assert that the status bar too is updated correctly while the help window is open"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        // note: the select command tested above does not update the status bar"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased());"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        assertNotEquals(StatusBarFooter.SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"-"},"content":"     * Asserts that the help window is open, and closes it after checking."},{"lineNumber":77,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    private void assertHelpWindowOpen() {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        assertTrue(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"        new HelpWindowHandle(guiRobot.getStage(HelpWindowHandle.HELP_WINDOW_TITLE)).close();"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        getMainWindowHandle().focus();"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"takuyakanbr":3,"-":77}},{"path":"src/test/java/systemtests/SystemTestSetupHelper.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.concurrent.TimeoutException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Supplier;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.testfx.api.FxToolkit;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainWindowHandle;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.TestApp;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * Contains helper methods that system tests require."},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class SystemTestSetupHelper {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private TestApp testApp;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    private MainWindowHandle mainWindowHandle;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"-"},"content":"     * Sets up a new {@code TestApp} and returns it."},{"lineNumber":22,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    public TestApp setupApplication(Supplier\u003cReadOnlyBookShelf\u003e bookShelf, String saveFileLocation) {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"            FxToolkit.registerStage(Stage::new);"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"            FxToolkit.setupApplication(() -\u003e testApp \u003d new TestApp(bookShelf, saveFileLocation));"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        } catch (TimeoutException te) {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Application takes too long to set up.\");"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return testApp;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * Initializes TestFX."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public static void initialize() {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"            FxToolkit.registerPrimaryStage();"},{"lineNumber":40,"author":{"gitID":"-"},"content":"            FxToolkit.hideStage();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        } catch (TimeoutException e) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"            throw new AssertionError(e);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * Encapsulates the primary stage of {@code TestApp} in a {@code MainWindowHandle} and returns it."},{"lineNumber":48,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public MainWindowHandle setupMainWindowHandle() {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            FxToolkit.setupStage((stage) -\u003e {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"                mainWindowHandle \u003d new MainWindowHandle(stage);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"                mainWindowHandle.focus();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            });"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            FxToolkit.showStage();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        } catch (TimeoutException te) {"},{"lineNumber":57,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Stage takes too long to set up.\");"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        return mainWindowHandle;"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":64,"author":{"gitID":"-"},"content":"     * Tears down existing stages."},{"lineNumber":65,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void tearDownStage() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            FxToolkit.cleanupStages();"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        } catch (TimeoutException te) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Stage takes too long to tear down.\");"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"-":70}},{"path":"src/test/java/systemtests/ClearCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"public class ClearCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public void clear() {"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        Model model \u003d getModel();"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: clear non-empty book shelf, command with leading spaces and trailing alphanumeric characters and"},{"lineNumber":22,"author":{"gitID":"-"},"content":"         * spaces -\u003e cleared */"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        assertCommandSuccess(\"   \" + ClearCommand.COMMAND_WORD + \" ab12   \");"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedBookListCardUnchanged();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: undo clearing book shelf -\u003e original book shelf restored */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        String command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(command,  expectedResultMessage, model);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedBookListCardUnchanged();"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: selects first card in book list and clears book shelf -\u003e cleared and no card selected */"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        executeCommand(UndoCommand.COMMAND_WORD); // restores the original book shelf"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        selectBook(Index.fromOneBased(1));"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        assertCommandSuccess(ClearCommand.COMMAND_WORD);"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedBookListCardDeselected();"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: clear empty book shelf -\u003e cleared */"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertCommandSuccess(ClearCommand.COMMAND_WORD);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedBookListCardUnchanged();"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"ClEaR\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * Executes {@code command} and verifies that the command box displays an empty string, the result display"},{"lineNumber":48,"author":{"gitID":"-"},"content":"     * box displays {@code ClearCommand#MESSAGE_SUCCESS} and the model related components equal to an empty model."},{"lineNumber":49,"author":{"gitID":"-"},"content":"     * These verifications are done by"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":51,"author":{"gitID":"-"},"content":"     * Also verifies that the command box has the default style class and the status bar\u0027s sync status changes."},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command) {"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(command, ClearCommand.MESSAGE_SUCCESS,"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"                new ModelManager(new BookShelf(), new UserPrefs(), getModel().getRecentBooksListAsBookShelf()));"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":60,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String)} except that the result box displays"},{"lineNumber":61,"author":{"gitID":"-"},"content":"     * {@code expectedResultMessage} and the model related components equal to {@code expectedModel}."},{"lineNumber":62,"author":{"gitID":"-"},"content":"     * @see ClearCommandSystemTest#assertCommandSuccess(String)"},{"lineNumber":63,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, String expectedResultMessage, Model expectedModel) {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":10,"takuyakanbr":9,"-":52}},{"path":"src/test/java/systemtests/AddCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import guitests.GuiRobot;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"public class AddCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public void add() throws Exception {"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        executeCommand(\"clear\");"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(SearchCommand.COMMAND_WORD + \" hello\");"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"        new GuiRobot().waitForEvent(() -\u003e !getResultDisplay().getText().equals(SearchCommand.MESSAGE_SEARCHING));"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        Model model \u003d getModel();"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        ObservableList\u003cBook\u003e searchResultsList \u003d model.getSearchResultsList();"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        /* --------------------- Perform add operations on the search results list -------------------------- */"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        /* Case: add a book to a non-empty book shelf, command with leading spaces and trailing spaces -\u003e added */"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        Book firstBook \u003d searchResultsList.get(0);"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        String command \u003d \"   \" + AddCommand.COMMAND_WORD + \"  1\";"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(command, firstBook);"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: undo adding firstBook to the list -\u003e firstBook deleted */"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: add to empty book shelf -\u003e added */"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        deleteAllBooks();"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(SearchCommand.COMMAND_WORD + \" hello\");"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        new GuiRobot().waitForEvent(() -\u003e !getResultDisplay().getText().equals(SearchCommand.MESSAGE_SEARCHING));"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d getModel();"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        searchResultsList \u003d model.getSearchResultsList();"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        command \u003d AddCommand.COMMAND_WORD + \" 1\";"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        firstBook \u003d searchResultsList.get(0);"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(command, firstBook);"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        /* --------------------- Perform add operation while a book card is selected ------------------------ */"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: selects first card in the book list, add a book -\u003e added, card selection remains unchanged */"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"        selectSearchResult(Index.fromOneBased(1));"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        command \u003d AddCommand.COMMAND_WORD + \" 2\";"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(command, searchResultsList.get(1));"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        /* ------------------------------- Perform invalid add operations ----------------------------------- */"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: add a duplicate book -\u003e rejected */"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d getModel();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        new GuiRobot().waitForEvent(() -\u003e !getResultDisplay().getText().equals(AddCommand.MESSAGE_ADDING));"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        assertApplicationDisplaysExpected(\"\", AddCommand.MESSAGE_DUPLICATE_BOOK, model);"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(AddCommand.COMMAND_WORD + \" \" + 0,"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(AddCommand.COMMAND_WORD + \" \" + -1,"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"        int invalidIndex \u003d searchResultsList.size() + 1;"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(AddCommand.COMMAND_WORD + \" \" + invalidIndex, MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: invalid arguments (alphabets) -\u003e rejected */"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(AddCommand.COMMAND_WORD + \" abc\","},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: invalid arguments (extra argument) -\u003e rejected */"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(AddCommand.COMMAND_WORD + \" 1 2\","},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"        /* Case: invalid keyword -\u003e rejected */"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(\"adds 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(\"Add 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: invalid active list type */"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(\"list\");"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(AddCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased(),"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"                AddCommand.MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: add from empty search result list -\u003e rejected */"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(SearchCommand.COMMAND_WORD + \" !@#$%^\u0026*()(*%$#@!#$%^\u0026\u0026*\");"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        new GuiRobot().waitForEvent(() -\u003e !getResultDisplay().getText().equals(SearchCommand.MESSAGE_SEARCHING));"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"        model.updateSearchResults(new BookShelf());"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(AddCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased(),"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"                MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"        /* --------------------- Perform add operations on the recent books list -------------------------- */"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: invalid index -\u003e rejected */"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(\"recent\");"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(AddCommand.COMMAND_WORD + \" \" + (model.getRecentBooksList().size() + 1),"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"                MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: add a duplicate book -\u003e rejected */"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(\"list\");"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"        selectBook(INDEX_FIRST_BOOK);"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(\"recent\");"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d getModel();"},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"        command \u003d AddCommand.COMMAND_WORD + \" 1\";"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":"        new GuiRobot().waitForEvent(() -\u003e !getResultDisplay().getText().equals(AddCommand.MESSAGE_ADDING));"},{"lineNumber":129,"author":{"gitID":"qiu-siqi"},"content":"        assertApplicationDisplaysExpected(\"\", AddCommand.MESSAGE_DUPLICATE_BOOK, model);"},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"qiu-siqi"},"content":"        /* Case: add a valid book -\u003e added */"},{"lineNumber":132,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(SearchCommand.COMMAND_WORD + \" mary\");"},{"lineNumber":133,"author":{"gitID":"qiu-siqi"},"content":"        new GuiRobot().waitForEvent(() -\u003e !getResultDisplay().getText().equals(SearchCommand.MESSAGE_SEARCHING));"},{"lineNumber":134,"author":{"gitID":"qiu-siqi"},"content":"        selectSearchResult(INDEX_FIRST_BOOK);"},{"lineNumber":135,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(\"recent\");"},{"lineNumber":136,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d getModel();"},{"lineNumber":137,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":138,"author":{"gitID":"qiu-siqi"},"content":"        command \u003d AddCommand.COMMAND_WORD + \" 1\";"},{"lineNumber":139,"author":{"gitID":"qiu-siqi"},"content":"        firstBook \u003d model.getRecentBooksList().get(0);"},{"lineNumber":140,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":141,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(command, firstBook);"},{"lineNumber":142,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":145,"author":{"gitID":"qiu-siqi"},"content":"     * Executes {@code command} and verifies that, after the web API has returned a result,\u003cbr\u003e"},{"lineNumber":146,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":147,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":148,"author":{"gitID":"qiu-siqi"},"content":"     * 3. Result display box displays the search successful message.\u003cbr\u003e"},{"lineNumber":149,"author":{"gitID":"takuyakanbr"},"content":"     * 4. {@code Model}, {@code Storage} and {@code BookListPanel} equal to the corresponding components in"},{"lineNumber":150,"author":{"gitID":"-"},"content":"     * the current model added with {@code toAdd}.\u003cbr\u003e"},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * 5. Selected book list card and search results card remain unchanged.\u003cbr\u003e"},{"lineNumber":152,"author":{"gitID":"-"},"content":"     * 6. Status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":153,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":154,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":155,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":156,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertSelectedBookListCardChanged(Index)"},{"lineNumber":157,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitID":"qiu-siqi"},"content":"    private void assertCommandSuccess(String command, Book toAdd) throws Exception {"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":163,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":164,"author":{"gitID":"qiu-siqi"},"content":"        new GuiRobot().waitForEvent(() -\u003e !getResultDisplay().getText().equals(AddCommand.MESSAGE_ADDING));"},{"lineNumber":165,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":166,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":167,"author":{"gitID":"takuyakanbr"},"content":"            expectedModel.addBook(toAdd);"},{"lineNumber":168,"author":{"gitID":"takuyakanbr"},"content":"        } catch (DuplicateBookException dpe) {"},{"lineNumber":169,"author":{"gitID":"-"},"content":"            throw new IllegalArgumentException(\"toAdd already exists in the model.\");"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, toAdd);"},{"lineNumber":172,"author":{"gitID":"qiu-siqi"},"content":"        assertBookInBookShelf(toAdd);"},{"lineNumber":173,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.resetData(getModel().getBookShelf());"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":176,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedBookListCardUnchanged();"},{"lineNumber":177,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedSearchResultsCardUnchanged();"},{"lineNumber":178,"author":{"gitID":"qiu-siqi"},"content":"        assertSelectedRecentBooksCardUnchanged();"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":181,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitID":"-"},"content":""},{"lineNumber":183,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":184,"author":{"gitID":"takuyakanbr"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Book)} except asserts that"},{"lineNumber":185,"author":{"gitID":"-"},"content":"     * the,\u003cbr\u003e"},{"lineNumber":186,"author":{"gitID":"-"},"content":"     * 1. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":187,"author":{"gitID":"-"},"content":"     * 2. {@code Model}, {@code Storage}, {@code BookListPanel}, and {@code SearchResultsPanel} equal to the"},{"lineNumber":188,"author":{"gitID":"-"},"content":"     * corresponding components in {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":189,"author":{"gitID":"takuyakanbr"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(String, Book)"},{"lineNumber":190,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":191,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":194,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedBookListCardUnchanged();"},{"lineNumber":195,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedSearchResultsCardUnchanged();"},{"lineNumber":196,"author":{"gitID":"qiu-siqi"},"content":"        assertSelectedRecentBooksCardUnchanged();"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":199,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitID":"-"},"content":""},{"lineNumber":201,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":202,"author":{"gitID":"qiu-siqi"},"content":"     * Checks that {@code book} is contained in the latest book shelf."},{"lineNumber":203,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":204,"author":{"gitID":"qiu-siqi"},"content":"    private void assertBookInBookShelf(Book book) {"},{"lineNumber":205,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(getModel().getBookShelf().getBookList().contains(book));"},{"lineNumber":206,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":207,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":115,"takuyakanbr":17,"-":75}},{"path":"src/test/java/systemtests/ModelHelper.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * Contains helper methods to set up {@code Model} for testing."},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class ModelHelper {"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    private static final Predicate\u003cBook\u003e PREDICATE_MATCHING_NO_BOOKS \u003d unused -\u003e false;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"-"},"content":"     * Updates {@code model}\u0027s filtered list to display only {@code toDisplay}."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    public static void setFilteredList(Model model, List\u003cBook\u003e toDisplay) {"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cPredicate\u003cBook\u003e\u003e predicate \u003d"},{"lineNumber":24,"author":{"gitID":"-"},"content":"                toDisplay.stream().map(ModelHelper::getPredicateMatching).reduce(Predicate::or);"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(predicate.orElse(PREDICATE_MATCHING_NO_BOOKS));"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"-"},"content":"     * @see ModelHelper#setFilteredList(Model, List)"},{"lineNumber":30,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    public static void setFilteredList(Model model, Book... toDisplay) {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        setFilteredList(model, Arrays.asList(toDisplay));"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"     * Updates {@code model}\u0027s search results to be {@code results}."},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public static void setSearchResults(Model model, List\u003cBook\u003e results) {"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf searchResults \u003d new BookShelf();"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"            searchResults.setBooks(results);"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        } catch (DuplicateBookException e) {"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"            throw new AssertionError(\"Results contains duplicate books.\");"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        model.updateSearchResults(searchResults);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"     * Updates {@code model}\u0027s recent books to be {@code results}."},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"    public static void setRecentBooks(Model model, List\u003cBook\u003e results) {"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        for (int index \u003d results.size() - 1; index \u003e\u003d 0; index--) {"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"            model.addRecentBook(results.get(index));"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a predicate that evaluates to true if this {@code Book} equals to {@code other}."},{"lineNumber":59,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    private static Predicate\u003cBook\u003e getPredicateMatching(Book other) {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        return book -\u003e book.equals(other);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":18,"takuyakanbr":15,"-":30}},{"path":"src/test/java/systemtests/SelectCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.SelectCommand.MESSAGE_SELECT_BOOK_SUCCESS;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import guitests.GuiRobot;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.commands.RecentCommand;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"public class SelectCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public void select() {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform select operations on the shown unfiltered list -------------------------- */"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: select the first card in the book list, command with leading spaces and trailing spaces"},{"lineNumber":26,"author":{"gitID":"-"},"content":"         * -\u003e selected"},{"lineNumber":27,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        String command \u003d \"   \" + SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased() + \"   \";"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        assertBookListSelectSuccess(command, INDEX_FIRST_BOOK);"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: select the last card in the book list -\u003e selected */"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        Index bookCount \u003d Index.fromOneBased(TypicalBooks.getTypicalBooks().size());"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + bookCount.getOneBased();"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        assertBookListSelectSuccess(command, bookCount);"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"        /* Case: undo previous selection -\u003e rejected */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_FAILURE;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: select the middle card in the book list -\u003e selected */"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        Index middleIndex \u003d Index.fromOneBased(bookCount.getOneBased() / 2);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + middleIndex.getOneBased();"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        assertBookListSelectSuccess(command, middleIndex);"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"        /* Case: select the current selected card -\u003e selected */"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        assertBookListSelectSuccess(command, middleIndex);"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        /* ----------------------------------- Perform invalid select operations ------------------------------------ */"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + 0,"},{"lineNumber":53,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + -1,"},{"lineNumber":57,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        int invalidIndex \u003d getModel().getFilteredBookList().size() + 1;"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + invalidIndex, MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (alphabets) -\u003e rejected */"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" abc\","},{"lineNumber":65,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (extra argument) -\u003e rejected */"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" 1 abc\","},{"lineNumber":69,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"SeLeCt 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: select from empty book shelf -\u003e rejected */"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"        deleteAllBooks();"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased(),"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"                MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        /* ------------------------ Perform select operations on the shown results list ----------------------------- */"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        // Note: this test requires an Internet connection."},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        executeCommand(SearchCommand.COMMAND_WORD + \" hello\");"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        new GuiRobot().waitForEvent(() -\u003e !getResultDisplay().getText().equals(SearchCommand.MESSAGE_SEARCHING));"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        assertSearchResultsSelectSuccess(SelectCommand.COMMAND_WORD + \" 1\", Index.fromOneBased(1));"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        assertSearchResultsSelectSuccess(SelectCommand.COMMAND_WORD + \" 1\", Index.fromOneBased(1));"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" 39\", MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"        /* -------------------- Perform select operations on the shown recent books list ------------------------- */"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(RecentCommand.COMMAND_WORD);"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        assertRecentBooksSelectSuccess(SelectCommand.COMMAND_WORD + \" 1\", Index.fromOneBased(1));"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        assertRecentBooksSelectSuccess(SelectCommand.COMMAND_WORD + \" 1\", Index.fromOneBased(1));"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" 39\", MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":97,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":98,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":99,"author":{"gitID":"-"},"content":"     * 3. Result display box displays the success message of executing select command with the"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"     * {@code expectedSelectedCardIndex} of the selected book.\u003cbr\u003e"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"     * 4. {@code Model}, {@code Storage}, {@code BookListPanel}, {@code SearchResultsPanel},"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"     * and {@code RecentBooksPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * 5. Selected book list card is at {@code expectedSelectedCardIndex}.\u003cbr\u003e"},{"lineNumber":104,"author":{"gitID":"-"},"content":"     * 6. Status bar remains unchanged.\u003cbr\u003e"},{"lineNumber":105,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"     * @see BibliotekSystemTest#assertSelectedBookListCardChanged(Index)"},{"lineNumber":109,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"    private void assertBookListSelectSuccess(String command, Index expectedSelectedCardIndex) {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format("},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"                MESSAGE_SELECT_BOOK_SUCCESS, expectedSelectedCardIndex.getOneBased());"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        int preExecutionSelectedCardIndex \u003d getBookListPanel().getSelectedCardIndex();"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.addRecentBook(expectedModel.getFilteredBookList().get("},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"                expectedSelectedCardIndex.getZeroBased()));"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"        if (preExecutionSelectedCardIndex \u003d\u003d expectedSelectedCardIndex.getZeroBased()) {"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"            assertSelectedBookListCardUnchanged();"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"            assertSelectedBookListCardChanged(expectedSelectedCardIndex);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":129,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":132,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":133,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":134,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":135,"author":{"gitID":"-"},"content":"     * 3. Result display box displays the success message of executing select command with the"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"     * {@code expectedSelectedCardIndex} of the selected search result.\u003cbr\u003e"},{"lineNumber":137,"author":{"gitID":"qiu-siqi"},"content":"     * 4. {@code Model}, {@code Storage}, {@code BookListPanel}, {@code SearchResultsPanel},"},{"lineNumber":138,"author":{"gitID":"qiu-siqi"},"content":"     * and {@code RecentBooksPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":139,"author":{"gitID":"-"},"content":"     * 5. Selected search results card is at {@code expectedSelectedCardIndex}.\u003cbr\u003e"},{"lineNumber":140,"author":{"gitID":"-"},"content":"     * 6. Status bar remains unchanged.\u003cbr\u003e"},{"lineNumber":141,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":142,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":143,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":144,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertSelectedSearchResultsCardChanged(Index)"},{"lineNumber":145,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":146,"author":{"gitID":"takuyakanbr"},"content":"    private void assertSearchResultsSelectSuccess(String command, Index expectedSelectedCardIndex) {"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format("},{"lineNumber":149,"author":{"gitID":"qiu-siqi"},"content":"                MESSAGE_SELECT_BOOK_SUCCESS, expectedSelectedCardIndex.getOneBased());"},{"lineNumber":150,"author":{"gitID":"takuyakanbr"},"content":"        int preExecutionSelectedCardIndex \u003d getSearchResultsPanel().getSelectedCardIndex();"},{"lineNumber":151,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.addRecentBook(expectedModel.getSearchResultsList().get("},{"lineNumber":152,"author":{"gitID":"qiu-siqi"},"content":"                expectedSelectedCardIndex.getZeroBased()));"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"        if (preExecutionSelectedCardIndex \u003d\u003d expectedSelectedCardIndex.getZeroBased()) {"},{"lineNumber":158,"author":{"gitID":"takuyakanbr"},"content":"            assertSelectedSearchResultsCardUnchanged();"},{"lineNumber":159,"author":{"gitID":"takuyakanbr"},"content":"        } else {"},{"lineNumber":160,"author":{"gitID":"takuyakanbr"},"content":"            assertSelectedSearchResultsCardChanged(expectedSelectedCardIndex);"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":165,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":168,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":169,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":170,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":171,"author":{"gitID":"-"},"content":"     * 3. Result display box displays the success message of executing select command with the"},{"lineNumber":172,"author":{"gitID":"takuyakanbr"},"content":"     * {@code expectedSelectedCardIndex} of the selected search result.\u003cbr\u003e"},{"lineNumber":173,"author":{"gitID":"qiu-siqi"},"content":"     * 4. {@code Model}, {@code Storage}, {@code BookListPanel}, {@code SearchResultsPanel},"},{"lineNumber":174,"author":{"gitID":"qiu-siqi"},"content":"     * and {@code RecentBooksPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":175,"author":{"gitID":"-"},"content":"     * 5. Selected card is at {@code expectedSelectedCardIndex} and the browser url is updated accordingly.\u003cbr\u003e"},{"lineNumber":176,"author":{"gitID":"-"},"content":"     * 6. Status bar remains unchanged.\u003cbr\u003e"},{"lineNumber":177,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":178,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":179,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":180,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertSelectedRecentBooksCardChanged(Index)"},{"lineNumber":181,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":182,"author":{"gitID":"qiu-siqi"},"content":"    private void assertRecentBooksSelectSuccess(String command, Index expectedSelectedCardIndex) {"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format("},{"lineNumber":185,"author":{"gitID":"qiu-siqi"},"content":"                MESSAGE_SELECT_BOOK_SUCCESS, expectedSelectedCardIndex.getOneBased());"},{"lineNumber":186,"author":{"gitID":"qiu-siqi"},"content":"        int preExecutionSelectedCardIndex \u003d getRecentBooksPanel().getSelectedCardIndex();"},{"lineNumber":187,"author":{"gitID":"-"},"content":""},{"lineNumber":188,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":190,"author":{"gitID":"-"},"content":""},{"lineNumber":191,"author":{"gitID":"-"},"content":"        if (preExecutionSelectedCardIndex \u003d\u003d expectedSelectedCardIndex.getZeroBased()) {"},{"lineNumber":192,"author":{"gitID":"qiu-siqi"},"content":"            assertSelectedRecentBooksCardUnchanged();"},{"lineNumber":193,"author":{"gitID":"qiu-siqi"},"content":"        } else {"},{"lineNumber":194,"author":{"gitID":"qiu-siqi"},"content":"            assertSelectedRecentBooksCardChanged(expectedSelectedCardIndex);"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":196,"author":{"gitID":"-"},"content":""},{"lineNumber":197,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":199,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitID":"-"},"content":""},{"lineNumber":201,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":42,"takuyakanbr":39,"-":120}},{"path":"src/test/java/systemtests/ErrorDialogGuiTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postLater;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.ui.UiManager.FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.ui.UiManager.FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.ui.UiManager.FILE_OPS_ERROR_DIALOG_STAGE_TITLE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import guitests.GuiRobot;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import guitests.guihandles.AlertDialogHandle;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"public class ErrorDialogGuiTest extends BibliotekSystemTest {"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private static final IOException IO_EXCEPTION_STUB \u003d new IOException(\"Stub\");"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private final GuiRobot guiRobot \u003d new GuiRobot();"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public void showErrorDialogs() {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        postLater(new DataSavingExceptionEvent(IO_EXCEPTION_STUB));"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"        guiRobot.waitForEvent(() -\u003e guiRobot.isWindowShown(FILE_OPS_ERROR_DIALOG_STAGE_TITLE));"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"        AlertDialogHandle alertDialog \u003d new AlertDialogHandle(guiRobot.getStage(FILE_OPS_ERROR_DIALOG_STAGE_TITLE));"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        assertEquals(FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE, alertDialog.getHeaderText());"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        assertEquals(FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE + \":\\n\" + IO_EXCEPTION_STUB.toString(),"},{"lineNumber":31,"author":{"gitID":"-"},"content":"                alertDialog.getContentText());"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"-":33}},{"path":"src/test/java/systemtests/ThemeCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Theme;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ThemeCommand;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"public class ThemeCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    public void theme() {"},{"lineNumber":16,"author":{"gitID":"-"},"content":"        /* ----------------------------------- Perform invalid theme operations ------------------------------------- */"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"        /* Case: no theme name -\u003e rejected */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        assertCommandFailure(ThemeCommand.COMMAND_WORD,"},{"lineNumber":20,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE));"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"        /* Case: invalid theme name -\u003e rejected */"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        assertCommandFailure(ThemeCommand.COMMAND_WORD + \" 12345\","},{"lineNumber":24,"author":{"gitID":"-"},"content":"                String.format(ThemeCommand.MESSAGE_INVALID_THEME, \"12345\"));"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"        /* Case: invalid theme name -\u003e rejected */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        assertCommandFailure(ThemeCommand.COMMAND_WORD + \" light 123\","},{"lineNumber":28,"author":{"gitID":"-"},"content":"                String.format(ThemeCommand.MESSAGE_INVALID_THEME, \"light 123\"));"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"        /* ----------------------------------- Perform valid theme operations --------------------------------------- */"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"        assertThemeCommandSuccess(ThemeCommand.COMMAND_WORD + \" light\", Theme.LIGHT);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        assertThemeCommandSuccess(ThemeCommand.COMMAND_WORD + \" DARK\", Theme.DARK);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        assertThemeCommandSuccess(ThemeCommand.COMMAND_WORD + \" WhitE\", Theme.WHITE);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * Executes {@code command} and verifies that the command box displays an empty string, the result display"},{"lineNumber":39,"author":{"gitID":"-"},"content":"     * box displays {@code ThemeCommand#MESSAGE_SUCCESS} and the model related components remain unchanged."},{"lineNumber":40,"author":{"gitID":"-"},"content":"     * These verifications are done by"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * Also verifies that the command box has the default style class, the status bar\u0027s sync status does not"},{"lineNumber":43,"author":{"gitID":"-"},"content":"     * change, and the active stylesheet has changed to the one that is specified by the {@code theme}."},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    private void assertThemeCommandSuccess(String command, Theme theme) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\","},{"lineNumber":51,"author":{"gitID":"-"},"content":"                String.format(ThemeCommand.MESSAGE_SUCCESS, theme.getThemeName()), expectedModel);"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedBookListCardUnchanged();"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedSearchResultsCardUnchanged();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertEquals(theme.getCssFile(), getMainWindowHandle().getActiveStylesheet());"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"takuyakanbr":2,"-":55}},{"path":"docs/DeveloperGuide.adoc","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"\u003d Bibliotek - Developer Guide"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":":toc: left"},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":":toc-title: Table of Contents"},{"lineNumber":4,"author":{"gitID":"-"},"content":":sectnums:"},{"lineNumber":5,"author":{"gitID":"-"},"content":":imagesDir: images"},{"lineNumber":6,"author":{"gitID":"-"},"content":":stylesDir: stylesheets"},{"lineNumber":7,"author":{"gitID":"-"},"content":":xrefstyle: full"},{"lineNumber":8,"author":{"gitID":"-"},"content":"ifdef::env-github[]"},{"lineNumber":9,"author":{"gitID":"-"},"content":":tip-caption: :bulb:"},{"lineNumber":10,"author":{"gitID":"-"},"content":":note-caption: :information_source:"},{"lineNumber":11,"author":{"gitID":"-"},"content":"endif::[]"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":":repoURL: https://github.com/CS2103JAN2018-F14-B4/main/tree/master"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"By: `Team F14-B4`      Since: `Jan 2018`      Licence: `MIT`"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"\u003d\u003d Setting up"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Prerequisites"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":". *JDK `1.8.0_60`* or later"},{"lineNumber":21,"author":{"gitID":"-"},"content":"+"},{"lineNumber":22,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":23,"author":{"gitID":"-"},"content":"Having any Java 8 version is not enough. +"},{"lineNumber":24,"author":{"gitID":"-"},"content":"This app will not work with earlier versions of Java 8."},{"lineNumber":25,"author":{"gitID":"-"},"content":"+"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":". *IntelliJ* IDE"},{"lineNumber":28,"author":{"gitID":"-"},"content":"+"},{"lineNumber":29,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":30,"author":{"gitID":"-"},"content":"IntelliJ by default has Gradle and JavaFx plugins installed. +"},{"lineNumber":31,"author":{"gitID":"-"},"content":"Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Setting up the project in your computer"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":". Fork this repo, and clone the fork to your computer"},{"lineNumber":37,"author":{"gitID":"-"},"content":". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":38,"author":{"gitID":"-"},"content":". Set up the correct JDK version for Gradle"},{"lineNumber":39,"author":{"gitID":"-"},"content":".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`"},{"lineNumber":40,"author":{"gitID":"-"},"content":".. Click `New...` and find the directory of the JDK"},{"lineNumber":41,"author":{"gitID":"-"},"content":". Click `Import Project`"},{"lineNumber":42,"author":{"gitID":"-"},"content":". Locate the `build.gradle` file and select it. Click `OK`"},{"lineNumber":43,"author":{"gitID":"-"},"content":". Click `Open as Project`"},{"lineNumber":44,"author":{"gitID":"-"},"content":". Click `OK` to accept the default settings"},{"lineNumber":45,"author":{"gitID":"-"},"content":". Open a console and run the command `gradlew processResources` (Mac/Linux: `./gradlew processResources`). It should finish with the `BUILD SUCCESSFUL` message. +"},{"lineNumber":46,"author":{"gitID":"-"},"content":"This will generate all resources required by the application and tests."},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Verifying the setup"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":". Run the `seedu.address.MainApp` and try a few commands"},{"lineNumber":51,"author":{"gitID":"-"},"content":". \u003c\u003cTesting,Run the tests\u003e\u003e to ensure they all pass."},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Configurations to do before writing code"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Configuring the coding style"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]. IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours. To rectify,"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)"},{"lineNumber":60,"author":{"gitID":"-"},"content":". Select `Editor` \u003e `Code Style` \u003e `Java`"},{"lineNumber":61,"author":{"gitID":"-"},"content":". Click on the `Imports` tab to set the order"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"},{"lineNumber":64,"author":{"gitID":"-"},"content":"* For `Import Layout`: The order is `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`. Add a `\u003cblank line\u003e` between each `import`"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code."},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Updating documentation to match your fork"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"After forking the repo, links in the documentation will still point to the `se-edu/addressbook-level4` repo. If you plan to develop this as a separate product (i.e. instead of contributing to the `se-edu/addressbook-level4`) , you should replace the URL in the variable `repoURL` in `DeveloperGuide.adoc` and `UserGuide.adoc` with the URL of your fork."},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Setting up CI"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"Set up Travis to perform Continuous Integration (CI) for your fork. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up."},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e)."},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":79,"author":{"gitID":"-"},"content":"Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork."},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e)."},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":84,"author":{"gitID":"-"},"content":"Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Getting started with coding"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"When you are ready to start coding,"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"1. Get some sense of the overall design by reading \u003c\u003cDesign-Architecture\u003e\u003e."},{"lineNumber":91,"author":{"gitID":"-"},"content":"2. Take a look at \u003c\u003cGetStartedProgramming\u003e\u003e."},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"\u003d\u003d Design"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"[[Design-Architecture]]"},{"lineNumber":96,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Architecture"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":".Architecture Diagram"},{"lineNumber":99,"author":{"gitID":"-"},"content":"image::Architecture.png[width\u003d\"600\"]"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":104,"author":{"gitID":"-"},"content":"The `.pptx` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder. To update a diagram, modify the diagram in the pptx file, select the objects of the diagram, and choose `Save as picture`."},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"`Main` has only one class called link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":109,"author":{"gitID":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup method where necessary."},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components. Two of those classes play important roles at the architecture level."},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"-"},"content":"* `EventsCenter` : This class (written using https://github.com/google/guava/wiki/EventBusExplained[Google\u0027s Event Bus library]) is used by components to communicate with other components using events (i.e. a form of _Event Driven_ design)"},{"lineNumber":114,"author":{"gitID":"-"},"content":"* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"The rest of the App consists of four components."},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."},{"lineNumber":119,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."},{"lineNumber":120,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."},{"lineNumber":121,"author":{"gitID":"-"},"content":"* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"Each of the four components"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"* Defines its _API_ in an `interface` with the same name as the Component."},{"lineNumber":126,"author":{"gitID":"-"},"content":"* Exposes its functionality using a `{Component Name}Manager` class."},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":".Class Diagram of the Logic Component"},{"lineNumber":131,"author":{"gitID":"-"},"content":"image::LogicClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":134,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Events-Driven nature of the design"},{"lineNumber":135,"author":{"gitID":"-"},"content":""},{"lineNumber":136,"author":{"gitID":"-"},"content":"The _Sequence Diagram_ below shows how the components interact for the scenario where the user issues the command `delete 1`."},{"lineNumber":137,"author":{"gitID":"-"},"content":""},{"lineNumber":138,"author":{"gitID":"-"},"content":".Component interactions for `delete 1` command (part 1)"},{"lineNumber":139,"author":{"gitID":"qiu-siqi"},"content":"image::SDforDeleteBook.png[width\u003d\"800\"]"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":142,"author":{"gitID":"-"},"content":"Note how the `Model` simply raises a `AddressBookChangedEvent` when the Address Book data are changed, instead of asking the `Storage` to save the updates to the hard disk."},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"The diagram below shows how the `EventsCenter` reacts to that event, which eventually results in the updates being saved to the hard disk and the status bar of the UI being updated to reflect the \u0027Last Updated\u0027 time."},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"-"},"content":".Component interactions for `delete 1` command (part 2)"},{"lineNumber":147,"author":{"gitID":"qiu-siqi"},"content":"image::SDforDeleteBookEventHandling.png[width\u003d\"800\"]"},{"lineNumber":148,"author":{"gitID":"-"},"content":""},{"lineNumber":149,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":150,"author":{"gitID":"-"},"content":"Note how the event is propagated through the `EventsCenter` to the `Storage` and `UI` without `Model` having to be coupled to either of them. This is an example of how this Event Driven approach helps us reduce direct coupling between components."},{"lineNumber":151,"author":{"gitID":"-"},"content":""},{"lineNumber":152,"author":{"gitID":"-"},"content":"The sections below give more details of each component."},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"[[Design-Ui]]"},{"lineNumber":155,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d UI component"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":".Structure of the UI Component"},{"lineNumber":158,"author":{"gitID":"-"},"content":"image::UiClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":159,"author":{"gitID":"-"},"content":""},{"lineNumber":160,"author":{"gitID":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"qiu-siqi"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `BookListPanel`, `StatusBarFooter`, `BrowserPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":163,"author":{"gitID":"-"},"content":""},{"lineNumber":164,"author":{"gitID":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"},{"lineNumber":165,"author":{"gitID":"-"},"content":""},{"lineNumber":166,"author":{"gitID":"-"},"content":"The `UI` component,"},{"lineNumber":167,"author":{"gitID":"-"},"content":""},{"lineNumber":168,"author":{"gitID":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":169,"author":{"gitID":"-"},"content":"* Binds itself to some data in the `Model` so that the UI can auto-update when data in the `Model` change."},{"lineNumber":170,"author":{"gitID":"-"},"content":"* Responds to events raised from various parts of the App and updates the UI accordingly."},{"lineNumber":171,"author":{"gitID":"-"},"content":""},{"lineNumber":172,"author":{"gitID":"-"},"content":"[[Design-Logic]]"},{"lineNumber":173,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Logic component"},{"lineNumber":174,"author":{"gitID":"-"},"content":""},{"lineNumber":175,"author":{"gitID":"-"},"content":"[[fig-LogicClassDiagram]]"},{"lineNumber":176,"author":{"gitID":"-"},"content":".Structure of the Logic Component"},{"lineNumber":177,"author":{"gitID":"-"},"content":"image::LogicClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":178,"author":{"gitID":"-"},"content":""},{"lineNumber":179,"author":{"gitID":"-"},"content":".Structure of Commands in the Logic Component. This diagram shows finer details concerning `XYZCommand` and `Command` in \u003c\u003cfig-LogicClassDiagram\u003e\u003e"},{"lineNumber":180,"author":{"gitID":"-"},"content":"image::LogicCommandClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":181,"author":{"gitID":"-"},"content":""},{"lineNumber":182,"author":{"gitID":"-"},"content":"*API* :"},{"lineNumber":183,"author":{"gitID":"-"},"content":"link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"qiu-siqi"},"content":".  `Logic` uses the `BookShelfParser` class to parse the user command."},{"lineNumber":186,"author":{"gitID":"-"},"content":".  This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":187,"author":{"gitID":"qiu-siqi"},"content":".  The command execution can affect the `Model` (e.g. adding a book) and/or raise events."},{"lineNumber":188,"author":{"gitID":"-"},"content":".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":189,"author":{"gitID":"-"},"content":""},{"lineNumber":190,"author":{"gitID":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":191,"author":{"gitID":"-"},"content":""},{"lineNumber":192,"author":{"gitID":"-"},"content":".Interactions Inside the Logic Component for the `delete 1` Command"},{"lineNumber":193,"author":{"gitID":"qiu-siqi"},"content":"image::DeleteBookSdForLogic.png[width\u003d\"800\"]"},{"lineNumber":194,"author":{"gitID":"-"},"content":""},{"lineNumber":195,"author":{"gitID":"-"},"content":"[[Design-Model]]"},{"lineNumber":196,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Model component"},{"lineNumber":197,"author":{"gitID":"-"},"content":""},{"lineNumber":198,"author":{"gitID":"-"},"content":".Structure of the Model Component"},{"lineNumber":199,"author":{"gitID":"-"},"content":"image::ModelClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":200,"author":{"gitID":"-"},"content":""},{"lineNumber":201,"author":{"gitID":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"},{"lineNumber":202,"author":{"gitID":"-"},"content":""},{"lineNumber":203,"author":{"gitID":"-"},"content":"The `Model`,"},{"lineNumber":204,"author":{"gitID":"-"},"content":""},{"lineNumber":205,"author":{"gitID":"-"},"content":"* stores a `UserPref` object that represents the user\u0027s preferences."},{"lineNumber":206,"author":{"gitID":"qiu-siqi"},"content":"* stores the Book Shelf data."},{"lineNumber":207,"author":{"gitID":"qiu-siqi"},"content":"* exposes an unmodifiable `ObservableList\u003cBook\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":208,"author":{"gitID":"-"},"content":"* does not depend on any of the other three components."},{"lineNumber":209,"author":{"gitID":"-"},"content":""},{"lineNumber":210,"author":{"gitID":"-"},"content":"[[Design-Storage]]"},{"lineNumber":211,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Storage component"},{"lineNumber":212,"author":{"gitID":"-"},"content":""},{"lineNumber":213,"author":{"gitID":"-"},"content":".Structure of the Storage Component"},{"lineNumber":214,"author":{"gitID":"-"},"content":"image::StorageClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":215,"author":{"gitID":"-"},"content":""},{"lineNumber":216,"author":{"gitID":"-"},"content":"*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"},{"lineNumber":217,"author":{"gitID":"-"},"content":""},{"lineNumber":218,"author":{"gitID":"-"},"content":"The `Storage` component,"},{"lineNumber":219,"author":{"gitID":"-"},"content":""},{"lineNumber":220,"author":{"gitID":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":221,"author":{"gitID":"-"},"content":"* can save the Address Book data in xml format and read it back."},{"lineNumber":222,"author":{"gitID":"-"},"content":""},{"lineNumber":223,"author":{"gitID":"-"},"content":"[[Design-Commons]]"},{"lineNumber":224,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Common classes"},{"lineNumber":225,"author":{"gitID":"-"},"content":""},{"lineNumber":226,"author":{"gitID":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package."},{"lineNumber":227,"author":{"gitID":"-"},"content":""},{"lineNumber":228,"author":{"gitID":"-"},"content":"\u003d\u003d Implementation"},{"lineNumber":229,"author":{"gitID":"-"},"content":""},{"lineNumber":230,"author":{"gitID":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":231,"author":{"gitID":"-"},"content":""},{"lineNumber":232,"author":{"gitID":"-"},"content":"// tag::undoredo[]"},{"lineNumber":233,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Undo/Redo feature"},{"lineNumber":234,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Current Implementation"},{"lineNumber":235,"author":{"gitID":"-"},"content":""},{"lineNumber":236,"author":{"gitID":"-"},"content":"The undo/redo mechanism is facilitated by an `UndoRedoStack`, which resides inside `LogicManager`. It supports undoing and redoing of commands that modifies the state of the address book (e.g. `add`, `edit`). Such commands will inherit from `UndoableCommand`."},{"lineNumber":237,"author":{"gitID":"-"},"content":""},{"lineNumber":238,"author":{"gitID":"-"},"content":"`UndoRedoStack` only deals with `UndoableCommands`. Commands that cannot be undone will inherit from `Command` instead. The following diagram shows the inheritance diagram for commands:"},{"lineNumber":239,"author":{"gitID":"-"},"content":""},{"lineNumber":240,"author":{"gitID":"-"},"content":"image::LogicCommandClassDiagram.png[width\u003d\"800\"]"},{"lineNumber":241,"author":{"gitID":"-"},"content":""},{"lineNumber":242,"author":{"gitID":"qiu-siqi"},"content":"As you can see from the diagram, `UndoableCommand` adds an extra layer between the abstract `Command` class and concrete commands that can be undone, such as the `DeleteCommand`. Note that extra tasks need to be done when executing a command in an _undoable_ way, such as saving the state of the book shelf before execution. `UndoableCommand` contains the high-level algorithm for those extra tasks while the child classes implements the details of how to execute the specific command. Note that this technique of putting the high-level algorithm in the parent class and lower-level steps of the algorithm in child classes is also known as the https://www.tutorialspoint.com/design_pattern/template_pattern.htm[template pattern]."},{"lineNumber":243,"author":{"gitID":"-"},"content":""},{"lineNumber":244,"author":{"gitID":"-"},"content":"Commands that are not undoable are implemented this way:"},{"lineNumber":245,"author":{"gitID":"-"},"content":"[source,java]"},{"lineNumber":246,"author":{"gitID":"-"},"content":"----"},{"lineNumber":247,"author":{"gitID":"-"},"content":"public class ListCommand extends Command {"},{"lineNumber":248,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":249,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":250,"author":{"gitID":"-"},"content":"        // ... list logic ..."},{"lineNumber":251,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitID":"-"},"content":"}"},{"lineNumber":253,"author":{"gitID":"-"},"content":"----"},{"lineNumber":254,"author":{"gitID":"-"},"content":""},{"lineNumber":255,"author":{"gitID":"-"},"content":"With the extra layer, the commands that are undoable are implemented this way:"},{"lineNumber":256,"author":{"gitID":"-"},"content":"[source,java]"},{"lineNumber":257,"author":{"gitID":"-"},"content":"----"},{"lineNumber":258,"author":{"gitID":"-"},"content":"public abstract class UndoableCommand extends Command {"},{"lineNumber":259,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":260,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":261,"author":{"gitID":"-"},"content":"        // ... undo logic ..."},{"lineNumber":262,"author":{"gitID":"-"},"content":""},{"lineNumber":263,"author":{"gitID":"-"},"content":"        executeUndoableCommand();"},{"lineNumber":264,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitID":"-"},"content":"}"},{"lineNumber":266,"author":{"gitID":"-"},"content":""},{"lineNumber":267,"author":{"gitID":"-"},"content":"public class DeleteCommand extends UndoableCommand {"},{"lineNumber":268,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":269,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() {"},{"lineNumber":270,"author":{"gitID":"-"},"content":"        // ... delete logic ..."},{"lineNumber":271,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitID":"-"},"content":"}"},{"lineNumber":273,"author":{"gitID":"-"},"content":"----"},{"lineNumber":274,"author":{"gitID":"-"},"content":""},{"lineNumber":275,"author":{"gitID":"-"},"content":"Suppose that the user has just launched the application. The `UndoRedoStack` will be empty at the beginning."},{"lineNumber":276,"author":{"gitID":"-"},"content":""},{"lineNumber":277,"author":{"gitID":"qiu-siqi"},"content":"The user executes a new `UndoableCommand`, `delete 5`, to delete the 5th book in the book shelf. The current state of the book shelf is saved before the `delete 5` command executes. The `delete 5` command will then be pushed onto the `undoStack` (the current state is saved together with the command)."},{"lineNumber":278,"author":{"gitID":"-"},"content":""},{"lineNumber":279,"author":{"gitID":"-"},"content":"image::UndoRedoStartingStackDiagram.png[width\u003d\"800\"]"},{"lineNumber":280,"author":{"gitID":"-"},"content":""},{"lineNumber":281,"author":{"gitID":"qiu-siqi"},"content":"As the user continues to use the program, more commands are added into the `undoStack`. For example, the user may execute `add t/Artemis ...` to add a new book."},{"lineNumber":282,"author":{"gitID":"-"},"content":""},{"lineNumber":283,"author":{"gitID":"-"},"content":"image::UndoRedoNewCommand1StackDiagram.png[width\u003d\"800\"]"},{"lineNumber":284,"author":{"gitID":"-"},"content":""},{"lineNumber":285,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":286,"author":{"gitID":"-"},"content":"If a command fails its execution, it will not be pushed to the `UndoRedoStack` at all."},{"lineNumber":287,"author":{"gitID":"-"},"content":""},{"lineNumber":288,"author":{"gitID":"qiu-siqi"},"content":"The user now decides that adding the book was a mistake, and decides to undo that action using `undo`."},{"lineNumber":289,"author":{"gitID":"-"},"content":""},{"lineNumber":290,"author":{"gitID":"qiu-siqi"},"content":"We will pop the most recent command out of the `undoStack` and push it back to the `redoStack`. We will restore the book shelf to the state before the `add` command executed."},{"lineNumber":291,"author":{"gitID":"-"},"content":""},{"lineNumber":292,"author":{"gitID":"-"},"content":"image::UndoRedoExecuteUndoStackDiagram.png[width\u003d\"800\"]"},{"lineNumber":293,"author":{"gitID":"-"},"content":""},{"lineNumber":294,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":295,"author":{"gitID":"-"},"content":"If the `undoStack` is empty, then there are no other commands left to be undone, and an `Exception` will be thrown when popping the `undoStack`."},{"lineNumber":296,"author":{"gitID":"-"},"content":""},{"lineNumber":297,"author":{"gitID":"-"},"content":"The following sequence diagram shows how the undo operation works:"},{"lineNumber":298,"author":{"gitID":"-"},"content":""},{"lineNumber":299,"author":{"gitID":"-"},"content":"image::UndoRedoSequenceDiagram.png[width\u003d\"800\"]"},{"lineNumber":300,"author":{"gitID":"-"},"content":""},{"lineNumber":301,"author":{"gitID":"qiu-siqi"},"content":"The redo does the exact opposite (pops from `redoStack`, push to `undoStack`, and restores the book shelf to the state after the command is executed)."},{"lineNumber":302,"author":{"gitID":"-"},"content":""},{"lineNumber":303,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":304,"author":{"gitID":"-"},"content":"If the `redoStack` is empty, then there are no other commands left to be redone, and an `Exception` will be thrown when popping the `redoStack`."},{"lineNumber":305,"author":{"gitID":"-"},"content":""},{"lineNumber":306,"author":{"gitID":"qiu-siqi"},"content":"The user now decides to execute a new command, `clear`. As before, `clear` will be pushed into the `undoStack`. This time the `redoStack` is no longer empty. It will be purged as it no longer make sense to redo the `add t/Artemis` command (this is the behavior that most modern desktop applications follow)."},{"lineNumber":307,"author":{"gitID":"-"},"content":""},{"lineNumber":308,"author":{"gitID":"-"},"content":"image::UndoRedoNewCommand2StackDiagram.png[width\u003d\"800\"]"},{"lineNumber":309,"author":{"gitID":"-"},"content":""},{"lineNumber":310,"author":{"gitID":"-"},"content":"Commands that are not undoable are not added into the `undoStack`. For example, `list`, which inherits from `Command` rather than `UndoableCommand`, will not be added after execution:"},{"lineNumber":311,"author":{"gitID":"-"},"content":""},{"lineNumber":312,"author":{"gitID":"-"},"content":"image::UndoRedoNewCommand3StackDiagram.png[width\u003d\"800\"]"},{"lineNumber":313,"author":{"gitID":"-"},"content":""},{"lineNumber":314,"author":{"gitID":"-"},"content":"The following activity diagram summarize what happens inside the `UndoRedoStack` when a user executes a new command:"},{"lineNumber":315,"author":{"gitID":"-"},"content":""},{"lineNumber":316,"author":{"gitID":"-"},"content":"image::UndoRedoActivityDiagram.png[width\u003d\"650\"]"},{"lineNumber":317,"author":{"gitID":"-"},"content":""},{"lineNumber":318,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Design Considerations"},{"lineNumber":319,"author":{"gitID":"-"},"content":""},{"lineNumber":320,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Implementation of `UndoableCommand`"},{"lineNumber":321,"author":{"gitID":"-"},"content":""},{"lineNumber":322,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Add a new abstract method `executeUndoableCommand()`"},{"lineNumber":323,"author":{"gitID":"-"},"content":"** Pros: We will not lose any undone/redone functionality as it is now part of the default behaviour. Classes that deal with `Command` do not have to know that `executeUndoableCommand()` exist."},{"lineNumber":324,"author":{"gitID":"-"},"content":"** Cons: Hard for new developers to understand the template pattern."},{"lineNumber":325,"author":{"gitID":"-"},"content":"* **Alternative 2:** Just override `execute()`"},{"lineNumber":326,"author":{"gitID":"-"},"content":"** Pros: Does not involve the template pattern, easier for new developers to understand."},{"lineNumber":327,"author":{"gitID":"-"},"content":"** Cons: Classes that inherit from `UndoableCommand` must remember to call `super.execute()`, or lose the ability to undo/redo."},{"lineNumber":328,"author":{"gitID":"-"},"content":""},{"lineNumber":329,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"},{"lineNumber":330,"author":{"gitID":"-"},"content":""},{"lineNumber":331,"author":{"gitID":"qiu-siqi"},"content":"* **Alternative 1 (current choice):** Saves the entire book shelf."},{"lineNumber":332,"author":{"gitID":"-"},"content":"** Pros: Easy to implement."},{"lineNumber":333,"author":{"gitID":"-"},"content":"** Cons: May have performance issues in terms of memory usage."},{"lineNumber":334,"author":{"gitID":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself."},{"lineNumber":335,"author":{"gitID":"qiu-siqi"},"content":"** Pros: Will use less memory (e.g. for `delete`, just save the book being deleted)."},{"lineNumber":336,"author":{"gitID":"-"},"content":"** Cons: We must ensure that the implementation of each individual command are correct."},{"lineNumber":337,"author":{"gitID":"-"},"content":""},{"lineNumber":338,"author":{"gitID":"-"},"content":""},{"lineNumber":339,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Type of commands that can be undone/redone"},{"lineNumber":340,"author":{"gitID":"-"},"content":""},{"lineNumber":341,"author":{"gitID":"qiu-siqi"},"content":"* **Alternative 1 (current choice):** Only include commands that modifies the book fetch (`add`, `clear`, `edit`)."},{"lineNumber":342,"author":{"gitID":"-"},"content":"** Pros: We only revert changes that are hard to change back (the view can easily be re-modified as no data are * lost)."},{"lineNumber":343,"author":{"gitID":"-"},"content":"** Cons: User might think that undo also applies when the list is modified (undoing filtering for example), * only to realize that it does not do that, after executing `undo`."},{"lineNumber":344,"author":{"gitID":"-"},"content":"* **Alternative 2:** Include all commands."},{"lineNumber":345,"author":{"gitID":"-"},"content":"** Pros: Might be more intuitive for the user."},{"lineNumber":346,"author":{"gitID":"qiu-siqi"},"content":"** Cons: User have no way of skipping such commands if he or she just want to reset the state of the book  shelf and not the view."},{"lineNumber":347,"author":{"gitID":"-"},"content":"**Additional Info:** See our discussion  https://github.com/se-edu/addressbook-level4/issues/390#issuecomment-298936672[here]."},{"lineNumber":348,"author":{"gitID":"-"},"content":""},{"lineNumber":349,"author":{"gitID":"-"},"content":""},{"lineNumber":350,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"},{"lineNumber":351,"author":{"gitID":"-"},"content":""},{"lineNumber":352,"author":{"gitID":"-"},"content":"* **Alternative 1 (current choice):** Use separate stack for undo and redo"},{"lineNumber":353,"author":{"gitID":"qiu-siqi"},"content":"** Pros: Easy to understand for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."},{"lineNumber":354,"author":{"gitID":"qiu-siqi"},"content":"** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `UndoRedoStack`."},{"lineNumber":355,"author":{"gitID":"-"},"content":"* **Alternative 2:** Use `HistoryManager` for undo/redo"},{"lineNumber":356,"author":{"gitID":"-"},"content":"** Pros: We do not need to maintain a separate stack, and just reuse what is already in the codebase."},{"lineNumber":357,"author":{"gitID":"qiu-siqi"},"content":"** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."},{"lineNumber":358,"author":{"gitID":"-"},"content":"// end::undoredo[]"},{"lineNumber":359,"author":{"gitID":"-"},"content":""},{"lineNumber":360,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d View recently selected books: `recent` command"},{"lineNumber":361,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":362,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d Current implementation"},{"lineNumber":363,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":364,"author":{"gitID":"qiu-siqi"},"content":"When `recent` command is entered, eventually `SwitchToRecentBooksRequestEvent` is posted to the"},{"lineNumber":365,"author":{"gitID":"qiu-siqi"},"content":"`EventCenter`. The interaction between components is shown in the diagram below."},{"lineNumber":366,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":367,"author":{"gitID":"qiu-siqi"},"content":"image::SequenceDiagramRecentCommandLogic.png[width\u003d\"800\"]"},{"lineNumber":368,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":369,"author":{"gitID":"qiu-siqi"},"content":"`SwitchToRecentBooksRequestEvent` is handled by `LogicManager` and `MainWindow`."},{"lineNumber":370,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":371,"author":{"gitID":"qiu-siqi"},"content":"image::SequenceDiagramRecentCommandEvent.png[width\u003d\"800\"]"},{"lineNumber":372,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":373,"author":{"gitID":"qiu-siqi"},"content":"`LogicManager` sets the `ActiveListType` to `RECENT_BOOKS`. The commands that users can perform on this list may differ from others, for example users"},{"lineNumber":374,"author":{"gitID":"qiu-siqi"},"content":"cannot delete books from this list. +"},{"lineNumber":375,"author":{"gitID":"qiu-siqi"},"content":"`MainWindow` hides the currently shown Panel and shows `RecentBooksPanel` which is populated by the"},{"lineNumber":376,"author":{"gitID":"qiu-siqi"},"content":"stored recently selected books."},{"lineNumber":377,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":378,"author":{"gitID":"qiu-siqi"},"content":"Recently selected books are stored in a `UniqueBookCircularList` which resides in `ModelManager`."},{"lineNumber":379,"author":{"gitID":"qiu-siqi"},"content":"Whenever a new book is selected, `ModelManager` handles the `xxxSelectionChangedEvent`"},{"lineNumber":380,"author":{"gitID":"qiu-siqi"},"content":"and adds the book into the list."},{"lineNumber":381,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":382,"author":{"gitID":"qiu-siqi"},"content":"`UniqueBookCircularList` has size 50 by default. For illustration purposes, assume we have a"},{"lineNumber":383,"author":{"gitID":"qiu-siqi"},"content":"`UniqueBookCircularList` of size 3 that is empty at the start. `ActiveListType` is `BOOK_SHELF`."},{"lineNumber":384,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":385,"author":{"gitID":"qiu-siqi"},"content":"The user performs `select 1` to view information on the 1st book in the book shelf. The"},{"lineNumber":386,"author":{"gitID":"qiu-siqi"},"content":"selected book is added onto the `UniqueBookCircularList`."},{"lineNumber":387,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":388,"author":{"gitID":"qiu-siqi"},"content":"image::RecentCommandListOne.png[width\u003d\"800\"]"},{"lineNumber":389,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":390,"author":{"gitID":"qiu-siqi"},"content":"NOTE: If select fails to execute (eg. given index is invalid), the list will remain unchanged."},{"lineNumber":391,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":392,"author":{"gitID":"qiu-siqi"},"content":"The user then selects another book with `select 2`. The book is added to the front of the `UniqueBookCircularList`."},{"lineNumber":393,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":394,"author":{"gitID":"qiu-siqi"},"content":"image::RecentCommandListTwo.png[width\u003d\"800\"]"},{"lineNumber":395,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":396,"author":{"gitID":"qiu-siqi"},"content":"NOTE: Selecting a book directly from the UI (without using `select` command) will also update the list according."},{"lineNumber":397,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":398,"author":{"gitID":"qiu-siqi"},"content":"Now if the user performs `select 1` again, the book `One`, which already exists in the list, will be removed"},{"lineNumber":399,"author":{"gitID":"qiu-siqi"},"content":"from the list and added again so that it is in the first index of the list (most recently selected)."},{"lineNumber":400,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":401,"author":{"gitID":"qiu-siqi"},"content":"image::RecentCommandListThree.png[width\u003d\"800\"]"},{"lineNumber":402,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":403,"author":{"gitID":"qiu-siqi"},"content":"The user continues to select books, and the same operations will apply."},{"lineNumber":404,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":405,"author":{"gitID":"qiu-siqi"},"content":"image::RecentCommandListFour.png[width\u003d\"800\"]"},{"lineNumber":406,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":407,"author":{"gitID":"qiu-siqi"},"content":"The `UniqueBookCircularList` is now full (`size \u003d 3`). When user performs `select 4`, since the book"},{"lineNumber":408,"author":{"gitID":"qiu-siqi"},"content":"`Four` is not in the list, the book at the last index is removed to make space for book `Four`."},{"lineNumber":409,"author":{"gitID":"qiu-siqi"},"content":"This is because the book at the last index is the least recent selection."},{"lineNumber":410,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":411,"author":{"gitID":"qiu-siqi"},"content":"image::RecentCommandListFive.png[width\u003d\"800\"]"},{"lineNumber":412,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":413,"author":{"gitID":"qiu-siqi"},"content":"NOTE: `UniqueBookCircularList::equals` is order sensitive since the order determines the recency."},{"lineNumber":414,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":415,"author":{"gitID":"qiu-siqi"},"content":"When Bibliotek is exited, the data in the `UniqueBookCircularList` is stored in the format"},{"lineNumber":416,"author":{"gitID":"qiu-siqi"},"content":"of `BookShelf`. This data is read and converted to `UniqueBookCircularList` upon opening Bibliotek."},{"lineNumber":417,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":418,"author":{"gitID":"qiu-siqi"},"content":"NOTE: Since `UniqueBookCircularList` only supports `addToFront(book)`, take note to add books in reverse"},{"lineNumber":419,"author":{"gitID":"qiu-siqi"},"content":"order when converting from other data structures such as `BookShelf`."},{"lineNumber":420,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":421,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d Design considerations"},{"lineNumber":422,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":423,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Whether to store recently selected books"},{"lineNumber":424,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":425,"author":{"gitID":"qiu-siqi"},"content":"* **Alternative 1 (current choice):** Stores the recently selected books upon closing Bibliotek."},{"lineNumber":426,"author":{"gitID":"qiu-siqi"},"content":"** Pros: Users can look up books selected in the last session."},{"lineNumber":427,"author":{"gitID":"qiu-siqi"},"content":"** Cons: Extra file dependency and data clutter if unused."},{"lineNumber":428,"author":{"gitID":"qiu-siqi"},"content":"* **Alternative 2:** Don\u0027t store recently selected books."},{"lineNumber":429,"author":{"gitID":"qiu-siqi"},"content":"** Pros: Eliminate the need to modify `Storage` component."},{"lineNumber":430,"author":{"gitID":"qiu-siqi"},"content":"** Cons: Recently selected books list is limited to selections in the current session."},{"lineNumber":431,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":432,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Type of selected books that are shown"},{"lineNumber":433,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":434,"author":{"gitID":"qiu-siqi"},"content":"* **Alternative 1 (current choice):** All books selected from the user\u0027s book shelf or search results."},{"lineNumber":435,"author":{"gitID":"qiu-siqi"},"content":"** Pros: More intuitive for the user."},{"lineNumber":436,"author":{"gitID":"qiu-siqi"},"content":"** Cons: Users can easily find books in his book shelf. Including these books in `recent` list"},{"lineNumber":437,"author":{"gitID":"qiu-siqi"},"content":"may not be useful and take up space."},{"lineNumber":438,"author":{"gitID":"qiu-siqi"},"content":"* **Alternative 2:** Only books selected from the user\u0027s search results."},{"lineNumber":439,"author":{"gitID":"qiu-siqi"},"content":"** Pros: Users are more likely to need `recent` to find these books. We can reduce clutter"},{"lineNumber":440,"author":{"gitID":"qiu-siqi"},"content":"by only showing these books."},{"lineNumber":441,"author":{"gitID":"qiu-siqi"},"content":"** Cons: Less intuitive for the user. We also need to deal with books that are added or deleted after selection."},{"lineNumber":442,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":443,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to hold the recently selected books data"},{"lineNumber":444,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":445,"author":{"gitID":"qiu-siqi"},"content":"* **Alternative 1 (current choice):** Make a new type of book list `UniqueBookCircularList`."},{"lineNumber":446,"author":{"gitID":"qiu-siqi"},"content":"** Pros: Can make the size limit and add mechanism as a property of the new list."},{"lineNumber":447,"author":{"gitID":"qiu-siqi"},"content":"** Cons: Have to deal with multiple data structures to hold data for different purposes."},{"lineNumber":448,"author":{"gitID":"qiu-siqi"},"content":"* **Alternative 2:** Use `BookShelf`."},{"lineNumber":449,"author":{"gitID":"qiu-siqi"},"content":"** Pros: Re-use of existing data structure."},{"lineNumber":450,"author":{"gitID":"qiu-siqi"},"content":"** Cons: BookShelf supports functionalities that are not needed to store recently selected books."},{"lineNumber":451,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":452,"author":{"gitID":"-"},"content":"// tag::dataencryption[]"},{"lineNumber":453,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d [Proposed] Data Encryption"},{"lineNumber":454,"author":{"gitID":"-"},"content":""},{"lineNumber":455,"author":{"gitID":"-"},"content":"_{Explain here how the data encryption feature will be implemented}_"},{"lineNumber":456,"author":{"gitID":"-"},"content":""},{"lineNumber":457,"author":{"gitID":"-"},"content":"// end::dataencryption[]"},{"lineNumber":458,"author":{"gitID":"-"},"content":""},{"lineNumber":459,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Logging"},{"lineNumber":460,"author":{"gitID":"-"},"content":""},{"lineNumber":461,"author":{"gitID":"-"},"content":"We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."},{"lineNumber":462,"author":{"gitID":"-"},"content":""},{"lineNumber":463,"author":{"gitID":"-"},"content":"* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"},{"lineNumber":464,"author":{"gitID":"-"},"content":"* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"},{"lineNumber":465,"author":{"gitID":"-"},"content":"* Currently log messages are output through: `Console` and to a `.log` file."},{"lineNumber":466,"author":{"gitID":"-"},"content":""},{"lineNumber":467,"author":{"gitID":"-"},"content":"*Logging Levels*"},{"lineNumber":468,"author":{"gitID":"-"},"content":""},{"lineNumber":469,"author":{"gitID":"-"},"content":"* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"},{"lineNumber":470,"author":{"gitID":"-"},"content":"* `WARNING` : Can continue, but with caution"},{"lineNumber":471,"author":{"gitID":"-"},"content":"* `INFO` : Information showing the noteworthy actions by the App"},{"lineNumber":472,"author":{"gitID":"-"},"content":"* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"},{"lineNumber":473,"author":{"gitID":"-"},"content":""},{"lineNumber":474,"author":{"gitID":"-"},"content":"[[Implementation-Configuration]]"},{"lineNumber":475,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Configuration"},{"lineNumber":476,"author":{"gitID":"-"},"content":""},{"lineNumber":477,"author":{"gitID":"-"},"content":"Certain properties of the application can be controlled (e.g App name, logging level) through the configuration file (default: `config.json`)."},{"lineNumber":478,"author":{"gitID":"-"},"content":""},{"lineNumber":479,"author":{"gitID":"-"},"content":"\u003d\u003d Documentation"},{"lineNumber":480,"author":{"gitID":"-"},"content":""},{"lineNumber":481,"author":{"gitID":"-"},"content":"We use asciidoc for writing documentation."},{"lineNumber":482,"author":{"gitID":"-"},"content":""},{"lineNumber":483,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":484,"author":{"gitID":"-"},"content":"We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."},{"lineNumber":485,"author":{"gitID":"-"},"content":""},{"lineNumber":486,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Editing Documentation"},{"lineNumber":487,"author":{"gitID":"-"},"content":""},{"lineNumber":488,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."},{"lineNumber":489,"author":{"gitID":"-"},"content":"Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."},{"lineNumber":490,"author":{"gitID":"-"},"content":""},{"lineNumber":491,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Publishing Documentation"},{"lineNumber":492,"author":{"gitID":"-"},"content":""},{"lineNumber":493,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."},{"lineNumber":494,"author":{"gitID":"-"},"content":""},{"lineNumber":495,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Converting Documentation to PDF format"},{"lineNumber":496,"author":{"gitID":"-"},"content":""},{"lineNumber":497,"author":{"gitID":"-"},"content":"We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."},{"lineNumber":498,"author":{"gitID":"-"},"content":""},{"lineNumber":499,"author":{"gitID":"-"},"content":"Here are the steps to convert the project documentation files to PDF format."},{"lineNumber":500,"author":{"gitID":"-"},"content":""},{"lineNumber":501,"author":{"gitID":"-"},"content":".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."},{"lineNumber":502,"author":{"gitID":"-"},"content":".  Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`."},{"lineNumber":503,"author":{"gitID":"-"},"content":".  Within Chrome, click on the `Print` option in Chrome\u0027s menu."},{"lineNumber":504,"author":{"gitID":"-"},"content":".  Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below."},{"lineNumber":505,"author":{"gitID":"-"},"content":""},{"lineNumber":506,"author":{"gitID":"-"},"content":".Saving documentation as PDF files in Chrome"},{"lineNumber":507,"author":{"gitID":"-"},"content":"image::chrome_save_as_pdf.png[width\u003d\"300\"]"},{"lineNumber":508,"author":{"gitID":"-"},"content":""},{"lineNumber":509,"author":{"gitID":"-"},"content":"[[Testing]]"},{"lineNumber":510,"author":{"gitID":"-"},"content":"\u003d\u003d Testing"},{"lineNumber":511,"author":{"gitID":"-"},"content":""},{"lineNumber":512,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Running Tests"},{"lineNumber":513,"author":{"gitID":"-"},"content":""},{"lineNumber":514,"author":{"gitID":"-"},"content":"There are three ways to run tests."},{"lineNumber":515,"author":{"gitID":"-"},"content":""},{"lineNumber":516,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":517,"author":{"gitID":"-"},"content":"The most reliable way to run tests is the 3rd one. The first two methods might fail some GUI tests due to platform/resolution-specific idiosyncrasies."},{"lineNumber":518,"author":{"gitID":"-"},"content":""},{"lineNumber":519,"author":{"gitID":"-"},"content":"*Method 1: Using IntelliJ JUnit test runner*"},{"lineNumber":520,"author":{"gitID":"-"},"content":""},{"lineNumber":521,"author":{"gitID":"-"},"content":"* To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`"},{"lineNumber":522,"author":{"gitID":"-"},"content":"* To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"},{"lineNumber":523,"author":{"gitID":"-"},"content":""},{"lineNumber":524,"author":{"gitID":"-"},"content":"*Method 2: Using Gradle*"},{"lineNumber":525,"author":{"gitID":"-"},"content":""},{"lineNumber":526,"author":{"gitID":"-"},"content":"* Open a console and run the command `gradlew clean allTests` (Mac/Linux: `./gradlew clean allTests`)"},{"lineNumber":527,"author":{"gitID":"-"},"content":""},{"lineNumber":528,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":529,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more info on how to run tests using Gradle."},{"lineNumber":530,"author":{"gitID":"-"},"content":""},{"lineNumber":531,"author":{"gitID":"-"},"content":"*Method 3: Using Gradle (headless)*"},{"lineNumber":532,"author":{"gitID":"-"},"content":""},{"lineNumber":533,"author":{"gitID":"-"},"content":"Thanks to the https://github.com/TestFX/TestFX[TestFX] library we use, our GUI tests can be run in the _headless_ mode. In the headless mode, GUI tests do not show up on the screen. That means the developer can do other things on the Computer while the tests are running."},{"lineNumber":534,"author":{"gitID":"-"},"content":""},{"lineNumber":535,"author":{"gitID":"-"},"content":"To run tests in headless mode, open a console and run the command `gradlew clean headless allTests` (Mac/Linux: `./gradlew clean headless allTests`)"},{"lineNumber":536,"author":{"gitID":"-"},"content":""},{"lineNumber":537,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Types of tests"},{"lineNumber":538,"author":{"gitID":"-"},"content":""},{"lineNumber":539,"author":{"gitID":"-"},"content":"We have two types of tests:"},{"lineNumber":540,"author":{"gitID":"-"},"content":""},{"lineNumber":541,"author":{"gitID":"-"},"content":".  *GUI Tests* - These are tests involving the GUI. They include,"},{"lineNumber":542,"author":{"gitID":"-"},"content":".. _System Tests_ that test the entire App by simulating user actions on the GUI. These are in the `systemtests` package."},{"lineNumber":543,"author":{"gitID":"-"},"content":".. _Unit tests_ that test the individual components. These are in `seedu.address.ui` package."},{"lineNumber":544,"author":{"gitID":"-"},"content":".  *Non-GUI Tests* - These are tests not involving the GUI. They include,"},{"lineNumber":545,"author":{"gitID":"-"},"content":"..  _Unit tests_ targeting the lowest level methods/classes. +"},{"lineNumber":546,"author":{"gitID":"-"},"content":"e.g. `seedu.address.commons.StringUtilTest`"},{"lineNumber":547,"author":{"gitID":"-"},"content":"..  _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working). +"},{"lineNumber":548,"author":{"gitID":"-"},"content":"e.g. `seedu.address.storage.StorageManagerTest`"},{"lineNumber":549,"author":{"gitID":"-"},"content":"..  Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together. +"},{"lineNumber":550,"author":{"gitID":"-"},"content":"e.g. `seedu.address.logic.LogicManagerTest`"},{"lineNumber":551,"author":{"gitID":"-"},"content":""},{"lineNumber":552,"author":{"gitID":"-"},"content":""},{"lineNumber":553,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Troubleshooting Testing"},{"lineNumber":554,"author":{"gitID":"-"},"content":"**Problem: `HelpWindowTest` fails with a `NullPointerException`.**"},{"lineNumber":555,"author":{"gitID":"-"},"content":""},{"lineNumber":556,"author":{"gitID":"-"},"content":"* Reason: One of its dependencies, `UserGuide.html` in `src/main/resources/docs` is missing."},{"lineNumber":557,"author":{"gitID":"-"},"content":"* Solution: Execute Gradle task `processResources`."},{"lineNumber":558,"author":{"gitID":"-"},"content":""},{"lineNumber":559,"author":{"gitID":"-"},"content":"\u003d\u003d Dev Ops"},{"lineNumber":560,"author":{"gitID":"-"},"content":""},{"lineNumber":561,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Build Automation"},{"lineNumber":562,"author":{"gitID":"-"},"content":""},{"lineNumber":563,"author":{"gitID":"-"},"content":"See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation."},{"lineNumber":564,"author":{"gitID":"-"},"content":""},{"lineNumber":565,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Continuous Integration"},{"lineNumber":566,"author":{"gitID":"-"},"content":""},{"lineNumber":567,"author":{"gitID":"-"},"content":"We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform _Continuous Integration_ on our projects. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details."},{"lineNumber":568,"author":{"gitID":"-"},"content":""},{"lineNumber":569,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Coverage Reporting"},{"lineNumber":570,"author":{"gitID":"-"},"content":""},{"lineNumber":571,"author":{"gitID":"-"},"content":"We use https://coveralls.io/[Coveralls] to track the code coverage of our projects. See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details."},{"lineNumber":572,"author":{"gitID":"-"},"content":""},{"lineNumber":573,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Documentation Previews"},{"lineNumber":574,"author":{"gitID":"-"},"content":"When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged. See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details."},{"lineNumber":575,"author":{"gitID":"-"},"content":""},{"lineNumber":576,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Making a Release"},{"lineNumber":577,"author":{"gitID":"-"},"content":""},{"lineNumber":578,"author":{"gitID":"-"},"content":"Here are the steps to create a new release."},{"lineNumber":579,"author":{"gitID":"-"},"content":""},{"lineNumber":580,"author":{"gitID":"-"},"content":".  Update the version number in link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp.java`]."},{"lineNumber":581,"author":{"gitID":"-"},"content":".  Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e."},{"lineNumber":582,"author":{"gitID":"-"},"content":".  Tag the repo with the version number. e.g. `v0.1`"},{"lineNumber":583,"author":{"gitID":"-"},"content":".  https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created."},{"lineNumber":584,"author":{"gitID":"-"},"content":""},{"lineNumber":585,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Managing Dependencies"},{"lineNumber":586,"author":{"gitID":"-"},"content":""},{"lineNumber":587,"author":{"gitID":"-"},"content":"A project often depends on third-party libraries. For example, Address Book depends on the http://wiki.fasterxml.com/JacksonHome[Jackson library] for XML parsing. Managing these _dependencies_ can be automated using Gradle. For example, Gradle can download the dependencies automatically, which is better than these alternatives. +"},{"lineNumber":588,"author":{"gitID":"-"},"content":"a. Include those libraries in the repo (this bloats the repo size) +"},{"lineNumber":589,"author":{"gitID":"-"},"content":"b. Require developers to download those libraries manually (this creates extra work for developers)"},{"lineNumber":590,"author":{"gitID":"-"},"content":""},{"lineNumber":591,"author":{"gitID":"-"},"content":"[[GetStartedProgramming]]"},{"lineNumber":592,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":593,"author":{"gitID":"-"},"content":"\u003d\u003d Suggested Programming Tasks to Get Started"},{"lineNumber":594,"author":{"gitID":"-"},"content":""},{"lineNumber":595,"author":{"gitID":"-"},"content":"Suggested path for new programmers:"},{"lineNumber":596,"author":{"gitID":"-"},"content":""},{"lineNumber":597,"author":{"gitID":"-"},"content":"1. First, add small local-impact (i.e. the impact of the change does not go beyond the component) enhancements to one component at a time. Some suggestions are given in \u003c\u003cGetStartedProgramming-EachComponent\u003e\u003e."},{"lineNumber":598,"author":{"gitID":"-"},"content":""},{"lineNumber":599,"author":{"gitID":"-"},"content":"2. Next, add a feature that touches multiple components to learn how to implement an end-to-end feature across all components. \u003c\u003cGetStartedProgramming-RemarkCommand\u003e\u003e explains how to go about adding such a feature."},{"lineNumber":600,"author":{"gitID":"-"},"content":""},{"lineNumber":601,"author":{"gitID":"-"},"content":"[[GetStartedProgramming-EachComponent]]"},{"lineNumber":602,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Improving each component"},{"lineNumber":603,"author":{"gitID":"-"},"content":""},{"lineNumber":604,"author":{"gitID":"-"},"content":"Each individual exercise in this section is component-based (i.e. you would not need to modify the other components to get it to work)."},{"lineNumber":605,"author":{"gitID":"-"},"content":""},{"lineNumber":606,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":607,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d `Logic` component"},{"lineNumber":608,"author":{"gitID":"-"},"content":""},{"lineNumber":609,"author":{"gitID":"-"},"content":"*Scenario:* You are in charge of `logic`. During dog-fooding, your team realize that it is troublesome for the user to type the whole command in order to execute a command. Your team devise some strategies to help cut down the amount of typing necessary, and one of the suggestions was to implement aliases for the command words. Your job is to implement such aliases."},{"lineNumber":610,"author":{"gitID":"-"},"content":""},{"lineNumber":611,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":612,"author":{"gitID":"-"},"content":"Do take a look at \u003c\u003cDesign-Logic\u003e\u003e before attempting to modify the `Logic` component."},{"lineNumber":613,"author":{"gitID":"-"},"content":""},{"lineNumber":614,"author":{"gitID":"-"},"content":". Add a shorthand equivalent alias for each of the individual commands. For example, besides typing `clear`, the user can also type `c` to remove all persons in the list."},{"lineNumber":615,"author":{"gitID":"-"},"content":"+"},{"lineNumber":616,"author":{"gitID":"-"},"content":"****"},{"lineNumber":617,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":618,"author":{"gitID":"-"},"content":"** Just like we store each individual command word constant `COMMAND_WORD` inside `*Command.java` (e.g.  link:{repoURL}/src/main/java/seedu/address/logic/commands/FindCommand.java[`FindCommand#COMMAND_WORD`], link:{repoURL}/src/main/java/seedu/address/logic/commands/DeleteCommand.java[`DeleteCommand#COMMAND_WORD`]), you need a new constant for aliases as well (e.g. `FindCommand#COMMAND_ALIAS`)."},{"lineNumber":619,"author":{"gitID":"-"},"content":"** link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] is responsible for analyzing command words."},{"lineNumber":620,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":621,"author":{"gitID":"-"},"content":"** Modify the switch statement in link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser#parseCommand(String)`] such that both the proper command word and alias can be used to execute the same intended command."},{"lineNumber":622,"author":{"gitID":"-"},"content":"** Add new tests for each of the aliases that you have added."},{"lineNumber":623,"author":{"gitID":"-"},"content":"** Update the user guide to document the new aliases."},{"lineNumber":624,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/785[PR] for the full solution."},{"lineNumber":625,"author":{"gitID":"-"},"content":"****"},{"lineNumber":626,"author":{"gitID":"-"},"content":""},{"lineNumber":627,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":628,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d `Model` component"},{"lineNumber":629,"author":{"gitID":"-"},"content":""},{"lineNumber":630,"author":{"gitID":"-"},"content":"*Scenario:* You are in charge of `model`. One day, the `logic`-in-charge approaches you for help. He wants to implement a command such that the user is able to remove a particular tag from everyone in the address book, but the model API does not support such a functionality at the moment. Your job is to implement an API method, so that your teammate can use your API to implement his command."},{"lineNumber":631,"author":{"gitID":"-"},"content":""},{"lineNumber":632,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":633,"author":{"gitID":"-"},"content":"Do take a look at \u003c\u003cDesign-Model\u003e\u003e before attempting to modify the `Model` component."},{"lineNumber":634,"author":{"gitID":"-"},"content":""},{"lineNumber":635,"author":{"gitID":"-"},"content":". Add a `removeTag(Tag)` method. The specified tag will be removed from everyone in the address book."},{"lineNumber":636,"author":{"gitID":"-"},"content":"+"},{"lineNumber":637,"author":{"gitID":"-"},"content":"****"},{"lineNumber":638,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":639,"author":{"gitID":"-"},"content":"** The link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model`] and the link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] API need to be updated."},{"lineNumber":640,"author":{"gitID":"-"},"content":"** Think about how you can use SLAP to design the method. Where should we place the main logic of deleting tags?"},{"lineNumber":641,"author":{"gitID":"-"},"content":"**  Find out which of the existing API methods in  link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] classes can be used to implement the tag removal logic. link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`] allows you to update a person, and link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] allows you to update the tags."},{"lineNumber":642,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":643,"author":{"gitID":"-"},"content":"** Implement a `removeTag(Tag)` method in link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`]. Loop through each person, and remove the `tag` from each person."},{"lineNumber":644,"author":{"gitID":"-"},"content":"** Add a new API method `deleteTag(Tag)` in link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`]. Your link:{repoURL}/src/main/java/seedu/address/model/ModelManager.java[`ModelManager`] should call `AddressBook#removeTag(Tag)`."},{"lineNumber":645,"author":{"gitID":"-"},"content":"** Add new tests for each of the new public methods that you have added."},{"lineNumber":646,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/790[PR] for the full solution."},{"lineNumber":647,"author":{"gitID":"-"},"content":"*** The current codebase has a flaw in tags management. Tags no longer in use by anyone may still exist on the link:{repoURL}/src/main/java/seedu/address/model/AddressBook.java[`AddressBook`]. This may cause some tests to fail. See issue  https://github.com/se-edu/addressbook-level4/issues/753[`#753`] for more information about this flaw."},{"lineNumber":648,"author":{"gitID":"-"},"content":"*** The solution PR has a temporary fix for the flaw mentioned above in its first commit."},{"lineNumber":649,"author":{"gitID":"-"},"content":"****"},{"lineNumber":650,"author":{"gitID":"-"},"content":""},{"lineNumber":651,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":652,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d `Ui` component"},{"lineNumber":653,"author":{"gitID":"-"},"content":""},{"lineNumber":654,"author":{"gitID":"-"},"content":"*Scenario:* You are in charge of `ui`. During a beta testing session, your team is observing how the users use your address book application. You realize that one of the users occasionally tries to delete non-existent tags from a contact, because the tags all look the same visually, and the user got confused. Another user made a typing mistake in his command, but did not realize he had done so because the error message wasn\u0027t prominent enough. A third user keeps scrolling down the list, because he keeps forgetting the index of the last person in the list. Your job is to implement improvements to the UI to solve all these problems."},{"lineNumber":655,"author":{"gitID":"-"},"content":""},{"lineNumber":656,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":657,"author":{"gitID":"-"},"content":"Do take a look at \u003c\u003cDesign-Ui\u003e\u003e before attempting to modify the `UI` component."},{"lineNumber":658,"author":{"gitID":"-"},"content":""},{"lineNumber":659,"author":{"gitID":"-"},"content":". Use different colors for different tags inside person cards. For example, `friends` tags can be all in brown, and `colleagues` tags can be all in yellow."},{"lineNumber":660,"author":{"gitID":"-"},"content":"+"},{"lineNumber":661,"author":{"gitID":"-"},"content":"**Before**"},{"lineNumber":662,"author":{"gitID":"-"},"content":"+"},{"lineNumber":663,"author":{"gitID":"-"},"content":"image::getting-started-ui-tag-before.png[width\u003d\"300\"]"},{"lineNumber":664,"author":{"gitID":"-"},"content":"+"},{"lineNumber":665,"author":{"gitID":"-"},"content":"**After**"},{"lineNumber":666,"author":{"gitID":"-"},"content":"+"},{"lineNumber":667,"author":{"gitID":"-"},"content":"image::getting-started-ui-tag-after.png[width\u003d\"300\"]"},{"lineNumber":668,"author":{"gitID":"-"},"content":"+"},{"lineNumber":669,"author":{"gitID":"-"},"content":"****"},{"lineNumber":670,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":671,"author":{"gitID":"-"},"content":"** The tag labels are created inside link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[the `PersonCard` constructor] (`new Label(tag.tagName)`). https://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/Label.html[JavaFX\u0027s `Label` class] allows you to modify the style of each Label, such as changing its color."},{"lineNumber":672,"author":{"gitID":"-"},"content":"** Use the .css attribute `-fx-background-color` to add a color."},{"lineNumber":673,"author":{"gitID":"-"},"content":"** You may wish to modify link:{repoURL}/src/main/resources/view/DarkTheme.css[`DarkTheme.css`] to include some pre-defined colors using css, especially if you have experience with web-based css."},{"lineNumber":674,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":675,"author":{"gitID":"-"},"content":"** You can modify the existing test methods for `PersonCard` \u0027s to include testing the tag\u0027s color as well."},{"lineNumber":676,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/798[PR] for the full solution."},{"lineNumber":677,"author":{"gitID":"-"},"content":"*** The PR uses the hash code of the tag names to generate a color. This is deliberately designed to ensure consistent colors each time the application runs. You may wish to expand on this design to include additional features, such as allowing users to set their own tag colors, and directly saving the colors to storage, so that tags retain their colors even if the hash code algorithm changes."},{"lineNumber":678,"author":{"gitID":"-"},"content":"****"},{"lineNumber":679,"author":{"gitID":"-"},"content":""},{"lineNumber":680,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] such that link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] can show a different style on error (currently it shows the same regardless of errors)."},{"lineNumber":681,"author":{"gitID":"-"},"content":"+"},{"lineNumber":682,"author":{"gitID":"-"},"content":"**Before**"},{"lineNumber":683,"author":{"gitID":"-"},"content":"+"},{"lineNumber":684,"author":{"gitID":"-"},"content":"image::getting-started-ui-result-before.png[width\u003d\"200\"]"},{"lineNumber":685,"author":{"gitID":"-"},"content":"+"},{"lineNumber":686,"author":{"gitID":"-"},"content":"**After**"},{"lineNumber":687,"author":{"gitID":"-"},"content":"+"},{"lineNumber":688,"author":{"gitID":"-"},"content":"image::getting-started-ui-result-after.png[width\u003d\"200\"]"},{"lineNumber":689,"author":{"gitID":"-"},"content":"+"},{"lineNumber":690,"author":{"gitID":"-"},"content":"****"},{"lineNumber":691,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":692,"author":{"gitID":"-"},"content":"** link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] is raised by link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] which also knows whether the result is a success or failure, and is caught by link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay`] which is where we want to change the style to."},{"lineNumber":693,"author":{"gitID":"-"},"content":"** Refer to link:{repoURL}/src/main/java/seedu/address/ui/CommandBox.java[`CommandBox`] for an example on how to display an error."},{"lineNumber":694,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":695,"author":{"gitID":"-"},"content":"** Modify link:{repoURL}/src/main/java/seedu/address/commons/events/ui/NewResultAvailableEvent.java[`NewResultAvailableEvent`] \u0027s constructor so that users of the event can indicate whether an error has occurred."},{"lineNumber":696,"author":{"gitID":"-"},"content":"** Modify link:{repoURL}/src/main/java/seedu/address/ui/ResultDisplay.java[`ResultDisplay#handleNewResultAvailableEvent(NewResultAvailableEvent)`] to react to this event appropriately."},{"lineNumber":697,"author":{"gitID":"-"},"content":"** You can write two different kinds of tests to ensure that the functionality works:"},{"lineNumber":698,"author":{"gitID":"-"},"content":"*** The unit tests for `ResultDisplay` can be modified to include verification of the color."},{"lineNumber":699,"author":{"gitID":"-"},"content":"*** The system tests link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest#assertCommandBoxShowsDefaultStyle() and AddressBookSystemTest#assertCommandBoxShowsErrorStyle()`] to include verification for `ResultDisplay` as well."},{"lineNumber":700,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/799[PR] for the full solution."},{"lineNumber":701,"author":{"gitID":"-"},"content":"*** Do read the commits one at a time if you feel overwhelmed."},{"lineNumber":702,"author":{"gitID":"-"},"content":"****"},{"lineNumber":703,"author":{"gitID":"-"},"content":""},{"lineNumber":704,"author":{"gitID":"-"},"content":". Modify the link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to show the total number of people in the address book."},{"lineNumber":705,"author":{"gitID":"-"},"content":"+"},{"lineNumber":706,"author":{"gitID":"-"},"content":"**Before**"},{"lineNumber":707,"author":{"gitID":"-"},"content":"+"},{"lineNumber":708,"author":{"gitID":"-"},"content":"image::getting-started-ui-status-before.png[width\u003d\"500\"]"},{"lineNumber":709,"author":{"gitID":"-"},"content":"+"},{"lineNumber":710,"author":{"gitID":"-"},"content":"**After**"},{"lineNumber":711,"author":{"gitID":"-"},"content":"+"},{"lineNumber":712,"author":{"gitID":"-"},"content":"image::getting-started-ui-status-after.png[width\u003d\"500\"]"},{"lineNumber":713,"author":{"gitID":"-"},"content":"+"},{"lineNumber":714,"author":{"gitID":"-"},"content":"****"},{"lineNumber":715,"author":{"gitID":"-"},"content":"* Hints"},{"lineNumber":716,"author":{"gitID":"-"},"content":"** link:{repoURL}/src/main/resources/view/StatusBarFooter.fxml[`StatusBarFooter.fxml`] will need a new `StatusBar`. Be sure to set the `GridPane.columnIndex` properly for each `StatusBar` to avoid misalignment!"},{"lineNumber":717,"author":{"gitID":"-"},"content":"** link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] needs to initialize the status bar on application start, and to update it accordingly whenever the address book is updated."},{"lineNumber":718,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":719,"author":{"gitID":"-"},"content":"** Modify the constructor of link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter`] to take in the number of persons when the application just started."},{"lineNumber":720,"author":{"gitID":"-"},"content":"** Use link:{repoURL}/src/main/java/seedu/address/ui/StatusBarFooter.java[`StatusBarFooter#handleAddressBookChangedEvent(AddressBookChangedEvent)`] to update the number of persons whenever there are new changes to the addressbook."},{"lineNumber":721,"author":{"gitID":"-"},"content":"** For tests, modify link:{repoURL}/src/test/java/guitests/guihandles/StatusBarFooterHandle.java[`StatusBarFooterHandle`] by adding a state-saving functionality for the total number of people status, just like what we did for save location and sync status."},{"lineNumber":722,"author":{"gitID":"-"},"content":"** For system tests, modify link:{repoURL}/src/test/java/systemtests/AddressBookSystemTest.java[`AddressBookSystemTest`] to also verify the new total number of persons status bar."},{"lineNumber":723,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/803[PR] for the full solution."},{"lineNumber":724,"author":{"gitID":"-"},"content":"****"},{"lineNumber":725,"author":{"gitID":"-"},"content":""},{"lineNumber":726,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":727,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d `Storage` component"},{"lineNumber":728,"author":{"gitID":"-"},"content":""},{"lineNumber":729,"author":{"gitID":"-"},"content":"*Scenario:* You are in charge of `storage`. For your next project milestone, your team plans to implement a new feature of saving the address book to the cloud. However, the current implementation of the application constantly saves the address book after the execution of each command, which is not ideal if the user is working on limited internet connection. Your team decided that the application should instead save the changes to a temporary local backup file first, and only upload to the cloud after the user closes the application. Your job is to implement a backup API for the address book storage."},{"lineNumber":730,"author":{"gitID":"-"},"content":""},{"lineNumber":731,"author":{"gitID":"-"},"content":"[TIP]"},{"lineNumber":732,"author":{"gitID":"-"},"content":"Do take a look at \u003c\u003cDesign-Storage\u003e\u003e before attempting to modify the `Storage` component."},{"lineNumber":733,"author":{"gitID":"-"},"content":""},{"lineNumber":734,"author":{"gitID":"-"},"content":". Add a new method `backupAddressBook(ReadOnlyAddressBook)`, so that the address book can be saved in a fixed temporary location."},{"lineNumber":735,"author":{"gitID":"-"},"content":"+"},{"lineNumber":736,"author":{"gitID":"-"},"content":"****"},{"lineNumber":737,"author":{"gitID":"-"},"content":"* Hint"},{"lineNumber":738,"author":{"gitID":"-"},"content":"** Add the API method in link:{repoURL}/src/main/java/seedu/address/storage/AddressBookStorage.java[`AddressBookStorage`] interface."},{"lineNumber":739,"author":{"gitID":"-"},"content":"** Implement the logic in link:{repoURL}/src/main/java/seedu/address/storage/StorageManager.java[`StorageManager`] and link:{repoURL}/src/main/java/seedu/address/storage/XmlAddressBookStorage.java[`XmlAddressBookStorage`] class."},{"lineNumber":740,"author":{"gitID":"-"},"content":"* Solution"},{"lineNumber":741,"author":{"gitID":"-"},"content":"** See this https://github.com/se-edu/addressbook-level4/pull/594[PR] for the full solution."},{"lineNumber":742,"author":{"gitID":"-"},"content":"****"},{"lineNumber":743,"author":{"gitID":"-"},"content":""},{"lineNumber":744,"author":{"gitID":"-"},"content":"[[GetStartedProgramming-RemarkCommand]]"},{"lineNumber":745,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Creating a new command: `remark`"},{"lineNumber":746,"author":{"gitID":"-"},"content":""},{"lineNumber":747,"author":{"gitID":"-"},"content":"By creating this command, you will get a chance to learn how to implement a feature end-to-end, touching all major components of the app."},{"lineNumber":748,"author":{"gitID":"-"},"content":""},{"lineNumber":749,"author":{"gitID":"-"},"content":"*Scenario:* You are a software maintainer for `addressbook`, as the former developer team has moved on to new projects. The current users of your application have a list of new feature requests that they hope the software will eventually have. The most popular request is to allow adding additional comments/notes about a particular contact, by providing a flexible `remark` field for each contact, rather than relying on tags alone. After designing the specification for the `remark` command, you are convinced that this feature is worth implementing. Your job is to implement the `remark` command."},{"lineNumber":750,"author":{"gitID":"-"},"content":""},{"lineNumber":751,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Description"},{"lineNumber":752,"author":{"gitID":"-"},"content":"Edits the remark for a person specified in the `INDEX`. +"},{"lineNumber":753,"author":{"gitID":"-"},"content":"Format: `remark INDEX r/[REMARK]`"},{"lineNumber":754,"author":{"gitID":"-"},"content":""},{"lineNumber":755,"author":{"gitID":"-"},"content":"Examples:"},{"lineNumber":756,"author":{"gitID":"-"},"content":""},{"lineNumber":757,"author":{"gitID":"-"},"content":"* `remark 1 r/Likes to drink coffee.` +"},{"lineNumber":758,"author":{"gitID":"-"},"content":"Edits the remark for the first person to `Likes to drink coffee.`"},{"lineNumber":759,"author":{"gitID":"-"},"content":"* `remark 1 r/` +"},{"lineNumber":760,"author":{"gitID":"-"},"content":"Removes the remark for the first person."},{"lineNumber":761,"author":{"gitID":"-"},"content":""},{"lineNumber":762,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Step-by-step Instructions"},{"lineNumber":763,"author":{"gitID":"-"},"content":""},{"lineNumber":764,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 1] Logic: Teach the app to accept \u0027remark\u0027 which does nothing"},{"lineNumber":765,"author":{"gitID":"-"},"content":"Let\u0027s start by teaching the application how to parse a `remark` command. We will add the logic of `remark` later."},{"lineNumber":766,"author":{"gitID":"-"},"content":""},{"lineNumber":767,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":768,"author":{"gitID":"-"},"content":""},{"lineNumber":769,"author":{"gitID":"-"},"content":". Add a `RemarkCommand` that extends link:{repoURL}/src/main/java/seedu/address/logic/commands/UndoableCommand.java[`UndoableCommand`]. Upon execution, it should just throw an `Exception`."},{"lineNumber":770,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to accept a `RemarkCommand`."},{"lineNumber":771,"author":{"gitID":"-"},"content":""},{"lineNumber":772,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":773,"author":{"gitID":"-"},"content":""},{"lineNumber":774,"author":{"gitID":"-"},"content":". Add `RemarkCommandTest` that tests that `executeUndoableCommand()` throws an Exception."},{"lineNumber":775,"author":{"gitID":"-"},"content":". Add new test method to link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`], which tests that typing \"remark\" returns an instance of `RemarkCommand`."},{"lineNumber":776,"author":{"gitID":"-"},"content":""},{"lineNumber":777,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 2] Logic: Teach the app to accept \u0027remark\u0027 arguments"},{"lineNumber":778,"author":{"gitID":"-"},"content":"Let\u0027s teach the application to parse arguments that our `remark` command will accept. E.g. `1 r/Likes to drink coffee.`"},{"lineNumber":779,"author":{"gitID":"-"},"content":""},{"lineNumber":780,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":781,"author":{"gitID":"-"},"content":""},{"lineNumber":782,"author":{"gitID":"-"},"content":". Modify `RemarkCommand` to take in an `Index` and `String` and print those two parameters as the error message."},{"lineNumber":783,"author":{"gitID":"-"},"content":". Add `RemarkCommandParser` that knows how to parse two arguments, one index and one with prefix \u0027r/\u0027."},{"lineNumber":784,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/logic/parser/AddressBookParser.java[`AddressBookParser`] to use the newly implemented `RemarkCommandParser`."},{"lineNumber":785,"author":{"gitID":"-"},"content":""},{"lineNumber":786,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":787,"author":{"gitID":"-"},"content":""},{"lineNumber":788,"author":{"gitID":"-"},"content":". Modify `RemarkCommandTest` to test the `RemarkCommand#equals()` method."},{"lineNumber":789,"author":{"gitID":"-"},"content":". Add `RemarkCommandParserTest` that tests different boundary values"},{"lineNumber":790,"author":{"gitID":"-"},"content":"for `RemarkCommandParser`."},{"lineNumber":791,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/test/java/seedu/address/logic/parser/AddressBookParserTest.java[`AddressBookParserTest`] to test that the correct command is generated according to the user input."},{"lineNumber":792,"author":{"gitID":"-"},"content":""},{"lineNumber":793,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 3] Ui: Add a placeholder for remark in `PersonCard`"},{"lineNumber":794,"author":{"gitID":"-"},"content":"Let\u0027s add a placeholder on all our link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] s to display a remark for each person later."},{"lineNumber":795,"author":{"gitID":"-"},"content":""},{"lineNumber":796,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":797,"author":{"gitID":"-"},"content":""},{"lineNumber":798,"author":{"gitID":"-"},"content":". Add a `Label` with any random text inside link:{repoURL}/src/main/resources/view/PersonListCard.fxml[`PersonListCard.fxml`]."},{"lineNumber":799,"author":{"gitID":"-"},"content":". Add FXML annotation in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] to tie the variable to the actual label."},{"lineNumber":800,"author":{"gitID":"-"},"content":""},{"lineNumber":801,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":802,"author":{"gitID":"-"},"content":""},{"lineNumber":803,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/test/java/guitests/guihandles/PersonCardHandle.java[`PersonCardHandle`] so that future tests can read the contents of the remark label."},{"lineNumber":804,"author":{"gitID":"-"},"content":""},{"lineNumber":805,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 4] Model: Add `Remark` class"},{"lineNumber":806,"author":{"gitID":"-"},"content":"We have to properly encapsulate the remark in our link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`] class. Instead of just using a `String`, let\u0027s follow the conventional class structure that the codebase already uses by adding a `Remark` class."},{"lineNumber":807,"author":{"gitID":"-"},"content":""},{"lineNumber":808,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":809,"author":{"gitID":"-"},"content":""},{"lineNumber":810,"author":{"gitID":"-"},"content":". Add `Remark` to model component (you can copy from link:{repoURL}/src/main/java/seedu/address/model/person/Address.java[`Address`], remove the regex and change the names accordingly)."},{"lineNumber":811,"author":{"gitID":"-"},"content":". Modify `RemarkCommand` to now take in a `Remark` instead of a `String`."},{"lineNumber":812,"author":{"gitID":"-"},"content":""},{"lineNumber":813,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":814,"author":{"gitID":"-"},"content":""},{"lineNumber":815,"author":{"gitID":"-"},"content":". Add test for `Remark`, to test the `Remark#equals()` method."},{"lineNumber":816,"author":{"gitID":"-"},"content":""},{"lineNumber":817,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 5] Model: Modify `Person` to support a `Remark` field"},{"lineNumber":818,"author":{"gitID":"-"},"content":"Now we have the `Remark` class, we need to actually use it inside link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."},{"lineNumber":819,"author":{"gitID":"-"},"content":""},{"lineNumber":820,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":821,"author":{"gitID":"-"},"content":""},{"lineNumber":822,"author":{"gitID":"-"},"content":". Add `getRemark()` in link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."},{"lineNumber":823,"author":{"gitID":"-"},"content":". You may assume that the user will not be able to use the `add` and `edit` commands to modify the remarks field (i.e. the person will be created without a remark)."},{"lineNumber":824,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/model/util/SampleDataUtil.java/[`SampleDataUtil`] to add remarks for the sample data (delete your `addressBook.xml` so that the application will load the sample data when you launch it.)"},{"lineNumber":825,"author":{"gitID":"-"},"content":""},{"lineNumber":826,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 6] Storage: Add `Remark` field to `XmlAdaptedPerson` class"},{"lineNumber":827,"author":{"gitID":"-"},"content":"We now have `Remark` s for `Person` s, but they will be gone when we exit the application. Let\u0027s modify link:{repoURL}/src/main/java/seedu/address/storage/XmlAdaptedPerson.java[`XmlAdaptedPerson`] to include a `Remark` field so that it will be saved."},{"lineNumber":828,"author":{"gitID":"-"},"content":""},{"lineNumber":829,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":830,"author":{"gitID":"-"},"content":""},{"lineNumber":831,"author":{"gitID":"-"},"content":". Add a new Xml field for `Remark`."},{"lineNumber":832,"author":{"gitID":"-"},"content":""},{"lineNumber":833,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":834,"author":{"gitID":"-"},"content":""},{"lineNumber":835,"author":{"gitID":"-"},"content":". Fix `invalidAndValidPersonAddressBook.xml`, `typicalPersonsAddressBook.xml`, `validAddressBook.xml` etc., such that the XML tests will not fail due to a missing `\u003cremark\u003e` element."},{"lineNumber":836,"author":{"gitID":"-"},"content":""},{"lineNumber":837,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 6b] Test: Add withRemark() for `PersonBuilder`"},{"lineNumber":838,"author":{"gitID":"-"},"content":"Since `Person` can now have a `Remark`, we should add a helper method to link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`], so that users are able to create remarks when building a link:{repoURL}/src/main/java/seedu/address/model/person/Person.java[`Person`]."},{"lineNumber":839,"author":{"gitID":"-"},"content":""},{"lineNumber":840,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":841,"author":{"gitID":"-"},"content":""},{"lineNumber":842,"author":{"gitID":"-"},"content":". Add a new method `withRemark()` for link:{repoURL}/src/test/java/seedu/address/testutil/PersonBuilder.java[`PersonBuilder`]. This method will create a new `Remark` for the person that it is currently building."},{"lineNumber":843,"author":{"gitID":"-"},"content":". Try and use the method on any sample `Person` in link:{repoURL}/src/test/java/seedu/address/testutil/TypicalPersons.java[`TypicalPersons`]."},{"lineNumber":844,"author":{"gitID":"-"},"content":""},{"lineNumber":845,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 7] Ui: Connect `Remark` field to `PersonCard`"},{"lineNumber":846,"author":{"gitID":"-"},"content":"Our remark label in link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`] is still a placeholder. Let\u0027s bring it to life by binding it with the actual `remark` field."},{"lineNumber":847,"author":{"gitID":"-"},"content":""},{"lineNumber":848,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":849,"author":{"gitID":"-"},"content":""},{"lineNumber":850,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/main/java/seedu/address/ui/PersonCard.java[`PersonCard`]\u0027s constructor to bind the `Remark` field to the `Person` \u0027s remark."},{"lineNumber":851,"author":{"gitID":"-"},"content":""},{"lineNumber":852,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":853,"author":{"gitID":"-"},"content":""},{"lineNumber":854,"author":{"gitID":"-"},"content":". Modify link:{repoURL}/src/test/java/seedu/address/ui/testutil/GuiTestAssert.java[`GuiTestAssert#assertCardDisplaysPerson(...)`] so that it will compare the now-functioning remark label."},{"lineNumber":855,"author":{"gitID":"-"},"content":""},{"lineNumber":856,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d\u003d [Step 8] Logic: Implement `RemarkCommand#execute()` logic"},{"lineNumber":857,"author":{"gitID":"-"},"content":"We now have everything set up... but we still can\u0027t modify the remarks. Let\u0027s finish it up by adding in actual logic for our `remark` command."},{"lineNumber":858,"author":{"gitID":"-"},"content":""},{"lineNumber":859,"author":{"gitID":"-"},"content":"**Main:**"},{"lineNumber":860,"author":{"gitID":"-"},"content":""},{"lineNumber":861,"author":{"gitID":"-"},"content":". Replace the logic in `RemarkCommand#execute()` (that currently just throws an `Exception`), with the actual logic to modify the remarks of a person."},{"lineNumber":862,"author":{"gitID":"-"},"content":""},{"lineNumber":863,"author":{"gitID":"-"},"content":"**Tests:**"},{"lineNumber":864,"author":{"gitID":"-"},"content":""},{"lineNumber":865,"author":{"gitID":"-"},"content":". Update `RemarkCommandTest` to test that the `execute()` logic works."},{"lineNumber":866,"author":{"gitID":"-"},"content":""},{"lineNumber":867,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Full Solution"},{"lineNumber":868,"author":{"gitID":"-"},"content":""},{"lineNumber":869,"author":{"gitID":"-"},"content":"See this https://github.com/se-edu/addressbook-level4/pull/599[PR] for the step-by-step solution."},{"lineNumber":870,"author":{"gitID":"-"},"content":""},{"lineNumber":871,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":872,"author":{"gitID":"-"},"content":"\u003d\u003d Product Scope"},{"lineNumber":873,"author":{"gitID":"-"},"content":""},{"lineNumber":874,"author":{"gitID":"-"},"content":"*Target user profile*:"},{"lineNumber":875,"author":{"gitID":"-"},"content":""},{"lineNumber":876,"author":{"gitID":"qiu-siqi"},"content":"* has a need to catalogue a significant number of books"},{"lineNumber":877,"author":{"gitID":"-"},"content":"* prefer desktop apps over other types"},{"lineNumber":878,"author":{"gitID":"-"},"content":"* can type fast"},{"lineNumber":879,"author":{"gitID":"-"},"content":"* prefers typing over mouse input"},{"lineNumber":880,"author":{"gitID":"-"},"content":"* is reasonably comfortable using CLI apps"},{"lineNumber":881,"author":{"gitID":"-"},"content":""},{"lineNumber":882,"author":{"gitID":"qiu-siqi"},"content":"*Value proposition*: manage books faster than a typical mouse/GUI driven app"},{"lineNumber":883,"author":{"gitID":"-"},"content":""},{"lineNumber":884,"author":{"gitID":"takuyakanbr"},"content":"\u003d\u003d\u003d Feature Contribution"},{"lineNumber":885,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":886,"author":{"gitID":"takuyakanbr"},"content":"[discrete]"},{"lineNumber":887,"author":{"gitID":"takuyakanbr"},"content":"\u003d\u003d\u003d\u003d Qiu Siyu"},{"lineNumber":888,"author":{"gitID":"takuyakanbr"},"content":"* **Search for books using Google Books API** (major)"},{"lineNumber":889,"author":{"gitID":"takuyakanbr"},"content":"** Added the network component and a `search` command to allow the user to search for books on Google Books."},{"lineNumber":890,"author":{"gitID":"takuyakanbr"},"content":"** This allows the user to easily search for particular books, and add them without having to enter all the information manually (using the updated `add` command)."},{"lineNumber":891,"author":{"gitID":"takuyakanbr"},"content":"* **Change application theme** (minor)"},{"lineNumber":892,"author":{"gitID":"takuyakanbr"},"content":"** Added a `theme` command that allows the user to switch between the various themes included with Bibliotek."},{"lineNumber":893,"author":{"gitID":"takuyakanbr"},"content":"** This allows the user to change the design of Bibliotek according to their own preferences."},{"lineNumber":894,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":895,"author":{"gitID":"qiu-siqi"},"content":"[discrete]"},{"lineNumber":896,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d\u003d Qiu Siqi"},{"lineNumber":897,"author":{"gitID":"qiu-siqi"},"content":"* **Search for books in the library or add to watchlist** (major)"},{"lineNumber":898,"author":{"gitID":"qiu-siqi"},"content":"** Update network component to support NLB catalogue."},{"lineNumber":899,"author":{"gitID":"qiu-siqi"},"content":"** Add `library` and `watch` commands to perform search and add to watchlist respectively."},{"lineNumber":900,"author":{"gitID":"qiu-siqi"},"content":"** This allows the user to easily check or get updated on the availability of books."},{"lineNumber":901,"author":{"gitID":"qiu-siqi"},"content":"* **Get recently viewed books** (minor)"},{"lineNumber":902,"author":{"gitID":"qiu-siqi"},"content":"** Add a `recent` command that allows user to view previous selections that he did not add into his book shelf."},{"lineNumber":903,"author":{"gitID":"qiu-siqi"},"content":"** This allows the user to reconsider his choices without having to perform the search again."},{"lineNumber":904,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":905,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":906,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Shi Jin"},{"lineNumber":907,"author":{"gitID":"-"},"content":"* **Mark a book as read, change the priority of a book and rate books** (major)"},{"lineNumber":908,"author":{"gitID":"-"},"content":"** Add attributes rating, status, priority."},{"lineNumber":909,"author":{"gitID":"-"},"content":"** Add `edit` command that allows user to rate, set status and change priority of"},{"lineNumber":910,"author":{"gitID":"-"},"content":"some books."},{"lineNumber":911,"author":{"gitID":"-"},"content":"** This allows the user to keep track of what to read and what have been read and give recommendations to others."},{"lineNumber":912,"author":{"gitID":"-"},"content":"* **Use aliases in place of full commands** (minor)"},{"lineNumber":913,"author":{"gitID":"-"},"content":"** Add a `alias` command that allows users to change the current full commands to the aliases that users need."},{"lineNumber":914,"author":{"gitID":"-"},"content":"** This allows users to reduce the amount of typing needed."},{"lineNumber":915,"author":{"gitID":"-"},"content":""},{"lineNumber":916,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":917,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d\u003d Jianghao"},{"lineNumber":918,"author":{"gitID":"-"},"content":"* **Get command auto-completion suggestions** (major)"},{"lineNumber":919,"author":{"gitID":"-"},"content":"** Add auto-completion suggestions for command."},{"lineNumber":920,"author":{"gitID":"-"},"content":"** This allows the user to reduce the amount of typing needed."},{"lineNumber":921,"author":{"gitID":"-"},"content":"* **View hints when typing command** (minor)"},{"lineNumber":922,"author":{"gitID":"-"},"content":"** Add hints to UI when typing commands."},{"lineNumber":923,"author":{"gitID":"-"},"content":"** This helps the user to recall the syntax of the command."},{"lineNumber":924,"author":{"gitID":"-"},"content":""},{"lineNumber":925,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":926,"author":{"gitID":"-"},"content":"\u003d\u003d User Stories"},{"lineNumber":927,"author":{"gitID":"-"},"content":""},{"lineNumber":928,"author":{"gitID":"-"},"content":"Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"},{"lineNumber":929,"author":{"gitID":"-"},"content":""},{"lineNumber":930,"author":{"gitID":"takuyakanbr"},"content":"[width\u003d\"70%\",cols\u003d\"\u003c18%,\u003c18%,29%,34%\",options\u003d\"header\",]"},{"lineNumber":931,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":932,"author":{"gitID":"-"},"content":"|Priority |As a ... |I want to ... |So that I can..."},{"lineNumber":933,"author":{"gitID":"-"},"content":"|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App"},{"lineNumber":934,"author":{"gitID":"-"},"content":""},{"lineNumber":935,"author":{"gitID":"takuyakanbr"},"content":"|`* * *` |user |search for books |find new books to read"},{"lineNumber":936,"author":{"gitID":"-"},"content":""},{"lineNumber":937,"author":{"gitID":"takuyakanbr"},"content":"|`* * *` |user |add books |keep track of what to read and what have been read"},{"lineNumber":938,"author":{"gitID":"-"},"content":""},{"lineNumber":939,"author":{"gitID":"takuyakanbr"},"content":"|`* * *` |user |view a listing of my books |decide what to read next"},{"lineNumber":940,"author":{"gitID":"-"},"content":""},{"lineNumber":941,"author":{"gitID":"takuyakanbr"},"content":"|`* * *` |user |view a single book |obtain more information about it"},{"lineNumber":942,"author":{"gitID":"-"},"content":""},{"lineNumber":943,"author":{"gitID":"takuyakanbr"},"content":"|`* * *` |user |delete books |remove books I no longer want to read"},{"lineNumber":944,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":945,"author":{"gitID":"takuyakanbr"},"content":"|`* * *` |user |mark a book as read |keep track of what to read and what have been read"},{"lineNumber":946,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":947,"author":{"gitID":"takuyakanbr"},"content":"|`* * *` |user |change the priority of a book |keep track of what to read and what have been read"},{"lineNumber":948,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":949,"author":{"gitID":"takuyakanbr"},"content":"|`* * *` |user |filter books by title, author, tag, priority, etc. |easily find my books"},{"lineNumber":950,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":951,"author":{"gitID":"takuyakanbr"},"content":"|`* * *` |user |sort books by title, author, tag, priority, etc. |easily find my books"},{"lineNumber":952,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":953,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |view the books I recently looked at |reconsider my choices"},{"lineNumber":954,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":955,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |undo my commands |change my mind"},{"lineNumber":956,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":957,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |redo my undone commands |change my mind twice"},{"lineNumber":958,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":959,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |view book reviews |decide on suitability of book"},{"lineNumber":960,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":961,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |rate books |give recommendations to others"},{"lineNumber":962,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":963,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |search the library catalogue |check for availability of the book"},{"lineNumber":964,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":965,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |add books to my watchlist |get updated on the availability of the book in the library"},{"lineNumber":966,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":967,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |order books from online services |get access to them"},{"lineNumber":968,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":969,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |power user |use aliases in place of full commands |reduce the amount of typing needed"},{"lineNumber":970,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":971,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |view hints when typing commands |recall the syntax of the command"},{"lineNumber":972,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":973,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |add and open eBook files |easily open and read my eBooks"},{"lineNumber":974,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":975,"author":{"gitID":"takuyakanbr"},"content":"|`* *` |user |obtain recommendations |get exposure to more books"},{"lineNumber":976,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":977,"author":{"gitID":"takuyakanbr"},"content":"|`*` |user |add book reviews |share with others my thoughts"},{"lineNumber":978,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":979,"author":{"gitID":"takuyakanbr"},"content":"|`*` |user |open eBooks in the App |easily read my eBooks"},{"lineNumber":980,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":981,"author":{"gitID":"takuyakanbr"},"content":"|`*` |user |import list of books from online services |easily populate my collection of books"},{"lineNumber":982,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":983,"author":{"gitID":"takuyakanbr"},"content":"|`*` |user |change the theme of the App |choose a theme I prefer"},{"lineNumber":984,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":985,"author":{"gitID":"takuyakanbr"},"content":"|`*` |user |change the font size of the App |make the text easier on my eyes"},{"lineNumber":986,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":987,"author":{"gitID":"takuyakanbr"},"content":"|`*` |user |encrypt my data using a password |keep my data secure"},{"lineNumber":988,"author":{"gitID":"-"},"content":"|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":989,"author":{"gitID":"-"},"content":""},{"lineNumber":990,"author":{"gitID":"-"},"content":"_{More to be added}_"},{"lineNumber":991,"author":{"gitID":"-"},"content":""},{"lineNumber":992,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":993,"author":{"gitID":"-"},"content":"\u003d\u003d Use Cases"},{"lineNumber":994,"author":{"gitID":"-"},"content":""},{"lineNumber":995,"author":{"gitID":"qiu-siqi"},"content":"(For all use cases below, the *System* is `Bibliotek` and the *Actor* is the `user`, unless specified otherwise)"},{"lineNumber":996,"author":{"gitID":"-"},"content":""},{"lineNumber":997,"author":{"gitID":"-"},"content":"[discrete]"},{"lineNumber":998,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Use case: UC1 - View my reading list"},{"lineNumber":999,"author":{"gitID":"-"},"content":""},{"lineNumber":1000,"author":{"gitID":"-"},"content":"*MSS*"},{"lineNumber":1001,"author":{"gitID":"-"},"content":""},{"lineNumber":1002,"author":{"gitID":"qiu-siqi"},"content":"1.  User requests to list all books in his reading list."},{"lineNumber":1003,"author":{"gitID":"592363789"},"content":"2.  Bibliotek shows a list of the books."},{"lineNumber":1004,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1005,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1006,"author":{"gitID":"-"},"content":""},{"lineNumber":1007,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1008,"author":{"gitID":"-"},"content":""},{"lineNumber":1009,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1010,"author":{"gitID":"-"},"content":"* 2a. The list is empty."},{"lineNumber":1011,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1012,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1013,"author":{"gitID":"qiu-siqi"},"content":"** 2a1. Bibliotek shows an empty list."},{"lineNumber":1014,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1015,"author":{"gitID":"qiu-siqi"},"content":"Use case ends."},{"lineNumber":1016,"author":{"gitID":"-"},"content":""},{"lineNumber":1017,"author":{"gitID":"qiu-siqi"},"content":"[discrete]"},{"lineNumber":1018,"author":{"gitID":"qiu-siqi"},"content":"\u003d\u003d\u003d Use case: UC2 - Search for books"},{"lineNumber":1019,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":1020,"author":{"gitID":"qiu-siqi"},"content":"*MSS*"},{"lineNumber":1021,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":1022,"author":{"gitID":"qiu-siqi"},"content":"1.  User performs a search with some constraints (title, author, etc.)."},{"lineNumber":1023,"author":{"gitID":"qiu-siqi"},"content":"2.  Bibliotek lists books satisfying all the constraints."},{"lineNumber":1024,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1025,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1026,"author":{"gitID":"-"},"content":""},{"lineNumber":1027,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1028,"author":{"gitID":"-"},"content":""},{"lineNumber":1029,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1030,"author":{"gitID":"qiu-siqi"},"content":"* 2a. Bibliotek doesn’t find any books satisfying all the constraints."},{"lineNumber":1031,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1032,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1033,"author":{"gitID":"qiu-siqi"},"content":"** 2a1. Bibliotek shows an empty list."},{"lineNumber":1034,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1035,"author":{"gitID":"qiu-siqi"},"content":"Use case ends."},{"lineNumber":1036,"author":{"gitID":"-"},"content":""},{"lineNumber":1037,"author":{"gitID":"qiu-siqi"},"content":"* 2b. Bibliotek cannot fetch the list of books within 5s."},{"lineNumber":1038,"author":{"gitID":"qiu-siqi"},"content":"+"},{"lineNumber":1039,"author":{"gitID":"qiu-siqi"},"content":"[none]"},{"lineNumber":1040,"author":{"gitID":"qiu-siqi"},"content":"** 2b1. Bibliotek shows an error message."},{"lineNumber":1041,"author":{"gitID":"qiu-siqi"},"content":"+"},{"lineNumber":1042,"author":{"gitID":"qiu-siqi"},"content":"Use case ends."},{"lineNumber":1043,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1044,"author":{"gitID":"592363789"},"content":"[discrete]"},{"lineNumber":1045,"author":{"gitID":"592363789"},"content":"\u003d\u003d\u003d Use case: UC3 - View a specific book"},{"lineNumber":1046,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1047,"author":{"gitID":"592363789"},"content":"*MSS*"},{"lineNumber":1048,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1049,"author":{"gitID":"592363789"},"content":"1. User obtains a list of books by listing (\u003c\u003cUse case: UC1 - View my reading list, *UC1*\u003e\u003e)"},{"lineNumber":1050,"author":{"gitID":"592363789"},"content":"                                            or searching (\u003c\u003cUse case: UC2 - Search for books,*UC2*\u003e\u003e)."},{"lineNumber":1051,"author":{"gitID":"592363789"},"content":"2. User requests to view more information on a specific book in the list."},{"lineNumber":1052,"author":{"gitID":"592363789"},"content":"3. Bibliotek shows detailed information of the book."},{"lineNumber":1053,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1054,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1055,"author":{"gitID":"-"},"content":""},{"lineNumber":1056,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1057,"author":{"gitID":"-"},"content":""},{"lineNumber":1058,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1059,"author":{"gitID":"592363789"},"content":"* 2a. User does not find the intended book in the list."},{"lineNumber":1060,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1061,"author":{"gitID":"592363789"},"content":"Use case restarts from step 1."},{"lineNumber":1062,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1063,"author":{"gitID":"592363789"},"content":"* 2b. User gives an invalid index."},{"lineNumber":1064,"author":{"gitID":"qiu-siqi"},"content":"+"},{"lineNumber":1065,"author":{"gitID":"qiu-siqi"},"content":"[none]"},{"lineNumber":1066,"author":{"gitID":"qiu-siqi"},"content":"** 2b1. Bibliotek shows an error message."},{"lineNumber":1067,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1068,"author":{"gitID":"592363789"},"content":"Use case resumes at step 2."},{"lineNumber":1069,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1070,"author":{"gitID":"592363789"},"content":"* 3a. Bibliotek cannot fetch the details of the book within 5s."},{"lineNumber":1071,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1072,"author":{"gitID":"592363789"},"content":"[none]"},{"lineNumber":1073,"author":{"gitID":"592363789"},"content":"** 3a1. Bibliotek shows an error message."},{"lineNumber":1074,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1075,"author":{"gitID":"592363789"},"content":"Use case ends."},{"lineNumber":1076,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":1077,"author":{"gitID":"592363789"},"content":"[discrete]"},{"lineNumber":1078,"author":{"gitID":"592363789"},"content":"\u003d\u003d\u003d Use case: UC4 - Add a book to my reading list"},{"lineNumber":1079,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1080,"author":{"gitID":"592363789"},"content":"*MSS*"},{"lineNumber":1081,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1082,"author":{"gitID":"592363789"},"content":"1. User obtains a list of books by listing (\u003c\u003cUse case: UC1 - View my reading list, *UC1*\u003e\u003e)"},{"lineNumber":1083,"author":{"gitID":"592363789"},"content":"                                            or searching (\u003c\u003cUse case: UC2 - Search for books,*UC2*\u003e\u003e)."},{"lineNumber":1084,"author":{"gitID":"592363789"},"content":"2. User requests to add a specific book from the list to his reading list."},{"lineNumber":1085,"author":{"gitID":"592363789"},"content":"3. Bibliotek adds the book to the user\u0027s reading list."},{"lineNumber":1086,"author":{"gitID":"592363789"},"content":"4. Bibliotek shows a success message."},{"lineNumber":1087,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1088,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1089,"author":{"gitID":"-"},"content":""},{"lineNumber":1090,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1091,"author":{"gitID":"-"},"content":""},{"lineNumber":1092,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1093,"author":{"gitID":"592363789"},"content":"* 2a. User gives an invalid index."},{"lineNumber":1094,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1095,"author":{"gitID":"592363789"},"content":"[none]"},{"lineNumber":1096,"author":{"gitID":"592363789"},"content":"** 2a1. Bibliotek shows an error message."},{"lineNumber":1097,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1098,"author":{"gitID":"592363789"},"content":"Use case resume at step 2."},{"lineNumber":1099,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1100,"author":{"gitID":"592363789"},"content":"* 2b. The book is already in user\u0027s reading list."},{"lineNumber":1101,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1102,"author":{"gitID":"592363789"},"content":"[none]"},{"lineNumber":1103,"author":{"gitID":"592363789"},"content":"** 2b1. Bibliotek tells user that the book is already in his reading list."},{"lineNumber":1104,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1105,"author":{"gitID":"592363789"},"content":"Use case ends."},{"lineNumber":1106,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1107,"author":{"gitID":"592363789"},"content":"[discrete]"},{"lineNumber":1108,"author":{"gitID":"592363789"},"content":"\u003d\u003d\u003d Use case: UC5 - Rate a book"},{"lineNumber":1109,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1110,"author":{"gitID":"592363789"},"content":"*MSS*"},{"lineNumber":1111,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1112,"author":{"gitID":"592363789"},"content":"1. User obtains a list of books by listing (\u003c\u003cUse case: UC1 - View my reading list, *UC1*\u003e\u003e)"},{"lineNumber":1113,"author":{"gitID":"592363789"},"content":" or searching (\u003c\u003cUse case: UC2 - Search for books,*UC2*\u003e\u003e)."},{"lineNumber":1114,"author":{"gitID":"592363789"},"content":"2. User requests to give a rating to a specific book in the list."},{"lineNumber":1115,"author":{"gitID":"592363789"},"content":"3. Bibliotek shows a success message."},{"lineNumber":1116,"author":{"gitID":"-"},"content":"+"},{"lineNumber":1117,"author":{"gitID":"-"},"content":"Use case ends."},{"lineNumber":1118,"author":{"gitID":"-"},"content":""},{"lineNumber":1119,"author":{"gitID":"-"},"content":"*Extensions*"},{"lineNumber":1120,"author":{"gitID":"-"},"content":""},{"lineNumber":1121,"author":{"gitID":"-"},"content":"[none]"},{"lineNumber":1122,"author":{"gitID":"592363789"},"content":"* 2a. The given rating is out of range."},{"lineNumber":1123,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1124,"author":{"gitID":"592363789"},"content":"[none]"},{"lineNumber":1125,"author":{"gitID":"592363789"},"content":"** 2a1. Bibliotek says that the rating is invalid and asks user to try again."},{"lineNumber":1126,"author":{"gitID":"592363789"},"content":"+"},{"lineNumber":1127,"author":{"gitID":"592363789"},"content":"Use case resumes at step 2"},{"lineNumber":1128,"author":{"gitID":"592363789"},"content":""},{"lineNumber":1129,"author":{"gitID":"-"},"content":"_{More to be added}_"},{"lineNumber":1130,"author":{"gitID":"-"},"content":""},{"lineNumber":1131,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1132,"author":{"gitID":"-"},"content":"\u003d\u003d Non Functional Requirements"},{"lineNumber":1133,"author":{"gitID":"-"},"content":""},{"lineNumber":1134,"author":{"gitID":"-"},"content":".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `1.8.0_60` or higher installed."},{"lineNumber":1135,"author":{"gitID":"qiu-siqi"},"content":".  Should work on both 32-bit and 64-bit environments."},{"lineNumber":1136,"author":{"gitID":"qiu-siqi"},"content":".  Should come with automated unit tests and open source code."},{"lineNumber":1137,"author":{"gitID":"qiu-siqi"},"content":".  Should come with a user guide and a developer guide."},{"lineNumber":1138,"author":{"gitID":"qiu-siqi"},"content":".  Should favor \u003c\u003cdos-style-commands,DOS style commands\u003e\u003e over Unix-style commands."},{"lineNumber":1139,"author":{"gitID":"qiu-siqi"},"content":".  Should be able to hold up to 1000 books without a noticeable sluggishness in performance for typical usage."},{"lineNumber":1140,"author":{"gitID":"qiu-siqi"},"content":".  Should respond to user commands within 50ms if no external API calls are required. Otherwise, respond within 5s."},{"lineNumber":1141,"author":{"gitID":"qiu-siqi"},"content":".  Should be intuitive such that a new user can learn to search and add books within 10 minutes."},{"lineNumber":1142,"author":{"gitID":"-"},"content":".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":1143,"author":{"gitID":"-"},"content":""},{"lineNumber":1144,"author":{"gitID":"-"},"content":"_{More to be added}_"},{"lineNumber":1145,"author":{"gitID":"-"},"content":""},{"lineNumber":1146,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1147,"author":{"gitID":"-"},"content":"\u003d\u003d Glossary"},{"lineNumber":1148,"author":{"gitID":"-"},"content":""},{"lineNumber":1149,"author":{"gitID":"-"},"content":"[[mainstream-os]] Mainstream OS::"},{"lineNumber":1150,"author":{"gitID":"-"},"content":"Windows, Linux, Unix, OS-X"},{"lineNumber":1151,"author":{"gitID":"-"},"content":""},{"lineNumber":1152,"author":{"gitID":"qiu-siqi"},"content":"[[dos-style-commands]] DOS style commands::"},{"lineNumber":1153,"author":{"gitID":"qiu-siqi"},"content":"The use of backslashes \u0027/\u0027 to indicate command parameters"},{"lineNumber":1154,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":1155,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1156,"author":{"gitID":"-"},"content":"\u003d\u003d Product Survey"},{"lineNumber":1157,"author":{"gitID":"-"},"content":""},{"lineNumber":1158,"author":{"gitID":"-"},"content":"*Product Name*"},{"lineNumber":1159,"author":{"gitID":"-"},"content":""},{"lineNumber":1160,"author":{"gitID":"-"},"content":"Author: ..."},{"lineNumber":1161,"author":{"gitID":"-"},"content":""},{"lineNumber":1162,"author":{"gitID":"-"},"content":"Pros:"},{"lineNumber":1163,"author":{"gitID":"-"},"content":""},{"lineNumber":1164,"author":{"gitID":"-"},"content":"* ..."},{"lineNumber":1165,"author":{"gitID":"-"},"content":"* ..."},{"lineNumber":1166,"author":{"gitID":"-"},"content":""},{"lineNumber":1167,"author":{"gitID":"-"},"content":"Cons:"},{"lineNumber":1168,"author":{"gitID":"-"},"content":""},{"lineNumber":1169,"author":{"gitID":"-"},"content":"* ..."},{"lineNumber":1170,"author":{"gitID":"-"},"content":"* ..."},{"lineNumber":1171,"author":{"gitID":"-"},"content":""},{"lineNumber":1172,"author":{"gitID":"-"},"content":"[appendix]"},{"lineNumber":1173,"author":{"gitID":"-"},"content":"\u003d\u003d Instructions for Manual Testing"},{"lineNumber":1174,"author":{"gitID":"-"},"content":""},{"lineNumber":1175,"author":{"gitID":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":1176,"author":{"gitID":"-"},"content":""},{"lineNumber":1177,"author":{"gitID":"-"},"content":"[NOTE]"},{"lineNumber":1178,"author":{"gitID":"-"},"content":"These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."},{"lineNumber":1179,"author":{"gitID":"-"},"content":""},{"lineNumber":1180,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Launch and Shutdown"},{"lineNumber":1181,"author":{"gitID":"-"},"content":""},{"lineNumber":1182,"author":{"gitID":"-"},"content":". Initial launch"},{"lineNumber":1183,"author":{"gitID":"-"},"content":""},{"lineNumber":1184,"author":{"gitID":"-"},"content":".. Download the jar file and copy into an empty folder"},{"lineNumber":1185,"author":{"gitID":"-"},"content":".. Double-click the jar file +"},{"lineNumber":1186,"author":{"gitID":"-"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":1187,"author":{"gitID":"-"},"content":""},{"lineNumber":1188,"author":{"gitID":"-"},"content":". Saving window preferences"},{"lineNumber":1189,"author":{"gitID":"-"},"content":""},{"lineNumber":1190,"author":{"gitID":"-"},"content":".. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":1191,"author":{"gitID":"-"},"content":".. Re-launch the app by double-clicking the jar file. +"},{"lineNumber":1192,"author":{"gitID":"-"},"content":"   Expected: The most recent window size and location is retained."},{"lineNumber":1193,"author":{"gitID":"-"},"content":""},{"lineNumber":1194,"author":{"gitID":"-"},"content":"_{ more test cases ... }_"},{"lineNumber":1195,"author":{"gitID":"-"},"content":""},{"lineNumber":1196,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Deleting a person"},{"lineNumber":1197,"author":{"gitID":"-"},"content":""},{"lineNumber":1198,"author":{"gitID":"-"},"content":". Deleting a person while all persons are listed"},{"lineNumber":1199,"author":{"gitID":"-"},"content":""},{"lineNumber":1200,"author":{"gitID":"-"},"content":".. Prerequisites: List all persons using the `list` command. Multiple persons in the list."},{"lineNumber":1201,"author":{"gitID":"-"},"content":".. Test case: `delete 1` +"},{"lineNumber":1202,"author":{"gitID":"-"},"content":"   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."},{"lineNumber":1203,"author":{"gitID":"-"},"content":".. Test case: `delete 0` +"},{"lineNumber":1204,"author":{"gitID":"-"},"content":"   Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."},{"lineNumber":1205,"author":{"gitID":"-"},"content":".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size) _{give more}_ +"},{"lineNumber":1206,"author":{"gitID":"-"},"content":"   Expected: Similar to previous."},{"lineNumber":1207,"author":{"gitID":"-"},"content":""},{"lineNumber":1208,"author":{"gitID":"-"},"content":"_{ more test cases ... }_"},{"lineNumber":1209,"author":{"gitID":"-"},"content":""},{"lineNumber":1210,"author":{"gitID":"-"},"content":"\u003d\u003d\u003d Saving data"},{"lineNumber":1211,"author":{"gitID":"-"},"content":""},{"lineNumber":1212,"author":{"gitID":"-"},"content":". Dealing with missing/corrupted data files"},{"lineNumber":1213,"author":{"gitID":"-"},"content":""},{"lineNumber":1214,"author":{"gitID":"-"},"content":".. _{explain how to simulate a missing/corrupted file and the expected behavior}_"},{"lineNumber":1215,"author":{"gitID":"-"},"content":""},{"lineNumber":1216,"author":{"gitID":"-"},"content":"_{ more test cases ... }_"}],"authorContributionMap":{"qiu-siqi":161,"takuyakanbr":66,"592363789":65,"-":924}},{"path":"src/test/java/seedu/address/ui/BookCardTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysBook;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookCardHandle;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"public class BookCardTest extends GuiUnitTest {"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    public void display() {"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"        // no categories"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        Book bookWithNoCategories \u003d new BookBuilder().withCategories().build();"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        BookCard bookCard \u003d new BookCard(bookWithNoCategories, 1);"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"        uiPartRule.setUiPart(bookCard);"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"        assertCardDisplay(bookCard, bookWithNoCategories, 1);"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        // with categories"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        Book bookWithCategories \u003d new BookBuilder().build();"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        bookCard \u003d new BookCard(bookWithCategories, 2);"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"        uiPartRule.setUiPart(bookCard);"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        assertCardDisplay(bookCard, bookWithCategories, 2);"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    public void equals() {"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        Book book \u003d new BookBuilder().build();"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        BookCard bookCard \u003d new BookCard(book, 0);"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        // same book, same index -\u003e returns true"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        BookCard copy \u003d new BookCard(book, 0);"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(bookCard.equals(copy));"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        // same object -\u003e returns true"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(bookCard.equals(bookCard));"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        // null -\u003e returns false"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(bookCard \u003d\u003d null);"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        // different types -\u003e returns false"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(bookCard.equals(0));"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"        // different book, same index -\u003e returns false"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        Book differentBook \u003d new BookBuilder().withIsbn(\"111\").build();"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(bookCard.equals(new BookCard(differentBook, 0)));"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        // same book, different index -\u003e returns false"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(bookCard.equals(new BookCard(book, 1)));"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that {@code bookCard} displays the details of {@code expectedBook} correctly and matches"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"     * {@code expectedId}."},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"    private void assertCardDisplay(BookCard bookCard, Book expectedBook, int expectedId) {"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        BookCardHandle bookCardHandle \u003d new BookCardHandle(bookCard.getRoot());"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        // verify id is displayed correctly"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", bookCardHandle.getId());"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        // verify book details are displayed correctly"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        assertCardDisplaysBook(expectedBook, bookCardHandle);"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":65,"takuyakanbr":2,"-":5}},{"path":"src/test/java/seedu/address/ui/testutil/GuiTestAssert.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookCardHandle;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import guitests.guihandles.BookDetailsPanelHandle;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookListPanelHandle;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.RecentBooksPanelHandle;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import guitests.guihandles.SearchResultsPanelHandle;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"-"},"content":" * A set of assertion methods useful for writing GUI tests."},{"lineNumber":18,"author":{"gitID":"-"},"content":" */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class GuiTestAssert {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that {@code detailsPanel} displays the details of {@code expectedBook}."},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public static void assertDetailsPanelDisplaysBook(Book expectedBook, BookDetailsPanelHandle detailsPanel) {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedBook.getTitle().toString(), detailsPanel.getTitle());"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedBook.getIsbn().toString(), detailsPanel.getIsbn());"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedBook.getPublisher().toString(), detailsPanel.getPublisher());"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedBook.getPublicationDate().toString(), detailsPanel.getPublicationDate());"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedBook.getDescription().toString(), detailsPanel.getDescription());"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedBook.getAuthors().stream().map(author -\u003e author.fullName)"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"                .collect(Collectors.toList()), detailsPanel.getAuthors());"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedBook.getCategories().stream().map(category -\u003e category.category)"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"                .collect(Collectors.toList()), detailsPanel.getCategories());"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * Asserts that {@code actualCard} displays the same values as {@code expectedCard}."},{"lineNumber":38,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertCardEquals(BookCardHandle expectedCard, BookCardHandle actualCard) {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getId(), actualCard.getId());"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedCard.getAuthors(), actualCard.getAuthors());"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedCard.getCategories(), actualCard.getCategories());"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedCard.getTitle(), actualCard.getTitle());"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedBook}."},{"lineNumber":48,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertCardDisplaysBook(Book expectedBook, BookCardHandle actualCard) {"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedBook.getTitle().title, actualCard.getTitle());"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedBook.getAuthors().stream().map(author -\u003e author.fullName)"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"                        .collect(Collectors.toList()), actualCard.getAuthors());"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedBook.getCategories().stream().map(category -\u003e category.category)"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"                        .collect(Collectors.toList()), actualCard.getCategories());"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the list in {@code bookListPanelHandle} displays the details of {@code books} correctly and"},{"lineNumber":59,"author":{"gitID":"-"},"content":"     * in the correct order."},{"lineNumber":60,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertListMatching(BookListPanelHandle bookListPanelHandle, Book... books) {"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        for (int i \u003d 0; i \u003c books.length; i++) {"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"            assertCardDisplaysBook(books[i], bookListPanelHandle.getBookCardHandle(i));"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that the list in {@code searchResultsPanelHandle} displays the details of {@code books} correctly and"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"     * in the correct order."},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    public static void assertListMatching(SearchResultsPanelHandle searchResultsPanelHandle, Book... books) {"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        for (int i \u003d 0; i \u003c books.length; i++) {"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"            assertCardDisplaysBook(books[i], searchResultsPanelHandle.getBookCardHandle(i));"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that the list in {@code searchResultsPanelHandle} displays the details of {@code books} correctly and"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"     * in the correct order."},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertListMatching(RecentBooksPanelHandle recentBooksPanelHandle, Book... books) {"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"        for (int i \u003d 0; i \u003c books.length; i++) {"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"            assertCardDisplaysBook(books[i], recentBooksPanelHandle.getBookCardHandle(i));"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the list in {@code bookListPanelHandle} displays the details of {@code books} correctly and"},{"lineNumber":89,"author":{"gitID":"-"},"content":"     * in the correct order."},{"lineNumber":90,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertListMatching(BookListPanelHandle bookListPanelHandle, List\u003cBook\u003e books) {"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(bookListPanelHandle, books.toArray(new Book[0]));"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that the list in {@code searchResultsPanelHandle} displays the details of {@code books} correctly and"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"     * in the correct order."},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"    public static void assertListMatching(SearchResultsPanelHandle searchResultsPanelHandle, List\u003cBook\u003e books) {"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        assertListMatching(searchResultsPanelHandle, books.toArray(new Book[0]));"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that the list in {@code searchResultsPanelHandle} displays the details of {@code books} correctly and"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"     * in the correct order."},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertListMatching(RecentBooksPanelHandle recentBooksPanelHandle, List\u003cBook\u003e books) {"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(recentBooksPanelHandle, books.toArray(new Book[0]));"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts the size of the list in {@code bookListPanelHandle} equals to {@code size}."},{"lineNumber":113,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertListSize(BookListPanelHandle bookListPanelHandle, int size) {"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        int numberOfBooks \u003d bookListPanelHandle.getListSize();"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(size, numberOfBooks);"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts the size of the list in {@code searchResultsPanelHandle} equals to {@code size}."},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"    public static void assertListSize(SearchResultsPanelHandle searchResultsPanelHandle, int size) {"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":"        int numberOfBooks \u003d searchResultsPanelHandle.getListSize();"},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(size, numberOfBooks);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":128,"author":{"gitID":"-"},"content":"     * Asserts the message shown in {@code resultDisplayHandle} equals to {@code expected}."},{"lineNumber":129,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":130,"author":{"gitID":"-"},"content":"    public static void assertResultMessage(ResultDisplayHandle resultDisplayHandle, String expected) {"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        assertEquals(expected, resultDisplayHandle.getText());"},{"lineNumber":132,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":37,"takuyakanbr":51,"-":45}},{"path":"src/test/java/systemtests/SearchCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_ARTEMIS;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_ARTEMIS;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ISBN_DESC_ARTEMIS;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_ARTEMIS;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import guitests.GuiRobot;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"public class SearchCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    public void search() throws Exception {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"        /* ----------------------------------- Perform invalid search operations ------------------------------------ */"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: no search term or parameters -\u003e rejected */"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(SearchCommand.COMMAND_WORD, SearchCommand.MESSAGE_EMPTY_QUERY);"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: no search term or parameters -\u003e rejected */"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(\"   \" + SearchCommand.COMMAND_WORD + \"             \", SearchCommand.MESSAGE_EMPTY_QUERY);"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(\"SeaRcH hello\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: misspelled command word -\u003e rejected */"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(\"searchh hello\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        /* ----------------------------------- Perform valid search operations -------------------------------------- */"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        // Note: these tests require network connection."},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: search for non-existant book -\u003e return 0 results */"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        assertSearchSuccess(SearchCommand.COMMAND_WORD + TITLE_DESC_ARTEMIS + CATEGORY_DESC_ARTEMIS"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"                + ISBN_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS);"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: search for books given search parameters -\u003e success */"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        assertSearchSuccess(SearchCommand.COMMAND_WORD + TITLE_DESC_ARTEMIS + CATEGORY_DESC_ARTEMIS"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"                + AUTHOR_DESC_ARTEMIS);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: search for books given search term -\u003e success */"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        assertSearchSuccess(SearchCommand.COMMAND_WORD + \" hello\");"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        /* ----------------------------------- Perform commands on search results ----------------------------------- */"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: trying to clear or delete result items -\u003e rejected */"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(ClearCommand.COMMAND_WORD, ClearCommand.MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(DeleteCommand.COMMAND_WORD + \" 1\", DeleteCommand.MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"     * Executes {@code command} and verifies that, after the web API has returned a result,\u003cbr\u003e"},{"lineNumber":60,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":61,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"     * 3. Result display box displays the search successful message.\u003cbr\u003e"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"     * 4. {@code Storage} and{@code BookListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"     * 5. Status bar remains unchanged.\u003cbr\u003e"},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"     * @see BibliotekSystemTest#assertSelectedBookListCardChanged(Index)"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    private void assertSearchSuccess(String command) throws Exception {"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        executeCommand(command);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        new GuiRobot().waitForEvent(() -\u003e !getResultDisplay().getText().equals(SearchCommand.MESSAGE_SEARCHING));"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf searchResults \u003d new BookShelf();"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        searchResults.setBooks(getModel().getSearchResultsList());"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        expectedModel.updateSearchResults(searchResults);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        assertApplicationDisplaysExpected(\"\","},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"                String.format(SearchCommand.MESSAGE_SEARCH_SUCCESS, searchResults.getBookList().size()), expectedModel);"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"takuyakanbr":68,"-":18}},{"path":"src/test/java/seedu/address/ui/BookListPanelTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postNow;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBooks;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysBook;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardEquals;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookCardHandle;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookListPanelHandle;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.JumpToBookListIndexRequestEvent;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"public class BookListPanelTest extends GuiUnitTest {"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    private static final ObservableList\u003cBook\u003e TYPICAL_BOOKS \u003d"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"            FXCollections.observableList(getTypicalBooks());"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private static final JumpToBookListIndexRequestEvent JUMP_TO_SECOND_EVENT \u003d"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"            new JumpToBookListIndexRequestEvent(INDEX_SECOND_BOOK);"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    private BookListPanelHandle bookListPanelHandle;"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    @Before"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    public void setUp() {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        BookListPanel bookListPanel \u003d new BookListPanel(TYPICAL_BOOKS);"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        uiPartRule.setUiPart(bookListPanel);"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        bookListPanelHandle \u003d new BookListPanelHandle(getChildNode(bookListPanel.getRoot(),"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"                BookListPanelHandle.BOOK_LIST_VIEW_ID));"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    public void display() {"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        for (int i \u003d 0; i \u003c TYPICAL_BOOKS.size(); i++) {"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"            bookListPanelHandle.navigateToCard(TYPICAL_BOOKS.get(i));"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"            Book expectedBook \u003d TYPICAL_BOOKS.get(i);"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"            BookCardHandle actualCard \u003d bookListPanelHandle.getBookCardHandle(i);"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"            assertCardDisplaysBook(expectedBook, actualCard);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"            assertEquals(Integer.toString(i + 1) + \". \", actualCard.getId());"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    public void handleJumpToBookListIndexRequestEvent() {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        postNow(JUMP_TO_SECOND_EVENT);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        BookCardHandle expectedCard \u003d bookListPanelHandle.getBookCardHandle(INDEX_SECOND_BOOK.getZeroBased());"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        BookCardHandle selectedCard \u003d bookListPanelHandle.getHandleToSelectedCard();"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        assertCardEquals(expectedCard, selectedCard);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":33,"takuyakanbr":4,"-":22}},{"path":"src/test/java/seedu/address/TestApp.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.function.Supplier;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.stage.Screen;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.WindowSettings;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.XmlUtil;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.storage.UserPrefsStorage;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.storage.XmlSerializableBookShelf;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TestUtil;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import systemtests.ModelHelper;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * This class is meant to override some properties of MainApp so that it will be suited for"},{"lineNumber":26,"author":{"gitID":"-"},"content":" * testing"},{"lineNumber":27,"author":{"gitID":"-"},"content":" */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"public class TestApp extends MainApp {"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static final String SAVE_LOCATION_FOR_TESTING \u003d TestUtil.getFilePathInSandboxFolder(\"sampleData.xml\");"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public static final String APP_TITLE \u003d \"Test App\";"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    protected static final String DEFAULT_PREF_FILE_LOCATION_FOR_TESTING \u003d"},{"lineNumber":34,"author":{"gitID":"-"},"content":"            TestUtil.getFilePathInSandboxFolder(\"pref_testing.json\");"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    protected static final String BOOK_SHELF_NAME \u003d \"Test\";"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    protected Supplier\u003cReadOnlyBookShelf\u003e initialDataSupplier \u003d () -\u003e null;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    protected String saveFileLocation \u003d SAVE_LOCATION_FOR_TESTING;"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public TestApp() {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"    public TestApp(Supplier\u003cReadOnlyBookShelf\u003e initialDataSupplier, String saveFileLocation) {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        this.initialDataSupplier \u003d initialDataSupplier;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        this.saveFileLocation \u003d saveFileLocation;"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        // If some initial local data has been provided, write those to the file"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        if (initialDataSupplier.get() !\u003d null) {"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"            createDataFileWithData(new XmlSerializableBookShelf(this.initialDataSupplier.get()),"},{"lineNumber":50,"author":{"gitID":"-"},"content":"                    this.saveFileLocation);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    protected Config initConfig(String configFilePath) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        Config config \u003d super.initConfig(configFilePath);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        config.setAppTitle(APP_TITLE);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        config.setUserPrefsFilePath(DEFAULT_PREF_FILE_LOCATION_FOR_TESTING);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        return config;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d super.initPrefs(storage);"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        double x \u003d Screen.getPrimary().getVisualBounds().getMinX();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        double y \u003d Screen.getPrimary().getVisualBounds().getMinY();"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        userPrefs.updateLastUsedGuiSetting(new WindowSettings(600.0, 600.0, (int) x, (int) y));"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"        userPrefs.setBookShelfFilePath(saveFileLocation);"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        userPrefs.setBookShelfName(BOOK_SHELF_NAME);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        return userPrefs;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a defensive copy of the book shelf data stored inside the storage file."},{"lineNumber":75,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelf readStorageBookShelf() {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"            return new BookShelf(storage.readBookShelf().get());"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        } catch (DataConversionException dce) {"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"            throw new AssertionError(\"Data is not in the BookShelf format.\");"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Storage file cannot be found.\");"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":87,"author":{"gitID":"-"},"content":"     * Returns the file path of the storage file."},{"lineNumber":88,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    public String getStorageSaveLocation() {"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        return storage.getBookShelfFilePath();"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":94,"author":{"gitID":"-"},"content":"     * Returns a defensive copy of the model."},{"lineNumber":95,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    public Model getModel() {"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"        Model copy \u003d new ModelManager((model.getBookShelf()), new UserPrefs(),"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"                model.getRecentBooksListAsBookShelf());"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        ModelHelper.setFilteredList(copy, model.getFilteredBookList());"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        ModelHelper.setSearchResults(copy, model.getSearchResultsList());"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        ModelHelper.setRecentBooks(copy, model.getRecentBooksList());"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        return copy;"},{"lineNumber":103,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        ui.start(primaryStage);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        launch(args);"},{"lineNumber":112,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":115,"author":{"gitID":"-"},"content":"     * Creates an XML file at the {@code filePath} with the {@code data}."},{"lineNumber":116,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    private \u003cT\u003e void createDataFileWithData(T data, String filePath) {"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":119,"author":{"gitID":"-"},"content":"            File saveFileForTesting \u003d new File(filePath);"},{"lineNumber":120,"author":{"gitID":"-"},"content":"            FileUtil.createIfMissing(saveFileForTesting);"},{"lineNumber":121,"author":{"gitID":"-"},"content":"            XmlUtil.saveDataToFile(saveFileForTesting, data);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":125,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":18,"takuyakanbr":1,"-":107}},{"path":"src/test/java/seedu/address/ui/testutil/EventsCollectorRule.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.rules.TestRule;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.runner.Description;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.runners.model.Statement;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"-"},"content":" * Sets up an {@code EventsCollector} and tears it down after each test."},{"lineNumber":17,"author":{"gitID":"-"},"content":" */"},{"lineNumber":18,"author":{"gitID":"-"},"content":"public class EventsCollectorRule implements TestRule {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public final EventsCollector eventsCollector \u003d new EventsCollector();"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    protected void after() {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        EventsCenter.clearSubscribers();"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public Statement apply(final Statement base, final Description description) {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        return new Statement() {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"            @Override"},{"lineNumber":29,"author":{"gitID":"-"},"content":"            public void evaluate() throws Throwable {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"                try {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"                    base.evaluate();"},{"lineNumber":32,"author":{"gitID":"-"},"content":"                } finally {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"                    after();"},{"lineNumber":34,"author":{"gitID":"-"},"content":"                }"},{"lineNumber":35,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        };"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     * A class that collects events raised by other classes."},{"lineNumber":41,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public class EventsCollector {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        private List\u003cBaseEvent\u003e events \u003d new ArrayList\u003cBaseEvent\u003e();"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"        public EventsCollector() {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"            EventsCenter.getInstance().registerHandler(this);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        /**"},{"lineNumber":50,"author":{"gitID":"-"},"content":"         * Collects any event raised by any class"},{"lineNumber":51,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        @Subscribe"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        public void collectEvent(BaseEvent event) {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            events.add(event);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        /**"},{"lineNumber":58,"author":{"gitID":"-"},"content":"         * Removes collected events from the collected list"},{"lineNumber":59,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        public void reset() {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            events.clear();"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"        public int getSize() {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"            return events.size();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        /**"},{"lineNumber":69,"author":{"gitID":"-"},"content":"         * Returns the most recent event collected"},{"lineNumber":70,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        public BaseEvent getMostRecent() {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"            if (events.isEmpty()) {"},{"lineNumber":73,"author":{"gitID":"-"},"content":"                return null;"},{"lineNumber":74,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"            return events.get(events.size() - 1);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        /**"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"         * Returns the most recent event collected, of the specified class."},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"         */"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        public BaseEvent getMostRecent(Class clazz) {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"            for (int i \u003d events.size() - 1; i \u003e\u003d 0; --i) {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"                if (events.get(i).getClass() \u003d\u003d clazz) {"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"                    return events.get(i);"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"                }"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"            }"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"            return null;"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"        /**"},{"lineNumber":92,"author":{"gitID":"-"},"content":"         * Returns true if the collector did not receive any events"},{"lineNumber":93,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        public boolean isEmpty() {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"            return events.isEmpty();"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":12,"-":86}},{"path":"src/test/java/seedu/address/ui/StatusBarFooterTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postNow;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_INITIAL;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_UPDATED;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.time.Clock;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.time.Instant;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.AfterClass;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import guitests.guihandles.StatusBarFooterHandle;"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class StatusBarFooterTest extends GuiUnitTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final String STUB_SAVE_LOCATION \u003d \"Stub\";"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final String RELATIVE_PATH \u003d \"./\";"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    private static final BookShelfChangedEvent EVENT_STUB \u003d new BookShelfChangedEvent(new BookShelf());"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private static final Clock originalClock \u003d StatusBarFooter.getClock();"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final Clock injectedClock \u003d Clock.fixed(Instant.now(), ZoneId.systemDefault());"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private StatusBarFooterHandle statusBarFooterHandle;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @BeforeClass"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public static void setUpBeforeClass() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        // inject fixed clock"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        StatusBarFooter.setClock(injectedClock);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @AfterClass"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public static void tearDownAfterClass() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        // restore original clock"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        StatusBarFooter.setClock(originalClock);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(STUB_SAVE_LOCATION);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(statusBarFooter);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        statusBarFooterHandle \u003d new StatusBarFooterHandle(statusBarFooter.getRoot());"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public void display() {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        // initial state"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        assertStatusBarContent(RELATIVE_PATH + STUB_SAVE_LOCATION, SYNC_STATUS_INITIAL);"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        // after book shelf is updated"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        postNow(EVENT_STUB);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertStatusBarContent(RELATIVE_PATH + STUB_SAVE_LOCATION,"},{"lineNumber":62,"author":{"gitID":"-"},"content":"                String.format(SYNC_STATUS_UPDATED, new Date(injectedClock.millis()).toString()));"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * Asserts that the save location matches that of {@code expectedSaveLocation}, and the"},{"lineNumber":67,"author":{"gitID":"-"},"content":"     * sync status matches that of {@code expectedSyncStatus}."},{"lineNumber":68,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    private void assertStatusBarContent(String expectedSaveLocation, String expectedSyncStatus) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        assertEquals(expectedSaveLocation, statusBarFooterHandle.getSaveLocation());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertEquals(expectedSyncStatus, statusBarFooterHandle.getSyncStatus());"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"-":71}},{"path":"src/test/java/systemtests/BibliotekSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_INITIAL;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_UPDATED;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertDetailsPanelDisplaysBook;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.After;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.ClassRule;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import guitests.guihandles.BookDetailsPanelHandle;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookListPanelHandle;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import guitests.guihandles.CommandBoxHandle;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainMenuHandle;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainWindowHandle;"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.RecentBooksPanelHandle;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"import guitests.guihandles.SearchResultsPanelHandle;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import guitests.guihandles.StatusBarFooterHandle;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.TestApp;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"import seedu.address.ui.CommandBox;"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":" * A system test class for Bibliotek, which provides access to handles of GUI components and helper methods"},{"lineNumber":42,"author":{"gitID":"-"},"content":" * for test verification."},{"lineNumber":43,"author":{"gitID":"-"},"content":" */"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"public abstract class BibliotekSystemTest {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @ClassRule"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public static ClockRule clockRule \u003d new ClockRule();"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_DEFAULT_STYLE \u003d Arrays.asList(\"text-input\", \"text-field\");"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_ERROR_STYLE \u003d"},{"lineNumber":50,"author":{"gitID":"-"},"content":"            Arrays.asList(\"text-input\", \"text-field\", CommandBox.ERROR_STYLE_CLASS);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    private MainWindowHandle mainWindowHandle;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    private TestApp testApp;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    private SystemTestSetupHelper setupHelper;"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    @BeforeClass"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public static void setupBeforeClass() {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        SystemTestSetupHelper.initialize();"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        setupHelper \u003d new SystemTestSetupHelper();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        testApp \u003d setupHelper.setupApplication(this::getInitialData, getDataFileLocation());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        mainWindowHandle \u003d setupHelper.setupMainWindowHandle();"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assertApplicationStartingStateIsCorrect();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @After"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public void tearDown() throws Exception {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        setupHelper.tearDownStage();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        EventsCenter.clearSubscribers();"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"-"},"content":"     * Returns the data to be loaded into the file in {@link #getDataFileLocation()}."},{"lineNumber":78,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"    protected BookShelf getInitialData() {"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        return TypicalBooks.getTypicalBookShelf();"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"-"},"content":"     * Returns the directory of the data file."},{"lineNumber":85,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    protected String getDataFileLocation() {"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        return TestApp.SAVE_LOCATION_FOR_TESTING;"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"    public MainWindowHandle getMainWindowHandle() {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        return mainWindowHandle;"},{"lineNumber":92,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"    public CommandBoxHandle getCommandBox() {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getCommandBox();"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"    public BookListPanelHandle getBookListPanel() {"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        return mainWindowHandle.getBookListPanel();"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"    public SearchResultsPanelHandle getSearchResultsPanel() {"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        return mainWindowHandle.getSearchResultsPanel();"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"    public RecentBooksPanelHandle getRecentBooksPanel() {"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"        return mainWindowHandle.getRecentBooksPanel();"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"    public MainMenuHandle getMainMenu() {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getMainMenu();"},{"lineNumber":112,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"    public BookDetailsPanelHandle getBookDetailsPanel() {"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        return mainWindowHandle.getBookDetailsPanel();"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getStatusBarFooter();"},{"lineNumber":120,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getResultDisplay();"},{"lineNumber":124,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"-"},"content":""},{"lineNumber":126,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":127,"author":{"gitID":"-"},"content":"     * Returns a defensive copy of the current model."},{"lineNumber":128,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":129,"author":{"gitID":"-"},"content":"    protected Model getModel() {"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        return testApp.getModel();"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":134,"author":{"gitID":"-"},"content":"     * Executes {@code command} in the application\u0027s {@code CommandBox}."},{"lineNumber":135,"author":{"gitID":"-"},"content":"     * Method returns after UI components have been updated."},{"lineNumber":136,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    protected void executeCommand(String command) {"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        rememberStates();"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        // Injects a fixed clock before executing a command so that the time stamp shown in the status bar"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        // after each command is predictable and also different from the previous command."},{"lineNumber":141,"author":{"gitID":"-"},"content":"        clockRule.setInjectedClockToCurrentTime();"},{"lineNumber":142,"author":{"gitID":"-"},"content":""},{"lineNumber":143,"author":{"gitID":"-"},"content":"        mainWindowHandle.getCommandBox().run(command);"},{"lineNumber":144,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":147,"author":{"gitID":"qiu-siqi"},"content":"     * Displays all books in the book shelf."},{"lineNumber":148,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitID":"qiu-siqi"},"content":"    protected void showAllBooks() {"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        executeCommand(ListCommand.COMMAND_WORD);"},{"lineNumber":151,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(getModel().getBookShelf().getBookList().size(), getModel().getFilteredBookList().size());"},{"lineNumber":152,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":155,"author":{"gitID":"takuyakanbr"},"content":"     * Selects the book at {@code index} of the book list."},{"lineNumber":156,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":157,"author":{"gitID":"qiu-siqi"},"content":"    protected void selectBook(Index index) {"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + index.getOneBased());"},{"lineNumber":159,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(index.getZeroBased(), getBookListPanel().getSelectedCardIndex());"},{"lineNumber":160,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":163,"author":{"gitID":"takuyakanbr"},"content":"     * Selects the book at {@code index} of the search result list."},{"lineNumber":164,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":165,"author":{"gitID":"takuyakanbr"},"content":"    protected void selectSearchResult(Index index) {"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + index.getOneBased());"},{"lineNumber":167,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(index.getZeroBased(), getSearchResultsPanel().getSelectedCardIndex());"},{"lineNumber":168,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":169,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":170,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":171,"author":{"gitID":"qiu-siqi"},"content":"     * Selects the book at {@code index} of the recently selected books list."},{"lineNumber":172,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":173,"author":{"gitID":"qiu-siqi"},"content":"    protected void selectRecentBooks(Index index) {"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + index.getOneBased());"},{"lineNumber":175,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(index.getZeroBased(), getRecentBooksPanel().getSelectedCardIndex());"},{"lineNumber":176,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":177,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":179,"author":{"gitID":"qiu-siqi"},"content":"     * Deletes all books in the book shelf."},{"lineNumber":180,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":181,"author":{"gitID":"qiu-siqi"},"content":"    protected void deleteAllBooks() {"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        executeCommand(ClearCommand.COMMAND_WORD);"},{"lineNumber":183,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(0, getModel().getBookShelf().getBookList().size());"},{"lineNumber":184,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitID":"-"},"content":""},{"lineNumber":186,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":188,"author":{"gitID":"-"},"content":"     * 1. Command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":189,"author":{"gitID":"-"},"content":"     * 2. Command box has the error style class.\u003cbr\u003e"},{"lineNumber":190,"author":{"gitID":"-"},"content":"     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":191,"author":{"gitID":"takuyakanbr"},"content":"     * 4. {@code Model}, {@code Storage}, {@code BookListPanel}, and {@code SearchResultsPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":192,"author":{"gitID":"-"},"content":"     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":193,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by {@code assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":194,"author":{"gitID":"-"},"content":"     * @see #assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":195,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":196,"author":{"gitID":"-"},"content":"    protected void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":197,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":198,"author":{"gitID":"-"},"content":""},{"lineNumber":199,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":200,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":201,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedBookListCardUnchanged();"},{"lineNumber":202,"author":{"gitID":"takuyakanbr"},"content":"        assertSelectedSearchResultsCardUnchanged();"},{"lineNumber":203,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":205,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitID":"-"},"content":""},{"lineNumber":207,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":208,"author":{"gitID":"-"},"content":"     * Asserts that the {@code CommandBox} displays {@code expectedCommandInput}, the {@code ResultDisplay} displays"},{"lineNumber":209,"author":{"gitID":"qiu-siqi"},"content":"     * {@code expectedResultMessage}, the model and storage contains the same book objects as {@code expectedModel}"},{"lineNumber":210,"author":{"gitID":"takuyakanbr"},"content":"     * and the book list and search results panel displays the books in the model correctly."},{"lineNumber":211,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":212,"author":{"gitID":"-"},"content":"    protected void assertApplicationDisplaysExpected(String expectedCommandInput, String expectedResultMessage,"},{"lineNumber":213,"author":{"gitID":"-"},"content":"            Model expectedModel) {"},{"lineNumber":214,"author":{"gitID":"-"},"content":"        assertEquals(expectedCommandInput, getCommandBox().getInput());"},{"lineNumber":215,"author":{"gitID":"-"},"content":"        assertEquals(expectedResultMessage, getResultDisplay().getText());"},{"lineNumber":216,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, getModel());"},{"lineNumber":217,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedModel.getBookShelf(), testApp.readStorageBookShelf());"},{"lineNumber":218,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(getBookListPanel(), expectedModel.getFilteredBookList());"},{"lineNumber":219,"author":{"gitID":"takuyakanbr"},"content":"        assertListMatching(getSearchResultsPanel(), expectedModel.getSearchResultsList());"},{"lineNumber":220,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(getRecentBooksPanel(), expectedModel.getRecentBooksList());"},{"lineNumber":221,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitID":"-"},"content":""},{"lineNumber":223,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":224,"author":{"gitID":"takuyakanbr"},"content":"     * Calls {@code BookListPanelHandle}, {@code SearchResultsPanelHandle},  {@code StatusBarFooterHandle},"},{"lineNumber":225,"author":{"gitID":"takuyakanbr"},"content":"     * and {@code BookDetailsPanelHandle} to remember their current state."},{"lineNumber":226,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":227,"author":{"gitID":"-"},"content":"    private void rememberStates() {"},{"lineNumber":228,"author":{"gitID":"-"},"content":"        StatusBarFooterHandle statusBarFooterHandle \u003d getStatusBarFooter();"},{"lineNumber":229,"author":{"gitID":"-"},"content":"        statusBarFooterHandle.rememberSaveLocation();"},{"lineNumber":230,"author":{"gitID":"-"},"content":"        statusBarFooterHandle.rememberSyncStatus();"},{"lineNumber":231,"author":{"gitID":"qiu-siqi"},"content":"        getBookListPanel().rememberSelectedBookCard();"},{"lineNumber":232,"author":{"gitID":"takuyakanbr"},"content":"        getSearchResultsPanel().rememberSelectedBookCard();"},{"lineNumber":233,"author":{"gitID":"qiu-siqi"},"content":"        getRecentBooksPanel().rememberSelectedBookCard();"},{"lineNumber":234,"author":{"gitID":"takuyakanbr"},"content":"        getBookDetailsPanel().rememberIsbn();"},{"lineNumber":235,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitID":"-"},"content":""},{"lineNumber":237,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":238,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that the previously selected book list card is now deselected and the book details panel"},{"lineNumber":239,"author":{"gitID":"takuyakanbr"},"content":"     * remains displaying the details of the previously selected book."},{"lineNumber":240,"author":{"gitID":"takuyakanbr"},"content":"     * @see BookDetailsPanelHandle#isIsbnChanged()"},{"lineNumber":241,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":242,"author":{"gitID":"takuyakanbr"},"content":"    protected void assertSelectedBookListCardDeselected() {"},{"lineNumber":243,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(getBookDetailsPanel().isIsbnChanged());"},{"lineNumber":244,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(getBookListPanel().isAnyCardSelected());"},{"lineNumber":245,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":246,"author":{"gitID":"-"},"content":""},{"lineNumber":247,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":248,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that the book details panel displays the details of the book in the book list panel at"},{"lineNumber":249,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex}, and only the card at {@code expectedSelectedCardIndex} is selected."},{"lineNumber":250,"author":{"gitID":"qiu-siqi"},"content":"     * @see BookListPanelHandle#isSelectedBookCardChanged()"},{"lineNumber":251,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":252,"author":{"gitID":"takuyakanbr"},"content":"    protected void assertSelectedBookListCardChanged(Index expectedSelectedCardIndex) {"},{"lineNumber":253,"author":{"gitID":"takuyakanbr"},"content":"        Book selectedBook \u003d getModel().getFilteredBookList().get(expectedSelectedCardIndex.getZeroBased());"},{"lineNumber":254,"author":{"gitID":"takuyakanbr"},"content":"        assertDetailsPanelDisplaysBook(selectedBook, getBookDetailsPanel());"},{"lineNumber":255,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedSelectedCardIndex.getZeroBased(), getBookListPanel().getSelectedCardIndex());"},{"lineNumber":256,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitID":"-"},"content":""},{"lineNumber":258,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":259,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that the book details panel displays the details of the book in the search results panel at"},{"lineNumber":260,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex}, and only the card at {@code expectedSelectedCardIndex} is selected."},{"lineNumber":261,"author":{"gitID":"takuyakanbr"},"content":"     * @see SearchResultsPanelHandle#isSelectedBookCardChanged()"},{"lineNumber":262,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":263,"author":{"gitID":"takuyakanbr"},"content":"    protected void assertSelectedSearchResultsCardChanged(Index expectedSelectedCardIndex) {"},{"lineNumber":264,"author":{"gitID":"takuyakanbr"},"content":"        Book selectedBook \u003d getModel().getSearchResultsList().get(expectedSelectedCardIndex.getZeroBased());"},{"lineNumber":265,"author":{"gitID":"takuyakanbr"},"content":"        assertDetailsPanelDisplaysBook(selectedBook, getBookDetailsPanel());"},{"lineNumber":266,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedSelectedCardIndex.getZeroBased(), getSearchResultsPanel().getSelectedCardIndex());"},{"lineNumber":267,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":268,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":269,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":270,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the book details panel displays the details of the book in the recent books panel at"},{"lineNumber":271,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex}, and only the card at {@code expectedSelectedCardIndex} is selected."},{"lineNumber":272,"author":{"gitID":"qiu-siqi"},"content":"     * @see RecentBooksPanelHandle#isSelectedBookCardChanged()"},{"lineNumber":273,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":274,"author":{"gitID":"qiu-siqi"},"content":"    protected void assertSelectedRecentBooksCardChanged(Index expectedSelectedCardIndex) {"},{"lineNumber":275,"author":{"gitID":"qiu-siqi"},"content":"        Book selectedBook \u003d getModel().getRecentBooksList().get(expectedSelectedCardIndex.getZeroBased());"},{"lineNumber":276,"author":{"gitID":"takuyakanbr"},"content":"        assertDetailsPanelDisplaysBook(selectedBook, getBookDetailsPanel());"},{"lineNumber":277,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedSelectedCardIndex.getZeroBased(), getRecentBooksPanel().getSelectedCardIndex());"},{"lineNumber":278,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":279,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":280,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":281,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that the selected card in the book list panel remain unchanged and the book details panel"},{"lineNumber":282,"author":{"gitID":"takuyakanbr"},"content":"     * remains displaying the details of the previously selected book."},{"lineNumber":283,"author":{"gitID":"takuyakanbr"},"content":"     * @see BookDetailsPanelHandle#isIsbnChanged()"},{"lineNumber":284,"author":{"gitID":"qiu-siqi"},"content":"     * @see BookListPanelHandle#isSelectedBookCardChanged()"},{"lineNumber":285,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":286,"author":{"gitID":"takuyakanbr"},"content":"    protected void assertSelectedBookListCardUnchanged() {"},{"lineNumber":287,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(getBookDetailsPanel().isIsbnChanged());"},{"lineNumber":288,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(getBookListPanel().isSelectedBookCardChanged());"},{"lineNumber":289,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitID":"-"},"content":""},{"lineNumber":291,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":292,"author":{"gitID":"takuyakanbr"},"content":"     * Asserts that the selected card in the search results panel remain unchanged and the book details panel"},{"lineNumber":293,"author":{"gitID":"takuyakanbr"},"content":"     * remains displaying the details of the previously selected book."},{"lineNumber":294,"author":{"gitID":"takuyakanbr"},"content":"     * @see BookDetailsPanelHandle#isIsbnChanged()"},{"lineNumber":295,"author":{"gitID":"takuyakanbr"},"content":"     * @see SearchResultsPanelHandle#isSelectedBookCardChanged()"},{"lineNumber":296,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":297,"author":{"gitID":"takuyakanbr"},"content":"    protected void assertSelectedSearchResultsCardUnchanged() {"},{"lineNumber":298,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(getBookDetailsPanel().isIsbnChanged());"},{"lineNumber":299,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(getSearchResultsPanel().isSelectedBookCardChanged());"},{"lineNumber":300,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":301,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":302,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":303,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the selected card in the recent books panel remain unchanged and the book details panel"},{"lineNumber":304,"author":{"gitID":"takuyakanbr"},"content":"     * remains displaying the details of the previously selected book."},{"lineNumber":305,"author":{"gitID":"takuyakanbr"},"content":"     * @see BookDetailsPanelHandle#isIsbnChanged()"},{"lineNumber":306,"author":{"gitID":"qiu-siqi"},"content":"     * @see RecentBooksPanelHandle#isSelectedBookCardChanged()"},{"lineNumber":307,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":308,"author":{"gitID":"qiu-siqi"},"content":"    protected void assertSelectedRecentBooksCardUnchanged() {"},{"lineNumber":309,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(getBookDetailsPanel().isIsbnChanged());"},{"lineNumber":310,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(getRecentBooksPanel().isSelectedBookCardChanged());"},{"lineNumber":311,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":312,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":313,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":314,"author":{"gitID":"-"},"content":"     * Asserts that the command box\u0027s shows the default style."},{"lineNumber":315,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":316,"author":{"gitID":"-"},"content":"    protected void assertCommandBoxShowsDefaultStyle() {"},{"lineNumber":317,"author":{"gitID":"-"},"content":"        assertEquals(COMMAND_BOX_DEFAULT_STYLE, getCommandBox().getStyleClass());"},{"lineNumber":318,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":319,"author":{"gitID":"-"},"content":""},{"lineNumber":320,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":321,"author":{"gitID":"-"},"content":"     * Asserts that the command box\u0027s shows the error style."},{"lineNumber":322,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":323,"author":{"gitID":"-"},"content":"    protected void assertCommandBoxShowsErrorStyle() {"},{"lineNumber":324,"author":{"gitID":"-"},"content":"        assertEquals(COMMAND_BOX_ERROR_STYLE, getCommandBox().getStyleClass());"},{"lineNumber":325,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitID":"-"},"content":""},{"lineNumber":327,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":328,"author":{"gitID":"-"},"content":"     * Asserts that the entire status bar remains the same."},{"lineNumber":329,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":330,"author":{"gitID":"-"},"content":"    protected void assertStatusBarUnchanged() {"},{"lineNumber":331,"author":{"gitID":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();"},{"lineNumber":332,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());"},{"lineNumber":333,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSyncStatusChanged());"},{"lineNumber":334,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":335,"author":{"gitID":"-"},"content":""},{"lineNumber":336,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":337,"author":{"gitID":"-"},"content":"     * Asserts that only the sync status in the status bar was changed to the timing of"},{"lineNumber":338,"author":{"gitID":"-"},"content":"     * {@code ClockRule#getInjectedClock()}, while the save location remains the same."},{"lineNumber":339,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":340,"author":{"gitID":"-"},"content":"    protected void assertStatusBarUnchangedExceptSyncStatus() {"},{"lineNumber":341,"author":{"gitID":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();"},{"lineNumber":342,"author":{"gitID":"-"},"content":"        String timestamp \u003d new Date(clockRule.getInjectedClock().millis()).toString();"},{"lineNumber":343,"author":{"gitID":"-"},"content":"        String expectedSyncStatus \u003d String.format(SYNC_STATUS_UPDATED, timestamp);"},{"lineNumber":344,"author":{"gitID":"-"},"content":"        assertEquals(expectedSyncStatus, handle.getSyncStatus());"},{"lineNumber":345,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());"},{"lineNumber":346,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":347,"author":{"gitID":"-"},"content":""},{"lineNumber":348,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":349,"author":{"gitID":"-"},"content":"     * Asserts that the starting state of the application is correct."},{"lineNumber":350,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":351,"author":{"gitID":"-"},"content":"    private void assertApplicationStartingStateIsCorrect() {"},{"lineNumber":352,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":353,"author":{"gitID":"-"},"content":"            assertEquals(\"\", getCommandBox().getInput());"},{"lineNumber":354,"author":{"gitID":"-"},"content":"            assertEquals(\"\", getResultDisplay().getText());"},{"lineNumber":355,"author":{"gitID":"qiu-siqi"},"content":"            assertListMatching(getBookListPanel(), getModel().getFilteredBookList());"},{"lineNumber":356,"author":{"gitID":"takuyakanbr"},"content":"            assertFalse(getBookDetailsPanel().isVisible());"},{"lineNumber":357,"author":{"gitID":"-"},"content":"            assertEquals(\"./\" + testApp.getStorageSaveLocation(), getStatusBarFooter().getSaveLocation());"},{"lineNumber":358,"author":{"gitID":"-"},"content":"            assertEquals(SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());"},{"lineNumber":359,"author":{"gitID":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":360,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Starting state is wrong.\", e);"},{"lineNumber":361,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":362,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":363,"author":{"gitID":"-"},"content":""},{"lineNumber":364,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":58,"takuyakanbr":67,"-":239}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"public class ConfigTest {"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public void toString_defaultObject_stringReturned() {"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"        String defaultConfigAsString \u003d \"App title : Bibliotek\\n\""},{"lineNumber":18,"author":{"gitID":"-"},"content":"                + \"Current log level : INFO\\n\""},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"                + \"Preference file Location : preferences.json\\n\""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"                + \"Recent books file Location : recentbooks.xml\";"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void equalsMethod() {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        Config defaultConfig \u003d new Config();"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        assertNotNull(defaultConfig);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"takuyakanbr":1,"-":30}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class AppUtilTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public void getImage_exitingImage() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertNotNull(AppUtil.getImage(\"/images/book_flat_32.png\"));"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        AppUtil.getImage(null);"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void checkArgument_true_nothingHappens() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(true);"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(true, \"\");"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalArgumentException.class);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(false);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        String errorMessage \u003d \"error message\";"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalArgumentException.class);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        thrown.expectMessage(errorMessage);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(false,  errorMessage);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":1,"-":46}},{"path":"src/test/java/seedu/address/commons/util/ConfigUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class ConfigUtilTest {"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"./src/test/data/ConfigUtilTest/\");"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void read_null_throwsNullPointerException() throws DataConversionException {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        read(null);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() throws DataConversionException {"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        read(\"NotJsonFormatConfig.json\");"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"        /* IMPORTANT: Any code below an exception-throwing line (like the one above) will be ignored."},{"lineNumber":47,"author":{"gitID":"-"},"content":"         * That means you should not have more than one exception test in one method"},{"lineNumber":48,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        Config expected \u003d getTypicalConfig();"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        assertEquals(expected, actual);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        assertEquals(new Config(), actual);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        Config expected \u003d getTypicalConfig();"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertEquals(expected, actual);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    private Config getTypicalConfig() {"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        Config config \u003d new Config();"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        config.setAppTitle(\"Typical App Title\");"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        config.setLogLevel(Level.INFO);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        config.setUserPrefsFilePath(\"C:\\\\preferences.json\");"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        config.setRecentBooksFilePath(\"C:\\\\recentbooks.xml\");"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        return config;"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        String configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() throws IOException {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        save(null, \"SomeFile.json\");"},{"lineNumber":92,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    public void save_nullFile_throwsNullPointerException() throws IOException {"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        save(new Config(), null);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        Config original \u003d getTypicalConfig();"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"        String configFilePath \u003d testFolder.getRoot() + File.separator + \"TempConfig.json\";"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"        //Try writing when the file doesn\u0027t exist"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        assertEquals(original, readBack);"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"        //Try saving when the file exists"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        original.setAppTitle(\"Updated Title\");"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        original.setLogLevel(Level.FINE);"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        assertEquals(original, readBack);"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"-"},"content":""},{"lineNumber":119,"author":{"gitID":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        String configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"    private String addToTestDataPathIfNotNull(String configFileInTestDataFolder) {"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        return configFileInTestDataFolder !\u003d null"},{"lineNumber":126,"author":{"gitID":"-"},"content":"                                  ? TEST_DATA_FOLDER + configFileInTestDataFolder"},{"lineNumber":127,"author":{"gitID":"-"},"content":"                                  : null;"},{"lineNumber":128,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"-":130}},{"path":"src/test/java/seedu/address/commons/util/XmlUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javax.xml.bind.JAXBException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.storage.XmlAdaptedAuthor;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.storage.XmlAdaptedBook;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.storage.XmlAdaptedCategory;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.storage.XmlSerializableBookShelf;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.BookShelfBuilder;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TestUtil;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"public class XmlUtilTest {"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"src/test/data/XmlUtilTest/\");"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private static final File EMPTY_FILE \u003d new File(TEST_DATA_FOLDER + \"empty.xml\");"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final File MISSING_FILE \u003d new File(TEST_DATA_FOLDER + \"missing.xml\");"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    private static final File VALID_FILE \u003d new File(TEST_DATA_FOLDER + \"validBookShelf.xml\");"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    private static final File MISSING_BOOK_FIELD_FILE \u003d new File(TEST_DATA_FOLDER + \"missingBookField.xml\");"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    private static final File VALID_BOOK_FILE \u003d new File(TEST_DATA_FOLDER + \"validBook.xml\");"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    private static final File TEMP_FILE \u003d new File(TestUtil.getFilePathInSandboxFolder(\"tempBookShelf.xml\"));"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_TITLE \u003d \"Artemis\";"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_DESCRIPTION \u003d \"This is Artemis.\";"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private static final int VALID_RATING \u003d -1;"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    private static final List\u003cXmlAdaptedAuthor\u003e VALID_AUTHORS \u003d"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"            Collections.singletonList(new XmlAdaptedAuthor(\"Andy Weir\"));"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    private static final List\u003cXmlAdaptedCategory\u003e VALID_CATEGORIES \u003d"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"            Collections.singletonList(new XmlAdaptedCategory(\"Fiction\"));"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"    private static final String VALID_GID \u003d \"ry3GjwEACAAJ\";"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"    private static final String VALID_ISBN \u003d \"9780525572664\";"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"    private static final String VALID_PUBLISHER \u003d \" \";"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"    private static final String VALID_PUBLICATION_DATE \u003d \"2017-11-14\";"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public void getDataFromFile_nullFile_throwsNullPointerException() throws Exception {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.getDataFromFile(null, BookShelf.class);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public void getDataFromFile_nullClass_throwsNullPointerException() throws Exception {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        XmlUtil.getDataFromFile(VALID_FILE, null);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public void getDataFromFile_missingFile_fileNotFoundException() throws Exception {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        thrown.expect(FileNotFoundException.class);"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.getDataFromFile(MISSING_FILE, BookShelf.class);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    public void getDataFromFile_emptyFile_dataFormatMismatchException() throws Exception {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        thrown.expect(JAXBException.class);"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.getDataFromFile(EMPTY_FILE, BookShelf.class);"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    public void getDataFromFile_validFile_validResult() throws Exception {"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf dataFromFile \u003d XmlUtil.getDataFromFile(VALID_FILE, XmlSerializableBookShelf.class).toModelType();"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(4, dataFromFile.getBookList().size());"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    public void xmlAdaptedBookFromFile_fileWithMissingBookField_validResult() throws Exception {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook actualBook \u003d XmlUtil.getDataFromFile("},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"                MISSING_BOOK_FIELD_FILE, XmlAdaptedBookWithRootElement.class);"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        XmlAdaptedBook expectedBook \u003d new XmlAdaptedBook(null, null, null,"},{"lineNumber":86,"author":{"gitID":"-"},"content":"                VALID_DESCRIPTION, VALID_RATING, VALID_AUTHORS, VALID_CATEGORIES, null, null);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedBook, actualBook);"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    public void xmlAdaptedBookFromFile_fileWithValidBook_validResult() throws Exception {"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook actualBook \u003d XmlUtil.getDataFromFile("},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"                VALID_BOOK_FILE, XmlAdaptedBookWithRootElement.class);"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"        XmlAdaptedBook expectedBook \u003d new XmlAdaptedBook(VALID_GID, VALID_ISBN, VALID_TITLE,"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"                VALID_DESCRIPTION, VALID_AUTHORS, VALID_CATEGORIES, VALID_PUBLISHER, VALID_PUBLICATION_DATE);"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedBook, actualBook);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    public void saveDataToFile_nullFile_throwsNullPointerException() throws Exception {"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.saveDataToFile(null, new BookShelf());"},{"lineNumber":103,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    public void saveDataToFile_nullClass_throwsNullPointerException() throws Exception {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(VALID_FILE, null);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":112,"author":{"gitID":"-"},"content":"    public void saveDataToFile_missingFile_fileNotFoundException() throws Exception {"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        thrown.expect(FileNotFoundException.class);"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.saveDataToFile(MISSING_FILE, new BookShelf());"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":118,"author":{"gitID":"-"},"content":"    public void saveDataToFile_validFile_dataSaved() throws Exception {"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        TEMP_FILE.createNewFile();"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf dataToWrite \u003d new XmlSerializableBookShelf(new BookShelf());"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableBookShelf.class);"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"        BookShelfBuilder builder \u003d new BookShelfBuilder(new BookShelf());"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"        dataToWrite \u003d new XmlSerializableBookShelf(builder.withBook(new BookBuilder().build()).build());"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);"},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":"        dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableBookShelf.class);"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"     * Test class annotated with {@code XmlRootElement} to allow unmarshalling of .xml data to {@code XmlAdaptedBook}"},{"lineNumber":135,"author":{"gitID":"-"},"content":"     * objects."},{"lineNumber":136,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"    @XmlRootElement(name \u003d \"book\")"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":"    private static class XmlAdaptedBookWithRootElement extends XmlAdaptedBook {}"},{"lineNumber":139,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":7,"takuyakanbr":41,"-":91}},{"path":"src/test/java/seedu/address/network/HttpClientTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import org.asynchttpclient.Dsl;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Rule;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class HttpClientTest {"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"    @Rule"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":15,"author":{"gitID":"-"},"content":"        new HttpClient(null);"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public void close_executedMultipleTimes_success() {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        HttpClient httpClient \u003d new HttpClient(Dsl.asyncHttpClient());"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        httpClient.close();"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"        httpClient.close();"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        httpClient.close();"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        // should not throw any exceptions"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":20,"-":6}},{"path":"src/test/java/seedu/address/commons/core/ThemeTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.InvalidThemeException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"public class ThemeTest {"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public void getThemeByName_validName_returnsTheme() throws Exception {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        assertEquals(Theme.WHITE, Theme.getThemeByName(\"white\"));"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        assertEquals(Theme.LIGHT, Theme.getThemeByName(\"light\"));"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        assertEquals(Theme.DARK, Theme.getThemeByName(\"dark\"));"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"        // theme names should be case insensitive"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        assertEquals(Theme.WHITE, Theme.getThemeByName(\"whITE\"));"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        assertEquals(Theme.LIGHT, Theme.getThemeByName(\"LIGht\"));"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        assertEquals(Theme.DARK, Theme.getThemeByName(\"Dark\"));"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void getThemeByName_invalidName_throwsInvalidThemeException() throws Exception {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        thrown.expect(InvalidThemeException.class);"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        Theme.getThemeByName(\"12345\");"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":4,"-":29}},{"path":"src/test/java/seedu/address/ui/BookDetailsPanelTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postNow;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.BABYLON_ASHES;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import guitests.guihandles.BookDetailsPanelHandle;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.BookListSelectionChangedEvent;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.ui.testutil.GuiTestAssert;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"public class BookDetailsPanelTest extends GuiUnitTest {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private BookDetailsPanelHandle bookDetailsPanelHandle;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    @Before"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    public void setUp() {"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        BookDetailsPanel bookDetailsPanel \u003d new BookDetailsPanel();"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        uiPartRule.setUiPart(bookDetailsPanel);"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        bookDetailsPanelHandle \u003d new BookDetailsPanelHandle(bookDetailsPanel.getRoot());"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    public void display() {"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        // hidden by default"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(bookDetailsPanelHandle.isVisible());"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        // check that the correct details are displayed"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        postNow(new BookListSelectionChangedEvent(new BookCard(ARTEMIS, 0)));"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        assertDetailsPanelDisplaysBook(ARTEMIS);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        // check that the correct details are displayed"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        postNow(new BookListSelectionChangedEvent(new BookCard(BABYLON_ASHES, 1)));"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        assertDetailsPanelDisplaysBook(BABYLON_ASHES);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        // no categories"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        Book bookWithNoCategories \u003d new BookBuilder().withCategories().build();"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        postNow(new BookListSelectionChangedEvent(new BookCard(bookWithNoCategories, 0)));"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        assertDetailsPanelDisplaysBook(bookWithNoCategories);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        // no authors"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        Book bookWithNoAuthors \u003d new BookBuilder().withAuthors().build();"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        postNow(new BookListSelectionChangedEvent(new BookCard(bookWithNoAuthors, 0)));"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        assertDetailsPanelDisplaysBook(bookWithNoAuthors);"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        // empty book"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        Book emptyBook \u003d new BookBuilder().withGid(\"\").withTitle(\"\").withAuthors().withCategories()"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"                .withDescription(\"\").withIsbn(\"\").withPublicationDate(\"\").withPublisher(\"\").build();"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        postNow(new BookListSelectionChangedEvent(new BookCard(emptyBook, 0)));"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        assertDetailsPanelDisplaysBook(emptyBook);"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the {@code BookDetailsPanel} displays the details of {@code expectedBook} correctly"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"     * and is visible."},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    private void assertDetailsPanelDisplaysBook(Book expectedBook) {"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(bookDetailsPanelHandle.isVisible());"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        GuiTestAssert.assertDetailsPanelDisplaysBook(expectedBook, bookDetailsPanelHandle);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"takuyakanbr":61,"-":3}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"public class LogicManagerTest {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private Model model \u003d new ModelManager();"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private Logic logic \u003d new LogicManager(model);"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        assertHistoryCorrect(invalidCommand);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        String deleteCommand \u003d \"delete 9\";"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertHistoryCorrect(deleteCommand);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public void execute_validCommand_success() {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertHistoryCorrect(listCommand);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"    public void getFilteredBookList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        logic.getFilteredBookList().remove(0);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that no exceptions are thrown and that the result message is correct."},{"lineNumber":57,"author":{"gitID":"-"},"content":"     * Also confirms that {@code expectedModel} is as specified."},{"lineNumber":58,"author":{"gitID":"-"},"content":"     * @see #assertCommandBehavior(Class, String, String, Model)"},{"lineNumber":59,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage, Model expectedModel) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertCommandBehavior(null, inputCommand, expectedMessage, expectedModel);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct."},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * @see #assertCommandBehavior(Class, String, String, Model)"},{"lineNumber":67,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct."},{"lineNumber":74,"author":{"gitID":"-"},"content":"     * @see #assertCommandBehavior(Class, String, String, Model)"},{"lineNumber":75,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct."},{"lineNumber":82,"author":{"gitID":"-"},"content":"     * @see #assertCommandBehavior(Class, String, String, Model)"},{"lineNumber":83,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c?\u003e expectedException, String expectedMessage) {"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        Model expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertCommandBehavior(expectedException, inputCommand, expectedMessage, expectedModel);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":90,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that the result message is correct and that the expected exception is thrown,"},{"lineNumber":91,"author":{"gitID":"-"},"content":"     * and also confirms that the following two parts of the LogicManager object\u0027s state are as expected:\u003cbr\u003e"},{"lineNumber":92,"author":{"gitID":"-"},"content":"     *      - the internal model manager data are same as those in the {@code expectedModel} \u003cbr\u003e"},{"lineNumber":93,"author":{"gitID":"-"},"content":"     *      - {@code expectedModel}\u0027s address book was saved to the storage file."},{"lineNumber":94,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    private void assertCommandBehavior(Class\u003c?\u003e expectedException, String inputCommand,"},{"lineNumber":96,"author":{"gitID":"-"},"content":"                                           String expectedMessage, Model expectedModel) {"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":99,"author":{"gitID":"-"},"content":"            CommandResult result \u003d logic.execute(inputCommand);"},{"lineNumber":100,"author":{"gitID":"-"},"content":"            assertEquals(expectedException, null);"},{"lineNumber":101,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, result.feedbackToUser);"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        } catch (CommandException | ParseException e) {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"            assertEquals(expectedException, e.getClass());"},{"lineNumber":104,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, e.getMessage());"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":111,"author":{"gitID":"-"},"content":"     * Asserts that the result display shows all the {@code expectedCommands} upon the execution of"},{"lineNumber":112,"author":{"gitID":"-"},"content":"     * {@code HistoryCommand}."},{"lineNumber":113,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    private void assertHistoryCorrect(String... expectedCommands) {"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":116,"author":{"gitID":"-"},"content":"            CommandResult result \u003d logic.execute(HistoryCommand.COMMAND_WORD);"},{"lineNumber":117,"author":{"gitID":"-"},"content":"            String expectedMessage \u003d String.format("},{"lineNumber":118,"author":{"gitID":"-"},"content":"                    HistoryCommand.MESSAGE_SUCCESS, String.join(\"\\n\", expectedCommands));"},{"lineNumber":119,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, result.feedbackToUser);"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        } catch (ParseException | CommandException e) {"},{"lineNumber":121,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Parsing and execution of HistoryCommand.COMMAND_WORD should succeed.\", e);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"takuyakanbr":1,"-":119}},{"path":"src/test/java/seedu/address/logic/parser/SearchCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_ARTEMIS;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_BABYLON;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_ARTEMIS;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ISBN_DESC_ARTEMIS;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_ARTEMIS;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_BABYLON;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_ARTEMIS;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_BABYLON;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CATEGORY_ARTEMIS;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ISBN_ARTEMIS;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_ARTEMIS;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_BABYLON;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand.SearchDescriptor;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.SearchDescriptorBuilder;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"public class SearchCommandParserTest {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private static final String DEFAULT_SEARCH_TERM \u003d \"search term\";"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private SearchCommandParser parser \u003d new SearchCommandParser();"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    public void parse_noFieldSpecified_failure() {"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        // no search term and no parameters specified"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        assertParseFailure(parser, \"\", SearchCommand.MESSAGE_EMPTY_QUERY);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public void parse_allFieldsSpecified_success() {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        String userInput \u003d DEFAULT_SEARCH_TERM + TITLE_DESC_ARTEMIS + CATEGORY_DESC_ARTEMIS"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"                + ISBN_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS;"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor searchDescriptor \u003d new SearchDescriptorBuilder().withTitle(VALID_TITLE_ARTEMIS)"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"                .withCategory(VALID_CATEGORY_ARTEMIS).withIsbn(VALID_ISBN_ARTEMIS)"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthor(VALID_AUTHOR_ARTEMIS).withSearchTerm(DEFAULT_SEARCH_TERM).build();"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        SearchCommand expectedCommand \u003d new SearchCommand(searchDescriptor);"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    public void parse_someFieldsSpecified_success() {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        String userInput \u003d DEFAULT_SEARCH_TERM + TITLE_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS;"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor searchDescriptor \u003d new SearchDescriptorBuilder().withTitle(VALID_TITLE_ARTEMIS)"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthor(VALID_AUTHOR_ARTEMIS).withSearchTerm(DEFAULT_SEARCH_TERM).build();"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        SearchCommand expectedCommand \u003d new SearchCommand(searchDescriptor);"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    public void parse_oneFieldsSpecified_success() {"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        String userInput \u003d DEFAULT_SEARCH_TERM;"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor searchDescriptor \u003d new SearchDescriptorBuilder().withSearchTerm(DEFAULT_SEARCH_TERM).build();"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        SearchCommand expectedCommand \u003d new SearchCommand(searchDescriptor);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        userInput \u003d AUTHOR_DESC_ARTEMIS;"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        searchDescriptor \u003d new SearchDescriptorBuilder().withAuthor(VALID_AUTHOR_ARTEMIS).build();"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        expectedCommand \u003d new SearchCommand(searchDescriptor);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        userInput \u003d CATEGORY_DESC_ARTEMIS;"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        searchDescriptor \u003d new SearchDescriptorBuilder().withCategory(VALID_CATEGORY_ARTEMIS).build();"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        expectedCommand \u003d new SearchCommand(searchDescriptor);"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        userInput \u003d ISBN_DESC_ARTEMIS;"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        searchDescriptor \u003d new SearchDescriptorBuilder().withIsbn(VALID_ISBN_ARTEMIS).build();"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        expectedCommand \u003d new SearchCommand(searchDescriptor);"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        userInput \u003d TITLE_DESC_ARTEMIS;"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        searchDescriptor \u003d new SearchDescriptorBuilder().withTitle(VALID_TITLE_ARTEMIS).build();"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        expectedCommand \u003d new SearchCommand(searchDescriptor);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        String userInput \u003d DEFAULT_SEARCH_TERM + TITLE_DESC_ARTEMIS + TITLE_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"                + AUTHOR_DESC_ARTEMIS + TITLE_DESC_BABYLON + AUTHOR_DESC_BABYLON;"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor searchDescriptor \u003d new SearchDescriptorBuilder().withTitle(VALID_TITLE_BABYLON)"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthor(VALID_AUTHOR_BABYLON).withSearchTerm(DEFAULT_SEARCH_TERM).build();"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        SearchCommand expectedCommand \u003d new SearchCommand(searchDescriptor);"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":91,"-":5}},{"path":"src/test/java/seedu/address/network/api/google/JsonDeserializerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletionException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"public class JsonDeserializerTest {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_BOOK_DETAILS_FOLDER \u003d"},{"lineNumber":18,"author":{"gitID":"-"},"content":"            FileUtil.getPath(\"src/test/data/JsonDeserializerTest/bookDetails/\");"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private static final File ERROR_BOOK_DETAILS_RESPONSE_FILE \u003d"},{"lineNumber":20,"author":{"gitID":"-"},"content":"            new File(TEST_DATA_BOOK_DETAILS_FOLDER + \"ErrorResponse.json\");"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private static final File INVALID_BOOK_DETAILS_RESPONSE_NO_ISBN_FILE \u003d"},{"lineNumber":22,"author":{"gitID":"-"},"content":"            new File(TEST_DATA_BOOK_DETAILS_FOLDER + \"InvalidResponseNoIsbn.json\");"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private static final File INVALID_BOOK_DETAILS_RESPONSE_WRONG_TYPE_FILE \u003d"},{"lineNumber":24,"author":{"gitID":"-"},"content":"            new File(TEST_DATA_BOOK_DETAILS_FOLDER + \"InvalidResponseWrongType.json\");"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final File VALID_BOOK_DETAILS_RESPONSE_NO_DESC_FILE \u003d"},{"lineNumber":26,"author":{"gitID":"-"},"content":"            new File(TEST_DATA_BOOK_DETAILS_FOLDER + \"ValidResponseNoDesc.json\");"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    protected static final File VALID_BOOK_DETAILS_RESPONSE_FILE \u003d"},{"lineNumber":28,"author":{"gitID":"-"},"content":"            new File(TEST_DATA_BOOK_DETAILS_FOLDER + \"ValidResponse.json\");"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_SEARCH_FOLDER \u003d"},{"lineNumber":31,"author":{"gitID":"-"},"content":"            FileUtil.getPath(\"src/test/data/JsonDeserializerTest/search/\");"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final File ERROR_SEARCH_RESPONSE_FILE \u003d new File(TEST_DATA_SEARCH_FOLDER + \"ErrorResponse.json\");"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static final File INVALID_SEARCH_RESPONSE_NO_ISBN_FILE \u003d"},{"lineNumber":34,"author":{"gitID":"-"},"content":"            new File(TEST_DATA_SEARCH_FOLDER + \"InvalidResponseNoIsbn.json\");"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final File INVALID_SEARCH_RESPONSE_WRONG_TYPE_FILE \u003d"},{"lineNumber":36,"author":{"gitID":"-"},"content":"            new File(TEST_DATA_SEARCH_FOLDER + \"InvalidResponseWrongType.json\");"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private static final File VALID_SEARCH_RESPONSE_NO_ID_FILE \u003d"},{"lineNumber":38,"author":{"gitID":"-"},"content":"            new File(TEST_DATA_SEARCH_FOLDER + \"ValidResponseNoDesc.json\");"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private static final File VALID_SEARCH_RESPONSE_DUPLICATE_BOOKS \u003d"},{"lineNumber":40,"author":{"gitID":"-"},"content":"            new File(TEST_DATA_SEARCH_FOLDER + \"ValidResponseDuplicateBooks.json\");"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public static final File VALID_SEARCH_RESPONSE_FILE \u003d new File(TEST_DATA_SEARCH_FOLDER + \"ValidResponse.json\");"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    private JsonDeserializer deserializer \u003d new JsonDeserializer();"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBook_validResponse_success() throws Exception {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(VALID_BOOK_DETAILS_RESPONSE_FILE);"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        Book book \u003d deserializer.convertJsonStringToBook(json);"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book.getTitle().title);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book.getDescription().description);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBook_validResponseNoDesc_success() throws Exception {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(VALID_BOOK_DETAILS_RESPONSE_NO_DESC_FILE);"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        Book book \u003d deserializer.convertJsonStringToBook(json);"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book.getTitle().title);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"\", book.getDescription().description);"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBook_invalidResponseWrongType_throwsCompletionException() throws Exception {"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(INVALID_BOOK_DETAILS_RESPONSE_WRONG_TYPE_FILE);"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        deserializer.convertJsonStringToBook(json);"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    public void convertJsonStringToBook_invalidResponseNoIsbn_throwsCompletionException() throws Exception {"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(INVALID_BOOK_DETAILS_RESPONSE_NO_ISBN_FILE);"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        deserializer.convertJsonStringToBook(json);"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBook_errorResponse_throwsCompletionException() throws Exception {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(ERROR_BOOK_DETAILS_RESPONSE_FILE);"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        deserializer.convertJsonStringToBook(json);"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBookShelf_validResponse_success() throws Exception {"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(VALID_SEARCH_RESPONSE_FILE);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf bookShelf \u003d deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        assertEquals(3, bookShelf.getBookList().size());"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book1.getTitle().title);"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book1.getDescription().description);"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    public void convertJsonStringToBookShelf_validResponseDuplicateBooks_success() throws Exception {"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(VALID_SEARCH_RESPONSE_DUPLICATE_BOOKS);"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf bookShelf \u003d deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        assertEquals(1, bookShelf.getBookList().size());"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book1.getTitle().title);"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book1.getDescription().description);"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBookShelf_validResponseNoId_success() throws Exception {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(VALID_SEARCH_RESPONSE_NO_ID_FILE);"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf bookShelf \u003d deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book1.getTitle().title);"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"\", book1.getDescription().description);"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"        Book book2 \u003d bookShelf.getBookList().get(1);"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title 2\", book2.getTitle().title);"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"\", book2.getDescription().description);"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":119,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":120,"author":{"gitID":"-"},"content":"    public void convertJsonStringToBookShelf_invalidResponseNoIsbn_ignoresBookWithoutIsbn() throws Exception {"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(INVALID_SEARCH_RESPONSE_NO_ISBN_FILE);"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf bookShelf \u003d deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(\"The Book Without a Title 2\", book1.getTitle().title);"},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"        Book book2 \u003d bookShelf.getBookList().get(1);"},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(\"The Book Without a Title 3\", book2.getTitle().title);"},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":130,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBookShelf_invalidResponseWrongType_throwsCompletionException() throws Exception {"},{"lineNumber":131,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(INVALID_SEARCH_RESPONSE_WRONG_TYPE_FILE);"},{"lineNumber":133,"author":{"gitID":"takuyakanbr"},"content":"        deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":135,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBookShelf_errorResponse_throwsCompletionException() throws Exception {"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        String json \u003d FileUtil.readFromFile(ERROR_SEARCH_RESPONSE_FILE);"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"        deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":141,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":143,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"takuyakanbr":86,"-":53}},{"path":"src/test/java/seedu/address/network/api/google/GoogleBooksApiTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.mockito.Mockito.mock;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.mockito.Mockito.verify;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletionException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.HttpClient;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.HttpResponse;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"public class GoogleBooksApiTest {"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_SEARCH_BOOKS_OK \u003d String.format(GoogleBooksApi.URL_SEARCH_BOOKS, \"123\");"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_BOOK_DETAILS_OK \u003d String.format(GoogleBooksApi.URL_BOOK_DETAILS, \"123\");"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_SEARCH_BOOKS_FAIL \u003d String.format(GoogleBooksApi.URL_SEARCH_BOOKS, \"\");"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_BOOK_DETAILS_FAIL \u003d String.format(GoogleBooksApi.URL_BOOK_DETAILS, \"\");"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_SEARCH_BOOKS_BAD_RESPONSE \u003d String.format(GoogleBooksApi.URL_SEARCH_BOOKS, \"html\");"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_BOOK_DETAILS_BAD_RESPONSE \u003d String.format(GoogleBooksApi.URL_BOOK_DETAILS, \"html\");"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    private GoogleBooksApi googleBooksApi;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private HttpClient mockClient;"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    @Before"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    public void setUp() {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        mockClient \u003d mock(HttpClient.class);"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        googleBooksApi \u003d new GoogleBooksApi(mockClient);"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public void searchBooks_validParam_success() throws IOException {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        when(mockClient.makeGetRequest(URL_SEARCH_BOOKS_OK))"},{"lineNumber":47,"author":{"gitID":"-"},"content":"                .thenReturn(makeFutureResponse(200,"},{"lineNumber":48,"author":{"gitID":"-"},"content":"                        FileUtil.readFromFile(JsonDeserializerTest.VALID_SEARCH_RESPONSE_FILE)));"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf bookShelf \u003d googleBooksApi.searchBooks(\"123\").join();"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        verify(mockClient).makeGetRequest(URL_SEARCH_BOOKS_OK);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book1.getTitle().title);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book1.getDescription().description);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    public void searchBooks_invalidParam_throwsCompletionException() {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        when(mockClient.makeGetRequest(URL_SEARCH_BOOKS_FAIL))"},{"lineNumber":61,"author":{"gitID":"-"},"content":"                .thenReturn(makeFutureResponse(503, \"{ \\\"error\\\": { \\\"code\\\": 503 } }\"));"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.searchBooks(\"\").join();"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    public void searchBooks_badResponseType_throwsCompletionException() {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        when(mockClient.makeGetRequest(URL_SEARCH_BOOKS_BAD_RESPONSE))"},{"lineNumber":70,"author":{"gitID":"-"},"content":"                .thenReturn(makeFutureResponse(503, \"text/html;\", \"{ \\\"error\\\": { \\\"code\\\": 503 } }\"));"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.searchBooks(\"html\").join();"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public void getBookDetails_validId_success() throws IOException {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        when(mockClient.makeGetRequest(URL_BOOK_DETAILS_OK))"},{"lineNumber":79,"author":{"gitID":"-"},"content":"                .thenReturn(makeFutureResponse(200,"},{"lineNumber":80,"author":{"gitID":"-"},"content":"                        FileUtil.readFromFile(JsonDeserializerTest.VALID_BOOK_DETAILS_RESPONSE_FILE)));"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        Book book \u003d googleBooksApi.getBookDetails(\"123\").join();"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"        verify(mockClient).makeGetRequest(URL_BOOK_DETAILS_OK);"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book.getTitle().title);"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book.getDescription().description);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"    public void getBookDetails_invalidId_throwsCompletionException() {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        when(mockClient.makeGetRequest(URL_BOOK_DETAILS_FAIL))"},{"lineNumber":92,"author":{"gitID":"-"},"content":"                .thenReturn(makeFutureResponse(503, \"{ \\\"error\\\": { \\\"code\\\": 503 } }\"));"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.getBookDetails(\"\").join();"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"    public void getBookDetails_badResponseType_throwsCompletionException() {"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        when(mockClient.makeGetRequest(URL_BOOK_DETAILS_BAD_RESPONSE))"},{"lineNumber":101,"author":{"gitID":"-"},"content":"                .thenReturn(makeFutureResponse(503, \"text/html;\", \"{ \\\"error\\\": { \\\"code\\\": 503 } }\"));"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.getBookDetails(\"html\").join();"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":108,"author":{"gitID":"-"},"content":"     * Returns a {@link CompletableFuture} that resolves to a {@link HttpResponse} of content type JSON."},{"lineNumber":109,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    private static CompletableFuture\u003cHttpResponse\u003e makeFutureResponse(int code, String response) {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        return makeFutureResponse(code, \"application/json;\", response);"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":115,"author":{"gitID":"-"},"content":"     * Returns a {@link CompletableFuture} that resolves to a {@link HttpResponse}."},{"lineNumber":116,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    private static CompletableFuture\u003cHttpResponse\u003e makeFutureResponse(int code, String contentType, String response) {"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        return CompletableFuture.completedFuture(new HttpResponse(code, contentType, response));"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":72,"-":49}},{"path":"src/test/java/seedu/address/logic/parser/SelectCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Test scope: similar to {@code DeleteCommandParserTest}."},{"lineNumber":14,"author":{"gitID":"-"},"content":" * @see DeleteCommandParserTest"},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class SelectCommandParserTest {"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    private SelectCommandParser parser \u003d new SelectCommandParser();"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public void parse_validArgs_returnsSelectCommand() {"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"        assertParseSuccess(parser, \"1\", new SelectCommand(INDEX_FIRST_BOOK));"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":27}},{"path":"src/test/java/seedu/address/logic/UndoStackTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.UndoStackUtil.prepareStack;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.EmptyStackException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoableCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"public class UndoStackTest {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private final DummyCommand dummyCommandOne \u003d new DummyCommand();"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private final DummyUndoableCommand dummyUndoableCommandOne \u003d new DummyUndoableCommand();"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private final DummyUndoableCommand dummyUndoableCommandTwo \u003d new DummyUndoableCommand();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    private UndoStack undoStack \u003d new UndoStack();"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    public void push_nonUndoableCommand_commandNotAdded() {"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        undoStack \u003d prepareStack(Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.push(dummyCommandOne);"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        assertStackStatus(Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.push(dummyCommandOne);"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        assertStackStatus(Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    public void push_undoableCommand_commandAdded() {"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        undoStack \u003d prepareStack(Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.push(dummyUndoableCommandOne);"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        assertStackStatus(Arrays.asList(dummyUndoableCommandOne, dummyUndoableCommandOne));"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.push(dummyUndoableCommandOne);"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        assertStackStatus(Arrays.asList(dummyUndoableCommandOne, dummyUndoableCommandOne, dummyUndoableCommandOne));"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public void push_undoCommand_stackRemainsUnchanged() {"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        undoStack \u003d prepareStack(Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.push(new UndoCommand());"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        assertStackStatus(Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        undoStack \u003d prepareStack(Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.push(new UndoCommand());"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        assertStackStatus(Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    public void canUndo() {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        // empty undo stack"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(undoStack.canUndo());"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        // non-empty undo stack"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"        undoStack \u003d prepareStack(Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(undoStack.canUndo());"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"    public void popUndo() {"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        undoStack \u003d prepareStack(Arrays.asList(dummyUndoableCommandOne, dummyUndoableCommandTwo));"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        // multiple commands in undoStack"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"        assertPopUndoSuccess(dummyUndoableCommandTwo, Collections.singletonList(dummyUndoableCommandOne));"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"        // single command in undoStack"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"        assertPopUndoSuccess(dummyUndoableCommandOne, Collections.emptyList());"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        // no command in undoStack"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        assertPopUndoFailure(Collections.emptyList());"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"    public void equals() {"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        undoStack \u003d prepareStack(Arrays.asList(dummyUndoableCommandTwo, dummyUndoableCommandOne));"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"        // same values -\u003e returns true"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack copy \u003d prepareStack(Arrays.asList(dummyUndoableCommandTwo, dummyUndoableCommandOne));"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(undoStack.equals(copy));"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        // same object -\u003e returns true"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(undoStack.equals(undoStack));"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"        // null -\u003e returns false"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(undoStack.equals(null));"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"        // different types -\u003e returns false"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(undoStack.equals(1));"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"        // different undoStack -\u003e returns false"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack differentUndoStack \u003d prepareStack(Collections.singletonList(dummyUndoableCommandTwo));"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(undoStack.equals(differentUndoStack));"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the result of {@code undoStack#popUndo()} equals {@code expectedCommand}."},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"     * Also asserts that the content of the {@code undoStack#undoStack} equals {@code undoElements}."},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"    private void assertPopUndoSuccess(UndoableCommand expectedCommand,"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"                                      List\u003cUndoableCommand\u003e expectedUndoElements) {"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedCommand, undoStack.popUndo());"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"        assertStackStatus(expectedUndoElements);"},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the execution of {@code undoStack#popUndo()} fails and {@code EmptyStackException} is thrown."},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"     * Also asserts that the content of the {@code undoStack#undoStack} equals {@code undoElements}."},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"    private void assertPopUndoFailure(List\u003cUndoableCommand\u003e expectedUndoElements) {"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"            undoStack.popUndo();"},{"lineNumber":122,"author":{"gitID":"-"},"content":"            fail(\"The expected EmptyStackException was not thrown.\");"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        } catch (EmptyStackException ese) {"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"            assertStackStatus(expectedUndoElements);"},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":129,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that {@code undoStack#undoStack} equals {@code undoElements}."},{"lineNumber":130,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":131,"author":{"gitID":"qiu-siqi"},"content":"    private void assertStackStatus(List\u003cUndoableCommand\u003e undoElements) {"},{"lineNumber":132,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(prepareStack(undoElements), undoStack);"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"    class DummyCommand extends Command {"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        public CommandResult execute() {"},{"lineNumber":138,"author":{"gitID":"-"},"content":"            return new CommandResult(\"\");"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitID":"-"},"content":""},{"lineNumber":142,"author":{"gitID":"-"},"content":"    class DummyUndoableCommand extends UndoableCommand {"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        public CommandResult executeUndoableCommand() {"},{"lineNumber":145,"author":{"gitID":"-"},"content":"            return new CommandResult(\"\");"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":147,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":103,"-":45}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the"},{"lineNumber":15,"author":{"gitID":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them."},{"lineNumber":16,"author":{"gitID":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and"},{"lineNumber":17,"author":{"gitID":"-"},"content":" * therefore should be covered by the ParserUtilTest."},{"lineNumber":18,"author":{"gitID":"-"},"content":" */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class DeleteCommandParserTest {"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_BOOK));"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"public class AddCommandParserTest {"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    public void parse_validArgs_returnsAddCommand() {"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"        assertParseSuccess(parser, \"1\", new AddCommand(INDEX_FIRST_BOOK));"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"        // No args"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        // Invalid arg"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        // Multiple args"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"        assertParseFailure(parser, \"1 2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":10,"-":21}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.book.Rating;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"public class ParserUtilTest {"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_TITLE \u003d \"Valid Title\";"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_DESCRIPTION \u003d \"Valid Description\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final int VALID_RATING \u003d -1;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_AUTHOR_1 \u003d \"Author A\";"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_AUTHOR_2 \u003d \"Author B\";"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_CATEGORY_1 \u003d \"Category A\";"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_CATEGORY_2 \u003d \"Category B\";"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public final ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public void parseIndex_invalidInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        ParserUtil.parseIndex(\"10 a\");"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        thrown.expectMessage(MESSAGE_INVALID_INDEX);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1));"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        // No whitespaces"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(INDEX_FIRST_BOOK, ParserUtil.parseIndex(\"1\"));"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        // Leading and trailing whitespaces"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(INDEX_FIRST_BOOK, ParserUtil.parseIndex(\"  1  \"));"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    public void parseTitle_null_throwsNullPointerException() {"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle((String) null));"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle((Optional\u003cString\u003e) null));"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    public void parseTitle_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(ParserUtil.parseTitle(Optional.empty()).isPresent());"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    public void parseTitle_validValueWithoutWhitespace_returnsTitle() throws Exception {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(VALID_TITLE));"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Optional.of(expectedTitle), ParserUtil.parseTitle(Optional.of(VALID_TITLE)));"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTrimmedTitle() throws Exception {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        String titleWithWhitespace \u003d WHITESPACE + VALID_TITLE + WHITESPACE;"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(titleWithWhitespace));"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Optional.of(expectedTitle), ParserUtil.parseTitle(Optional.of(titleWithWhitespace)));"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"    public void parseDescription_null_throwsNullPointerException() {"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((Optional\u003cString\u003e) null));"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"    public void parseDescription_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(ParserUtil.parseDescription(Optional.empty()).isPresent());"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Optional.of(expectedDescription), ParserUtil.parseDescription(Optional.of(VALID_DESCRIPTION)));"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"        String descWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descWithWhitespace));"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Optional.of(expectedDescription), ParserUtil.parseDescription(Optional.of(descWithWhitespace)));"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    public void parseRating_null_throwsNullPointerException() {"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRating((Integer) null));"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRating((Optional\u003cInteger\u003e) null));"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    public void parseRating_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        assertFalse(ParserUtil.parseRating(Optional.empty()).isPresent());"},{"lineNumber":124,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitID":"-"},"content":""},{"lineNumber":126,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":127,"author":{"gitID":"-"},"content":"    public void parseRating_validValueWithoutWhitespace_returnsRating() throws Exception {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        Rating expectedRating \u003d new Rating(VALID_RATING);"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        assertEquals(expectedRating, ParserUtil.parseRating(VALID_RATING));"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        assertEquals(Optional.of(expectedRating), ParserUtil.parseRating(Optional.of(VALID_RATING)));"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"    public void parseAuthor_null_throwsNullPointerException() throws Exception {"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"        ParserUtil.parseAuthor(null);"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"    public void parseAuthor_validValueWithoutWhitespace_returnsAuthor() throws Exception {"},{"lineNumber":141,"author":{"gitID":"takuyakanbr"},"content":"        Author expectedAuthor \u003d new Author(VALID_AUTHOR_1);"},{"lineNumber":142,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedAuthor, ParserUtil.parseAuthor(VALID_AUTHOR_1));"},{"lineNumber":143,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":146,"author":{"gitID":"takuyakanbr"},"content":"    public void parseAuthors_collectionWithValidAuthors_returnsAuthorSet() throws Exception {"},{"lineNumber":147,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cAuthor\u003e actualAuthorSet \u003d ParserUtil.parseAuthors(Arrays.asList(VALID_AUTHOR_1, VALID_AUTHOR_2));"},{"lineNumber":148,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cAuthor\u003e expectedAuthorSet \u003d"},{"lineNumber":149,"author":{"gitID":"takuyakanbr"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Author(VALID_AUTHOR_1), new Author(VALID_AUTHOR_2)));"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedAuthorSet, actualAuthorSet);"},{"lineNumber":152,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":155,"author":{"gitID":"takuyakanbr"},"content":"    public void parseCategory_null_throwsNullPointerException() throws Exception {"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":157,"author":{"gitID":"takuyakanbr"},"content":"        ParserUtil.parseCategory(null);"},{"lineNumber":158,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":159,"author":{"gitID":"-"},"content":""},{"lineNumber":160,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":161,"author":{"gitID":"takuyakanbr"},"content":"    public void parseCategory_validValueWithoutWhitespace_returnsCategory() throws Exception {"},{"lineNumber":162,"author":{"gitID":"takuyakanbr"},"content":"        Category expectedCategory \u003d new Category(VALID_CATEGORY_1);"},{"lineNumber":163,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedCategory, ParserUtil.parseCategory(VALID_CATEGORY_1));"},{"lineNumber":164,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitID":"-"},"content":""},{"lineNumber":166,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":167,"author":{"gitID":"takuyakanbr"},"content":"    public void parseCategorys_collectionWithValidCategorys_returnsCategorySet() throws Exception {"},{"lineNumber":168,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cCategory\u003e actualCategorySet \u003d ParserUtil.parseCategories(Arrays.asList(VALID_CATEGORY_1, VALID_CATEGORY_2));"},{"lineNumber":169,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cCategory\u003e expectedCategorySet \u003d"},{"lineNumber":170,"author":{"gitID":"takuyakanbr"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Category(VALID_CATEGORY_1), new Category(VALID_CATEGORY_2)));"},{"lineNumber":171,"author":{"gitID":"-"},"content":""},{"lineNumber":172,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedCategorySet, actualCategorySet);"},{"lineNumber":173,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"takuyakanbr":59,"-":112}},{"path":"src/test/java/seedu/address/network/NetworkManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.mockito.Mockito.mock;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.mockito.Mockito.verify;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.mockito.Mockito.when;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletionException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiBookDetailsRequestEvent;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiBookDetailsResultEvent;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiSearchRequestEvent;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiSearchResultEvent;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ResultOutcome;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.api.google.GoogleBooksApi;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"public class NetworkManagerTest {"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private static final String PARAM_EMPTY_RESULT \u003d \"1\";"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private static final String PARAM_SUCCESS \u003d \"12345\";"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private static final String PARAM_FAILURE \u003d \"failure\";"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    private NetworkManager networkManager;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private GoogleBooksApi mockGoogleBooksApi;"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    @Before"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public void setUp() {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        mockGoogleBooksApi \u003d mock(GoogleBooksApi.class);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        networkManager \u003d new NetworkManager(mock(HttpClient.class), mockGoogleBooksApi);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        eventsCollectorRule.eventsCollector.reset();"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    public void handleGoogleApiSearchRequestEvent_emptyResult() {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":47,"author":{"gitID":"-"},"content":"         * The stubbed methods return a CompletableFuture that is already completed, so the chained"},{"lineNumber":48,"author":{"gitID":"-"},"content":"         * calls within NetworkManager will be executed synchronously. We are therefore guaranteed"},{"lineNumber":49,"author":{"gitID":"-"},"content":"         * that the *ResultEvent will have already been raised when the methods we are testing returns."},{"lineNumber":50,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        when(mockGoogleBooksApi.searchBooks(PARAM_EMPTY_RESULT))"},{"lineNumber":52,"author":{"gitID":"-"},"content":"                .thenReturn(CompletableFuture.completedFuture(new BookShelf()));"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        networkManager.handleGoogleApiSearchRequestEvent(new ApiSearchRequestEvent(PARAM_EMPTY_RESULT));"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        ApiSearchResultEvent event \u003d"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"                (ApiSearchResultEvent) eventsCollectorRule.eventsCollector.getMostRecent(ApiSearchResultEvent.class);"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"        verify(mockGoogleBooksApi).searchBooks(PARAM_EMPTY_RESULT);"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(ResultOutcome.SUCCESS, event.outcome);"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(0, event.bookShelf.getBookList().size());"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    public void handleGoogleApiSearchRequestEvent_success() {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        when(mockGoogleBooksApi.searchBooks(PARAM_SUCCESS))"},{"lineNumber":66,"author":{"gitID":"-"},"content":"                .thenReturn(CompletableFuture.completedFuture(TypicalBooks.getTypicalBookShelf()));"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        networkManager.handleGoogleApiSearchRequestEvent(new ApiSearchRequestEvent(PARAM_SUCCESS));"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        ApiSearchResultEvent event \u003d"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"                (ApiSearchResultEvent) eventsCollectorRule.eventsCollector.getMostRecent(ApiSearchResultEvent.class);"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"        verify(mockGoogleBooksApi).searchBooks(PARAM_SUCCESS);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(ResultOutcome.SUCCESS, event.outcome);"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(5, event.bookShelf.getBookList().size());"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"    public void handleGoogleApiSearchRequestEvent_failure() {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        when(mockGoogleBooksApi.searchBooks(PARAM_FAILURE))"},{"lineNumber":80,"author":{"gitID":"-"},"content":"                .thenReturn(getFailedFuture());"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        networkManager.handleGoogleApiSearchRequestEvent(new ApiSearchRequestEvent(PARAM_FAILURE));"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        ApiSearchResultEvent event \u003d"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"                (ApiSearchResultEvent) eventsCollectorRule.eventsCollector.getMostRecent(ApiSearchResultEvent.class);"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"        verify(mockGoogleBooksApi).searchBooks(PARAM_FAILURE);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(ResultOutcome.FAILURE, event.outcome);"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(null, event.bookShelf);"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"    public void handleGoogleApiBookDetailsRequestEvent_success() {"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        when(mockGoogleBooksApi.getBookDetails(PARAM_SUCCESS))"},{"lineNumber":94,"author":{"gitID":"-"},"content":"                .thenReturn(CompletableFuture.completedFuture(TypicalBooks.ARTEMIS));"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        networkManager.handleGoogleApiBookDetailsRequestEvent(new ApiBookDetailsRequestEvent(PARAM_SUCCESS));"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        ApiBookDetailsResultEvent event \u003d (ApiBookDetailsResultEvent)"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"                eventsCollectorRule.eventsCollector.getMostRecent(ApiBookDetailsResultEvent.class);"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"        verify(mockGoogleBooksApi).getBookDetails(PARAM_SUCCESS);"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(ResultOutcome.SUCCESS, event.outcome);"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(TypicalBooks.ARTEMIS, event.book);"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"    public void handleGoogleApiBookDetailsRequestEvent_failure() {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        when(mockGoogleBooksApi.getBookDetails(PARAM_FAILURE))"},{"lineNumber":108,"author":{"gitID":"-"},"content":"                .thenReturn(getFailedFuture());"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        networkManager.handleGoogleApiBookDetailsRequestEvent(new ApiBookDetailsRequestEvent(PARAM_FAILURE));"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        ApiBookDetailsResultEvent event \u003d (ApiBookDetailsResultEvent)"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"                eventsCollectorRule.eventsCollector.getMostRecent(ApiBookDetailsResultEvent.class);"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"        verify(mockGoogleBooksApi).getBookDetails(PARAM_FAILURE);"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(ResultOutcome.FAILURE, event.outcome);"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(null, event.book);"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":120,"author":{"gitID":"-"},"content":"     * Returns a {@link CompletableFuture} that has already completed exceptionally."},{"lineNumber":121,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    private static \u003cT\u003e CompletableFuture\u003cT\u003e getFailedFuture() {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        return CompletableFuture.completedFuture(null).thenApply(obj -\u003e {"},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"            throw new CompletionException(new IOException());"},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"        });"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":79,"-":49}},{"path":"src/test/java/seedu/address/logic/UndoStackUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"qiu-siqi"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoableCommand;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" * Contains helper methods for testing {@code UndoStack}."},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"public class UndoStackUtil {"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"     * Adds {@code undoElements} into {@code UndoStack#undoStack}."},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"     * The first element in {@code undoElements} will be the bottommost element"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"     * in the stack in {@code undoStack}, while the last element will"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"     * be the topmost element."},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    public static UndoStack prepareStack(List\u003cUndoableCommand\u003e undoElements) {"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack undoStack \u003d new UndoStack();"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        undoElements.forEach(undoStack::push);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"        return undoStack;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":18,"-":5}},{"path":"src/test/java/seedu/address/logic/commands/HistoryCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"public class HistoryCommandTest {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    private HistoryCommand historyCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private CommandHistory history;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        history \u003d new CommandHistory();"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        historyCommand \u003d new HistoryCommand();"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"        historyCommand.setData(model, history, new UndoStack());"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void execute() {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        assertCommandResult(historyCommand, HistoryCommand.MESSAGE_NO_HISTORY);"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"        String command1 \u003d \"clear\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        history.add(command1);"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        assertCommandResult(historyCommand, String.format(HistoryCommand.MESSAGE_SUCCESS, command1));"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"        String command2 \u003d \"randomCommand\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        String command3 \u003d \"select 1\";"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        history.add(command2);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        history.add(command3);"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(HistoryCommand.MESSAGE_SUCCESS,"},{"lineNumber":39,"author":{"gitID":"-"},"content":"                String.join(\"\\n\", command3, command2, command1));"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"        assertCommandResult(historyCommand, expectedMessage);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * Asserts that the result message from the execution of {@code historyCommand} equals to {@code expectedMessage}"},{"lineNumber":46,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    private void assertCommandResult(HistoryCommand historyCommand, String expectedMessage) {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        assertEquals(expectedMessage, historyCommand.execute().feedbackToUser);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":48}},{"path":"src/test/java/seedu/address/logic/parser/BookShelfParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ExitCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HelpCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"public class BookShelfParserTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    private final BookShelfParser parser \u003d new BookShelfParser();"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void parseCommand_add() throws Exception {"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(AddCommand.COMMAND_WORD + \" 1\");"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(new AddCommand(INDEX_FIRST_BOOK), command);"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    public void parseCommand_delete() throws Exception {"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(DeleteCommand.COMMAND_WORD + \" 1\");"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_BOOK), command);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void parseCommand_exit() throws Exception {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public void parseCommand_help() throws Exception {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public void parseCommand_history() throws Exception {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD) instanceof HistoryCommand);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD + \" 3\") instanceof HistoryCommand);"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"            parser.parseCommand(\"histories\");"},{"lineNumber":59,"author":{"gitID":"-"},"content":"            fail(\"The expected ParseException was not thrown.\");"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        } catch (ParseException pe) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            assertEquals(MESSAGE_UNKNOWN_COMMAND, pe.getMessage());"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void parseCommand_undoCommandWord_returnsUndoCommand() throws Exception {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(\"undo 3\") instanceof UndoCommand);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() throws Exception {"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        thrown.expect(ParseException.class);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        thrown.expectMessage(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        parser.parseCommand(\"\");"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() throws Exception {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        thrown.expect(ParseException.class);"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        thrown.expectMessage(MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        parser.parseCommand(\"unknownCommand\");"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":13,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class ListCommandTest {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private Model expectedModel;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private ListCommand listCommand;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        listCommand \u003d new ListCommand();"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        listCommand.setData(model, new CommandHistory(), new UndoStack());"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        assertCommandSuccess(listCommand, model, ListCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertCommandSuccess(listCommand, model, ListCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":8,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Rule;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ActiveListType;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":" * Contains integration tests (interaction with the Model and UndoCommand) and unit tests for"},{"lineNumber":32,"author":{"gitID":"-"},"content":" * {@code DeleteCommand}."},{"lineNumber":33,"author":{"gitID":"-"},"content":" */"},{"lineNumber":34,"author":{"gitID":"-"},"content":"public class DeleteCommandTest {"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public void execute_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.deleteBook(bookToDelete);"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_invalidActiveListType_throwsCommandException() throws Exception {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        model.setActiveListType(ActiveListType.SEARCH_RESULTS);"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(deleteCommand, model, DeleteCommand.MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        model.setActiveListType(ActiveListType.RECENT_BOOKS);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(deleteCommand, model, DeleteCommand.MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_invalidBook_throwsAssertionError() throws Exception {"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        deleteCommand.preprocessUndoableCommand();"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        model.deleteBook(TypicalBooks.ARTEMIS);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(AssertionError.class);"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        deleteCommand.executeUndoableCommand();"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() throws Exception {"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    public void execute_validIndexFilteredList_success() throws Exception {"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.deleteBook(bookToDelete);"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        showNoBook(expectedModel);"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        // ensures that outOfBoundIndex is still in bounds of book shelf list"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getBookShelf().getBookList().size());"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"    public void executeUndo_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack undoStack \u003d new UndoStack();"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoStack);"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"        // delete -\u003e first book deleted"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        deleteCommand.execute();"},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.push(deleteCommand);"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":"        // undo -\u003e reverts bookshelf back to previous state and filtered book list to show all books"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":130,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"-"},"content":""},{"lineNumber":132,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":133,"author":{"gitID":"qiu-siqi"},"content":"    public void executeUndo_invalidIndexUnfilteredList_failure() {"},{"lineNumber":134,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack undoStack \u003d new UndoStack();"},{"lineNumber":135,"author":{"gitID":"qiu-siqi"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoStack);"},{"lineNumber":136,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"qiu-siqi"},"content":"        // execution failed -\u003e deleteCommand not pushed into undoStack"},{"lineNumber":140,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":141,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"-"},"content":""},{"lineNumber":143,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":144,"author":{"gitID":"qiu-siqi"},"content":"     * 1. Deletes a {@code Book} from a filtered book."},{"lineNumber":145,"author":{"gitID":"-"},"content":"     * 2. Undo the deletion."},{"lineNumber":146,"author":{"gitID":"qiu-siqi"},"content":"     * 3. The unfiltered list should be shown now. Verify that the index of the previously deleted book in the"},{"lineNumber":147,"author":{"gitID":"-"},"content":"     * unfiltered list is different from the index at the filtered list."},{"lineNumber":148,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":150,"author":{"gitID":"qiu-siqi"},"content":"    public void executeUndo_validIndexFilteredList_samePersonDeleted() throws Exception {"},{"lineNumber":151,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack undoStack \u003d new UndoStack();"},{"lineNumber":152,"author":{"gitID":"qiu-siqi"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoStack);"},{"lineNumber":153,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":154,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":155,"author":{"gitID":"-"},"content":""},{"lineNumber":156,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_SECOND_BOOK);"},{"lineNumber":157,"author":{"gitID":"qiu-siqi"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());"},{"lineNumber":158,"author":{"gitID":"qiu-siqi"},"content":"        // delete -\u003e deletes second book in unfiltered book list / first book in filtered book list"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        deleteCommand.execute();"},{"lineNumber":160,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.push(deleteCommand);"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"qiu-siqi"},"content":"        // undo -\u003e reverts book shelf back to previous state and filtered book list to show all books"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.deleteBook(bookToDelete);"},{"lineNumber":166,"author":{"gitID":"qiu-siqi"},"content":"        assertNotEquals(bookToDelete, model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased()));"},{"lineNumber":167,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitID":"-"},"content":""},{"lineNumber":169,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":170,"author":{"gitID":"-"},"content":"    public void equals() throws Exception {"},{"lineNumber":171,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteFirstCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":172,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteSecondCommand \u003d prepareCommand(INDEX_SECOND_BOOK);"},{"lineNumber":173,"author":{"gitID":"-"},"content":""},{"lineNumber":174,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":178,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"},{"lineNumber":180,"author":{"gitID":"-"},"content":""},{"lineNumber":181,"author":{"gitID":"-"},"content":"        // one command preprocessed when previously equal -\u003e returns false"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        deleteFirstCommandCopy.preprocessUndoableCommand();"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteFirstCommandCopy));"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":186,"author":{"gitID":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));"},{"lineNumber":187,"author":{"gitID":"-"},"content":""},{"lineNumber":188,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));"},{"lineNumber":190,"author":{"gitID":"-"},"content":""},{"lineNumber":191,"author":{"gitID":"qiu-siqi"},"content":"        // different book -\u003e returns false"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"},{"lineNumber":193,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitID":"-"},"content":""},{"lineNumber":195,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":196,"author":{"gitID":"-"},"content":"     * Returns a {@code DeleteCommand} with the parameter {@code index}."},{"lineNumber":197,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitID":"-"},"content":"    private DeleteCommand prepareCommand(Index index) {"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(index);"},{"lineNumber":200,"author":{"gitID":"qiu-siqi"},"content":"        deleteCommand.setData(model, new CommandHistory(), new UndoStack());"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        return deleteCommand;"},{"lineNumber":202,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitID":"-"},"content":""},{"lineNumber":204,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":205,"author":{"gitID":"qiu-siqi"},"content":"     * Updates {@code model}\u0027s filtered list to show no book."},{"lineNumber":206,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":207,"author":{"gitID":"qiu-siqi"},"content":"    private void showNoBook(Model model) {"},{"lineNumber":208,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(p -\u003e false);"},{"lineNumber":209,"author":{"gitID":"-"},"content":""},{"lineNumber":210,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(model.getFilteredBookList().isEmpty());"},{"lineNumber":211,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":69,"takuyakanbr":21,"-":122}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":26,"author":{"gitID":"-"},"content":" * Contains helper methods for testing commands."},{"lineNumber":27,"author":{"gitID":"-"},"content":" */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"public class CommandTestUtil {"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_TITLE_ARTEMIS \u003d \"Artemis\";"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_TITLE_BABYLON \u003d \"Babylon\u0027s Ashes\";"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_AUTHOR_ARTEMIS \u003d \"Andy Weir\";"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_AUTHOR_BABYLON \u003d \"James S. A. Corey\";"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_CATEGORY_ARTEMIS \u003d \"Fiction\";"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_CATEGORY_BABYLON \u003d \"Fiction\";"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_DESCRIPTION_ARTEMIS \u003d \"This is Artemis.\";"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_DESCRIPTION_BABYLON \u003d \"This is Babylon\u0027s Ashes.\";"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public static final int VALID_RATING_ARTEMIS \u003d 5;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public static final int VALID_RATING_BABYLON \u003d 4;"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_ISBN_ARTEMIS \u003d \"234910247\";"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_ISBN_BABYLON \u003d \"907161513\";"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public static final String TITLE_DESC_ARTEMIS \u003d \" \" + PREFIX_TITLE + VALID_TITLE_ARTEMIS;"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public static final String TITLE_DESC_BABYLON \u003d \" \" + PREFIX_TITLE + VALID_TITLE_BABYLON;"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    public static final String AUTHOR_DESC_ARTEMIS \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_ARTEMIS;"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    public static final String AUTHOR_DESC_BABYLON \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_BABYLON;"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    public static final String CATEGORY_DESC_ARTEMIS \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_ARTEMIS;"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    public static final String CATEGORY_DESC_BABYLON \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_BABYLON;"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DESCRIPTION_DESC_ARTEMIS \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_ARTEMIS;"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DESCRIPTION_DESC_BABYLON \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BABYLON;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    public static final String RATING_DESC_ARTEMIS \u003d \" \" + PREFIX_RATING + VALID_RATING_ARTEMIS;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public static final String RATING_DESC_BABYLON \u003d \" \" + PREFIX_RATING + VALID_RATING_BABYLON;"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    public static final String ISBN_DESC_ARTEMIS \u003d \" \" + PREFIX_ISBN + VALID_ISBN_ARTEMIS;"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    public static final String ISBN_DESC_BABYLON \u003d \" \" + PREFIX_ISBN + VALID_ISBN_BABYLON;"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":60,"author":{"gitID":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e"},{"lineNumber":61,"author":{"gitID":"-"},"content":"     * - the result message matches {@code expectedMessage} \u003cbr\u003e"},{"lineNumber":62,"author":{"gitID":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}"},{"lineNumber":63,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"},{"lineNumber":65,"author":{"gitID":"-"},"content":"                                            Model expectedModel) {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"            CommandResult result \u003d command.execute();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, result.feedbackToUser);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"            assertEquals(expectedModel, actualModel);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        } catch (CommandException ce) {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e"},{"lineNumber":77,"author":{"gitID":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e"},{"lineNumber":78,"author":{"gitID":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"     * - the book shelf and the filtered book list in the {@code actualModel} remain unchanged"},{"lineNumber":80,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        // only do so by copying its components."},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf expectedBookShelf \u003d new BookShelf(actualModel.getBookShelf());"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBook\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredBookList());"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"            command.execute();"},{"lineNumber":89,"author":{"gitID":"-"},"content":"            fail(\"The expected CommandException was not thrown.\");"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        } catch (CommandException e) {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, e.getMessage());"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"            assertEquals(expectedBookShelf, actualModel.getBookShelf());"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"            assertEquals(expectedFilteredList, actualModel.getFilteredBookList());"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"     * Updates {@code model}\u0027s filtered list to show only the book at the given {@code targetIndex} in the"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"     * {@code model}\u0027s book shelf."},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"    public static void showBookAtIndex(Model model, Index targetIndex) {"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredBookList().size());"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"        Book book \u003d model.getFilteredBookList().get(targetIndex.getZeroBased());"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(thisBook -\u003e thisBook.equals(book));"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(1, model.getFilteredBookList().size());"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"     * Deletes the first book in {@code model}\u0027s filtered list from {@code model}\u0027s book shelf."},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"    public static void deleteFirstBook(Model model) {"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        Book firstBook \u003d model.getFilteredBookList().get(0);"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"            model.deleteBook(firstBook);"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"        } catch (BookNotFoundException pnfe) {"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"            throw new AssertionError(\"Book in filtered list must exist in model.\", pnfe);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":120,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"     * Returns an {@code UndoCommand} with the given {@code model} and {@code undoStack} set."},{"lineNumber":124,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"    public static UndoCommand prepareUndoCommand(Model model, UndoStack undoStack) {"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();"},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":"        undoCommand.setData(model, new CommandHistory(), undoStack);"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        return undoCommand;"},{"lineNumber":129,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":43,"takuyakanbr":21,"-":66}},{"path":"src/test/java/seedu/address/logic/commands/SearchCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Rule;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiSearchRequestEvent;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand.SearchDescriptor;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.SearchDescriptorBuilder;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SearchCommand."},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"public class SearchCommandTest {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_allFieldsSpecifiedWithSearchTerm_success() {"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor searchDescriptor \u003d new SearchDescriptorBuilder().withTitle(\"1\")"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"                .withCategory(\"1\").withIsbn(\"1\").withAuthor(\"1\").withSearchTerm(\"searchterm\").build();"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        assertExecutionSuccess(searchDescriptor);"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_allFieldsSpecifiedNoSearchTerm_success() {"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor searchDescriptor \u003d new SearchDescriptorBuilder().withTitle(\"1\")"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"                .withCategory(\"1\").withIsbn(\"1\").withAuthor(\"1\").build();"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        assertExecutionSuccess(searchDescriptor);"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_someFieldsSpecifiedNoSearchTerm_success() {"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor searchDescriptor \u003d new SearchDescriptorBuilder().withTitle(\"1\").withIsbn(\"1\").build();"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        assertExecutionSuccess(searchDescriptor);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_noFieldSpecifiedNoSearchTerm_success() {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor searchDescriptor \u003d new SearchDescriptorBuilder().build();"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        assertExecutionSuccess(searchDescriptor);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    public void equals() {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor descriptorA \u003d"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"                new SearchDescriptorBuilder().withAuthor(\"author1\").withIsbn(\"12345\").build();"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor descriptorB \u003d"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"                new SearchDescriptorBuilder().withAuthor(\"author2\").withIsbn(\"12345\").withTitle(\"title2\").build();"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        final SearchCommand standardCommand \u003d prepareCommand(descriptorA);"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        // same values -\u003e returns true"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptorBuilder copyDescriptor \u003d new SearchDescriptorBuilder(descriptorA);"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        SearchCommand commandWithSameValues \u003d prepareCommand(copyDescriptor.build());"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        // same object -\u003e returns true"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(standardCommand.equals(standardCommand));"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        // null -\u003e returns false"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(standardCommand.equals(null));"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        // different types -\u003e returns false"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        // different descriptor -\u003e returns false"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(standardCommand.equals(new SearchCommand(descriptorB)));"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"     * Executes a {@code SearchCommand} with the given {@code descriptor}, and checks that"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"     * {@code ApiSearchRequestEvent} is raised with the correct search parameters."},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"    private void assertExecutionSuccess(SearchDescriptor descriptor) {"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        SearchCommand command \u003d prepareCommand(descriptor);"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        Model expectedModel \u003d new ModelManager(new BookShelf(model.getBookShelf()), new UserPrefs());"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandSuccess(command, model, SearchCommand.MESSAGE_SEARCHING, expectedModel);"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"        ApiSearchRequestEvent lastEvent \u003d (ApiSearchRequestEvent) eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(descriptor.toSearchString(), lastEvent.searchParameters);"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"    private SearchCommand prepareCommand(SearchDescriptor descriptor) {"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        SearchCommand searchCommand \u003d new SearchCommand(descriptor);"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"        searchCommand.setData(model, new CommandHistory(), new UndoStack());"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"        return searchCommand;"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"takuyakanbr":87,"-":17}},{"path":"src/test/java/seedu/address/logic/commands/SearchDescriptorTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand.SearchDescriptor;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.SearchDescriptorBuilder;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"public class SearchDescriptorTest {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    public void isAnyFieldEdited() {"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"        // has at least 1 modified field -\u003e returns true"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor descriptor \u003d"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"                new SearchDescriptorBuilder().withAuthor(\"author1\").withIsbn(\"12345\").build();"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(descriptor.isValid());"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        descriptor \u003d new SearchDescriptorBuilder().withAuthor(\"12345\").build();"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(descriptor.isValid());"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"        descriptor \u003d new SearchDescriptorBuilder().withCategory(\"12345\").build();"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(descriptor.isValid());"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        descriptor \u003d new SearchDescriptorBuilder().withIsbn(\"12345\").build();"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(descriptor.isValid());"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        descriptor \u003d new SearchDescriptorBuilder().withSearchTerm(\"12345\").build();"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(descriptor.isValid());"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        descriptor \u003d new SearchDescriptorBuilder().withTitle(\"12345\").build();"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(descriptor.isValid());"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        // has no modified field -\u003e returns false"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        descriptor \u003d new SearchDescriptorBuilder().build();"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(descriptor.isValid());"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public void toString_equalsToSearchString() {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor descriptor \u003d"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"                new SearchDescriptorBuilder().withAuthor(\"author1\").withIsbn(\"12345\").build();"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(descriptor.toSearchString(), descriptor.toString());"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        descriptor \u003d new SearchDescriptorBuilder().withAuthor(\"12345\").build();"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(descriptor.toSearchString(), descriptor.toString());"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        descriptor \u003d new SearchDescriptorBuilder().build();"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(descriptor.toSearchString(), descriptor.toString());"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    public void equals() {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor descriptorA \u003d"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"                new SearchDescriptorBuilder().withAuthor(\"author1\").withIsbn(\"12345\").build();"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor descriptorB \u003d"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"                new SearchDescriptorBuilder().withAuthor(\"author2\").withIsbn(\"12345\").withTitle(\"title2\").build();"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        // same values -\u003e returns true"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor descriptorWithSameValues \u003d"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"                new SearchDescriptorBuilder().withAuthor(\"author1\").withIsbn(\"12345\").build();"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(descriptorA.equals(descriptorWithSameValues));"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        // same object -\u003e returns true"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(descriptorA.equals(descriptorA));"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        // null -\u003e returns false"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(descriptorA.equals(null));"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        // different types -\u003e returns false"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(descriptorA.equals(5));"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        // different values -\u003e returns false"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(descriptorA.equals(descriptorB));"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        // different author -\u003e returns false"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        SearchDescriptor editedDescriptor \u003d"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"                new SearchDescriptorBuilder().withAuthor(\"author2\").withIsbn(\"12345\").build();"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(descriptorA.equals(editedDescriptor));"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        // different category -\u003e returns false"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        editedDescriptor \u003d new SearchDescriptorBuilder()"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthor(\"author1\").withCategory(\"cat1\").withIsbn(\"12345\").build();"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(descriptorA.equals(editedDescriptor));"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        // different isbn -\u003e returns false"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        editedDescriptor \u003d new SearchDescriptorBuilder()"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthor(\"author1\").withIsbn(\"234567\").build();"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(descriptorA.equals(editedDescriptor));"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        // different title -\u003e returns false"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        editedDescriptor \u003d new SearchDescriptorBuilder()"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthor(\"author1\").withIsbn(\"12345\").withTitle(\"title2\").build();"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(descriptorA.equals(editedDescriptor));"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        // different search term -\u003e returns false"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"        editedDescriptor \u003d new SearchDescriptorBuilder()"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthor(\"author1\").withIsbn(\"12345\").withSearchTerm(\"search\").build();"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(descriptorA.equals(editedDescriptor));"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":91,"-":5}},{"path":"src/test/java/seedu/address/logic/commands/ThemeCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Rule;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Theme;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ChangeThemeRequestEvent;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"public class ThemeCommandTest {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public void execute_validTheme_success() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        assertExecutionSuccess(Theme.LIGHT);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        assertExecutionSuccess(Theme.DARK);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        final ThemeCommand standardCommand \u003d prepareCommand(Theme.WHITE);"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        ThemeCommand commandWithSameValues \u003d prepareCommand(Theme.WHITE);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        // same object -\u003e returns true"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        assertTrue(standardCommand.equals(standardCommand));"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        // null -\u003e returns false"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(standardCommand.equals(null));"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        // different types -\u003e returns false"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        // different themes -\u003e returns false"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        assertFalse(standardCommand.equals(new ThemeCommand(Theme.DARK)));"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":62,"author":{"gitID":"-"},"content":"     * Executes a {@code ThemeCommand} with the given {@code theme}, and checks that"},{"lineNumber":63,"author":{"gitID":"-"},"content":"     * {@code ChangeThemeRequestEvent} is raised with the correct parameters."},{"lineNumber":64,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    private void assertExecutionSuccess(Theme theme) {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        ThemeCommand command \u003d prepareCommand(theme);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        Model expectedModel \u003d new ModelManager(new BookShelf(model.getBookShelf()), new UserPrefs());"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model,"},{"lineNumber":69,"author":{"gitID":"-"},"content":"                String.format(ThemeCommand.MESSAGE_SUCCESS, theme.getThemeName()), expectedModel);"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        ChangeThemeRequestEvent lastEvent \u003d"},{"lineNumber":72,"author":{"gitID":"-"},"content":"                (ChangeThemeRequestEvent) eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        assertEquals(theme, lastEvent.newTheme);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    private ThemeCommand prepareCommand(Theme theme) {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        ThemeCommand themeCommand \u003d new ThemeCommand(theme);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        themeCommand.setData(model, new CommandHistory(), new UndoStack());"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        return themeCommand;"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"takuyakanbr":21,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ActiveListType;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class ClearCommandTest {"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public void execute_emptyAddressBook_success() {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        assertCommandSuccess(prepareCommand(model), model, ClearCommand.MESSAGE_SUCCESS, model);"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        Model model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        assertCommandSuccess(prepareCommand(model), model, ClearCommand.MESSAGE_SUCCESS, model);"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_invalidActiveListType_throwsCommandException() {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        model.setActiveListType(ActiveListType.SEARCH_RESULTS);"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        ClearCommand clearCommand \u003d prepareCommand(model);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(clearCommand, model, ClearCommand.MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        model.setActiveListType(ActiveListType.RECENT_BOOKS);"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        clearCommand \u003d prepareCommand(model);"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandFailure(clearCommand, model, ClearCommand.MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":43,"author":{"gitID":"-"},"content":"     * Generates a new {@code ClearCommand} which upon execution, clears the contents in {@code model}."},{"lineNumber":44,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    private ClearCommand prepareCommand(Model model) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        ClearCommand command \u003d new ClearCommand();"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        command.setData(model, new CommandHistory(), new UndoStack());"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        return command;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":7,"takuyakanbr":9,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/UndoableCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstBook;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class UndoableCommandTest {"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    private final Model model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private final DummyCommand dummyCommand \u003d new DummyCommand(model);"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void executeUndo() throws Exception {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        dummyCommand.execute();"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        deleteFirstBook(expectedModel);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        // undo() should cause the model\u0027s filtered list to show all books"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        dummyCommand.undo();"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     * Deletes the first person in the model\u0027s filtered list."},{"lineNumber":41,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    class DummyCommand extends UndoableCommand {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        DummyCommand(Model model) {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"            this.model \u003d model;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"            Book bookToDelete \u003d model.getFilteredBookList().get(0);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"            try {"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"                model.deleteBook(bookToDelete);"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"            } catch (BookNotFoundException pnfe) {"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"                fail(\"Impossible: bookToDelete was retrieved from model.\");"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            return new CommandResult(\"\");"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":16,"-":42}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.UndoStackUtil.prepareStack;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstBook;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"public class UndoCommandTest {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private static final CommandHistory EMPTY_COMMAND_HISTORY \u003d new CommandHistory();"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    private static final UndoStack EMPTY_STACK \u003d new UndoStack();"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    private final Model model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    private final DeleteCommand deleteCommandOne \u003d new DeleteCommand(INDEX_FIRST_BOOK);"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    private final DeleteCommand deleteCommandTwo \u003d new DeleteCommand(INDEX_FIRST_BOOK);"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        deleteCommandOne.setData(model, EMPTY_COMMAND_HISTORY, EMPTY_STACK);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        deleteCommandTwo.setData(model, EMPTY_COMMAND_HISTORY, EMPTY_STACK);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public void execute() throws Exception {"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack undoStack \u003d prepareStack("},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"                Arrays.asList(deleteCommandOne, deleteCommandTwo));"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        undoCommand.setData(model, EMPTY_COMMAND_HISTORY, undoStack);"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        deleteCommandOne.execute();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        deleteCommandTwo.execute();"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"        // multiple commands in undoStack"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        deleteFirstBook(expectedModel);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        // single command in undoStack"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        // no command in undoStack"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":15,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import org.junit.Before;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ActiveListType;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":" * Contains integration tests (interaction with the Model and UndoCommand) and unit tests for"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":" * {@code AddCommand}."},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"public class AddCommandTest {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    private Model model;"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"     * By default, set up search results list as active list."},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"    @Before"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"    public void setUp() {"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(new BookShelf(), new UserPrefs());"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        prepareSearchResultListInModel(model);"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"    public void constructor_nullBook_throwsNullPointerException() {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        new AddCommand(null);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_invalidActiveListType_failure() {"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        model.setActiveListType(ActiveListType.BOOK_SHELF);"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addCommandSmallIndex \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addCommandLargeIndex \u003d prepareCommand(Index.fromOneBased(100));"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(addCommandSmallIndex, model, AddCommand.MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        // Wrong active list message should take precedence over invalid index"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(addCommandLargeIndex, model, AddCommand.MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_validIndexSearchResults_success() throws Exception {"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        ModelManager expectedModel \u003d new ModelManager();"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"        prepareSearchResultListInModel(expectedModel);"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(addCommand, model, AddCommand.MESSAGE_ADDING, expectedModel);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_invalidIndexSearchResults_failure() {"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addCommand \u003d prepareCommand(Index.fromOneBased(model.getSearchResultsList().size() + 1));"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(addCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_validIndexRecentBooks_success() throws Exception {"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"        prepareRecentBooksListInModel(model);"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        ModelManager expectedModel \u003d new ModelManager();"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"        prepareSearchResultListInModel(expectedModel);"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"        prepareRecentBooksListInModel(expectedModel);"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(addCommand, model, AddCommand.MESSAGE_ADDING, expectedModel);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_invalidIndexRecentBooks_failure() {"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"        prepareRecentBooksListInModel(model);"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addCommand \u003d prepareCommand(Index.fromOneBased(model.getRecentBooksList().size() + 1));"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(addCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"    public void executeUndo_validIndex_success() throws Exception {"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack undoStack \u003d new UndoStack();"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoStack);"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"        prepareSearchResultListInModel(expectedModel);"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"        // add -\u003e first book added"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"        addCommand.execute();"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.push(addCommand);"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"        // undo -\u003e reverts bookshelf back to previous state"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"    public void executeUndo_invalidIndex_failure() throws Exception {"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack undoStack \u003d new UndoStack();"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoStack);"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSearchResultsList().size() + 1);"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"        // execution failed -\u003e addCommand not pushed into undoStack"},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(addCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":"        // no commands in undoStack -\u003e undoCommand fail"},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":131,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":132,"author":{"gitID":"qiu-siqi"},"content":"    public void equals() throws Exception {"},{"lineNumber":133,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addFirstCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":134,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addSecondCommand \u003d prepareCommand(INDEX_SECOND_BOOK);"},{"lineNumber":135,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":136,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":137,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(addFirstCommand.equals(addFirstCommand));"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":140,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addFirstCommandCopy \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":141,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(addFirstCommand.equals(addFirstCommandCopy));"},{"lineNumber":142,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":143,"author":{"gitID":"qiu-siqi"},"content":"        // one command preprocessed when previously equal -\u003e returns false"},{"lineNumber":144,"author":{"gitID":"qiu-siqi"},"content":"        addFirstCommandCopy.preprocessUndoableCommand();"},{"lineNumber":145,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(addFirstCommand.equals(addFirstCommandCopy));"},{"lineNumber":146,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":147,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":148,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(addFirstCommand.equals(1));"},{"lineNumber":149,"author":{"gitID":"-"},"content":""},{"lineNumber":150,"author":{"gitID":"qiu-siqi"},"content":"        // null -\u003e returns false"},{"lineNumber":151,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(addFirstCommand.equals(null));"},{"lineNumber":152,"author":{"gitID":"-"},"content":""},{"lineNumber":153,"author":{"gitID":"qiu-siqi"},"content":"        // different book -\u003e returns false"},{"lineNumber":154,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(addFirstCommand.equals(addSecondCommand));"},{"lineNumber":155,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":158,"author":{"gitID":"qiu-siqi"},"content":"     * Set up {@code model} with a non-empty search result list and"},{"lineNumber":159,"author":{"gitID":"qiu-siqi"},"content":"     * switch active list to search results list."},{"lineNumber":160,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":161,"author":{"gitID":"qiu-siqi"},"content":"    private void prepareSearchResultListInModel(Model model) {"},{"lineNumber":162,"author":{"gitID":"takuyakanbr"},"content":"        model.setActiveListType(ActiveListType.SEARCH_RESULTS);"},{"lineNumber":163,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf bookShelf \u003d getTypicalBookShelf();"},{"lineNumber":164,"author":{"gitID":"qiu-siqi"},"content":"        model.updateSearchResults(bookShelf);"},{"lineNumber":165,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":168,"author":{"gitID":"qiu-siqi"},"content":"     * Set up {@code model} with a non-empty recently selected books list and"},{"lineNumber":169,"author":{"gitID":"qiu-siqi"},"content":"     * switch active list to recent books list."},{"lineNumber":170,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":171,"author":{"gitID":"qiu-siqi"},"content":"    private void prepareRecentBooksListInModel(Model model) {"},{"lineNumber":172,"author":{"gitID":"qiu-siqi"},"content":"        model.setActiveListType(ActiveListType.RECENT_BOOKS);"},{"lineNumber":173,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf bookShelf \u003d getTypicalBookShelf();"},{"lineNumber":174,"author":{"gitID":"qiu-siqi"},"content":"        bookShelf.getBookList().forEach(model::addRecentBook);"},{"lineNumber":175,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":176,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":177,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":178,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a {@code DeleteCommand} with the parameter {@code index}."},{"lineNumber":179,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":180,"author":{"gitID":"qiu-siqi"},"content":"    private AddCommand prepareCommand(Index index) {"},{"lineNumber":181,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addCommand \u003d new AddCommand(index);"},{"lineNumber":182,"author":{"gitID":"qiu-siqi"},"content":"        addCommand.setData(model, new CommandHistory(), new UndoStack());"},{"lineNumber":183,"author":{"gitID":"qiu-siqi"},"content":"        return addCommand;"},{"lineNumber":184,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitID":"-"},"content":""},{"lineNumber":186,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":115,"takuyakanbr":15,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/RecentCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"qiu-siqi"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RecentCommand."},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"public class RecentCommandTest {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    private Model expectedModel;"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    private RecentCommand recentCommand;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        recentCommand \u003d new RecentCommand();"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        recentCommand.setData(model, new CommandHistory(), new UndoStack());"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_showsRecent() {"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(recentCommand, model, RecentCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":21,"takuyakanbr":5,"-":15}},{"path":"src/test/java/seedu/address/logic/commands/SelectCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_BOOK;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.JumpToBookListIndexRequestEvent;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.JumpToRecentBooksIndexRequestEvent;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.JumpToSearchResultsIndexRequestEvent;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ActiveListType;"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":35,"author":{"gitID":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code SelectCommand}."},{"lineNumber":36,"author":{"gitID":"-"},"content":" */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"public class SelectCommandTest {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_validIndexUnfilteredBookList_success() {"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        Index lastBookIndex \u003d Index.fromOneBased(model.getFilteredBookList().size());"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(INDEX_FIRST_BOOK);"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(INDEX_THIRD_BOOK);"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(lastBookIndex);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_invalidIndexUnfilteredBookList_failure() {"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionFailure(outOfBoundsIndex, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_validIndexFilteredBookList_success() {"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(INDEX_FIRST_BOOK);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_validIndexSearchResultsList_success() throws Exception {"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        model \u003d new ModelManager();"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        model.setActiveListType(ActiveListType.SEARCH_RESULTS);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d new BookShelf();"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(TypicalBooks.ARTEMIS);"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        model.updateSearchResults(bookShelf);"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(INDEX_FIRST_BOOK);"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        assertExecutionSuccess(INDEX_SECOND_BOOK);"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_validIndexRecentBooksList_success() throws Exception {"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        model \u003d new ModelManager();"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"        model.setActiveListType(ActiveListType.RECENT_BOOKS);"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"        model.addRecentBook(TypicalBooks.ARTEMIS);"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"        model.addRecentBook(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(INDEX_FIRST_BOOK);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        assertExecutionSuccess(INDEX_SECOND_BOOK);"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_invalidIndexFilteredBookList_failure() {"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundsIndex \u003d INDEX_SECOND_BOOK;"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        // ensures that outOfBoundIndex is still in bounds of book shelf list"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(outOfBoundsIndex.getZeroBased() \u003c model.getBookShelf().getBookList().size());"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionFailure(outOfBoundsIndex, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    public void execute_invalidIndexSearchResultsList_failure() throws Exception {"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"        model \u003d new ModelManager();"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"        model.setActiveListType(ActiveListType.SEARCH_RESULTS);"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d new BookShelf();"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(TypicalBooks.ARTEMIS);"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        model.updateSearchResults(bookShelf);"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        assertExecutionFailure(INDEX_SECOND_BOOK, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_invalidIndexRecentBooksList_failure() throws Exception {"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"        model \u003d new ModelManager();"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"        model.setActiveListType(ActiveListType.RECENT_BOOKS);"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"        model.addRecentBook(TypicalBooks.ARTEMIS);"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"        assertExecutionFailure(INDEX_SECOND_BOOK, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":122,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"        SelectCommand selectFirstCommand \u003d new SelectCommand(INDEX_FIRST_BOOK);"},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"        SelectCommand selectSecondCommand \u003d new SelectCommand(INDEX_SECOND_BOOK);"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommand));"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":131,"author":{"gitID":"qiu-siqi"},"content":"        SelectCommand selectFirstCommandCopy \u003d new SelectCommand(INDEX_FIRST_BOOK);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommandCopy));"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        assertFalse(selectFirstCommand.equals(1));"},{"lineNumber":136,"author":{"gitID":"-"},"content":""},{"lineNumber":137,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        assertFalse(selectFirstCommand.equals(null));"},{"lineNumber":139,"author":{"gitID":"-"},"content":""},{"lineNumber":140,"author":{"gitID":"qiu-siqi"},"content":"        // different book -\u003e returns false"},{"lineNumber":141,"author":{"gitID":"-"},"content":"        assertFalse(selectFirstCommand.equals(selectSecondCommand));"},{"lineNumber":142,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitID":"-"},"content":""},{"lineNumber":144,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":145,"author":{"gitID":"-"},"content":"     * Executes a {@code SelectCommand} with the given {@code index}, and checks that {@code JumpToListRequestEvent}"},{"lineNumber":146,"author":{"gitID":"-"},"content":"     * is raised with the correct index."},{"lineNumber":147,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":148,"author":{"gitID":"-"},"content":"    private void assertExecutionSuccess(Index index) {"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        SelectCommand selectCommand \u003d prepareCommand(index);"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":152,"author":{"gitID":"-"},"content":"            CommandResult commandResult \u003d selectCommand.execute();"},{"lineNumber":153,"author":{"gitID":"qiu-siqi"},"content":"            assertEquals(String.format(SelectCommand.MESSAGE_SELECT_BOOK_SUCCESS, index.getOneBased()),"},{"lineNumber":154,"author":{"gitID":"-"},"content":"                    commandResult.feedbackToUser);"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        } catch (CommandException ce) {"},{"lineNumber":156,"author":{"gitID":"-"},"content":"            throw new IllegalArgumentException(\"Execution of command should not fail.\", ce);"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":158,"author":{"gitID":"-"},"content":""},{"lineNumber":159,"author":{"gitID":"takuyakanbr"},"content":"        BaseEvent lastEvent \u003d eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":160,"author":{"gitID":"takuyakanbr"},"content":"        int targetIndex \u003d -1;"},{"lineNumber":161,"author":{"gitID":"takuyakanbr"},"content":"        if (lastEvent instanceof JumpToBookListIndexRequestEvent) {"},{"lineNumber":162,"author":{"gitID":"takuyakanbr"},"content":"            targetIndex \u003d ((JumpToBookListIndexRequestEvent) lastEvent).targetIndex;"},{"lineNumber":163,"author":{"gitID":"takuyakanbr"},"content":"        } else if (lastEvent instanceof JumpToSearchResultsIndexRequestEvent) {"},{"lineNumber":164,"author":{"gitID":"takuyakanbr"},"content":"            targetIndex \u003d ((JumpToSearchResultsIndexRequestEvent) lastEvent).targetIndex;"},{"lineNumber":165,"author":{"gitID":"qiu-siqi"},"content":"        } else if (lastEvent instanceof JumpToRecentBooksIndexRequestEvent) {"},{"lineNumber":166,"author":{"gitID":"qiu-siqi"},"content":"            targetIndex \u003d ((JumpToRecentBooksIndexRequestEvent) lastEvent).targetIndex;"},{"lineNumber":167,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":168,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(index, Index.fromZeroBased(targetIndex));"},{"lineNumber":169,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitID":"-"},"content":""},{"lineNumber":171,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":172,"author":{"gitID":"-"},"content":"     * Executes a {@code SelectCommand} with the given {@code index}, and checks that a {@code CommandException}"},{"lineNumber":173,"author":{"gitID":"-"},"content":"     * is thrown with the {@code expectedMessage}."},{"lineNumber":174,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":175,"author":{"gitID":"-"},"content":"    private void assertExecutionFailure(Index index, String expectedMessage) {"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        SelectCommand selectCommand \u003d prepareCommand(index);"},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":179,"author":{"gitID":"-"},"content":"            selectCommand.execute();"},{"lineNumber":180,"author":{"gitID":"-"},"content":"            fail(\"The expected CommandException was not thrown.\");"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        } catch (CommandException ce) {"},{"lineNumber":182,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, ce.getMessage());"},{"lineNumber":183,"author":{"gitID":"-"},"content":"            assertTrue(eventsCollectorRule.eventsCollector.isEmpty());"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":185,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitID":"-"},"content":""},{"lineNumber":187,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":188,"author":{"gitID":"-"},"content":"     * Returns a {@code SelectCommand} with parameters {@code index}."},{"lineNumber":189,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":190,"author":{"gitID":"-"},"content":"    private SelectCommand prepareCommand(Index index) {"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(index);"},{"lineNumber":192,"author":{"gitID":"qiu-siqi"},"content":"        selectCommand.setData(model, new CommandHistory(), new UndoStack());"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        return selectCommand;"},{"lineNumber":194,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":40,"takuyakanbr":47,"-":108}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class JsonUserPrefsStorageTest {"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"./src/test/data/JsonUserPrefsStorageTest/\");"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() throws DataConversionException {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        readUserPrefs(null);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        String prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() throws DataConversionException {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        readUserPrefs(\"NotJsonFormatUserPrefs.json\");"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        /* IMPORTANT: Any code below an exception-throwing line (like the one above) will be ignored."},{"lineNumber":51,"author":{"gitID":"-"},"content":"         * That means you should not have more than one exception test in one method"},{"lineNumber":52,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    private String addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null"},{"lineNumber":57,"author":{"gitID":"-"},"content":"                ? TEST_DATA_FOLDER + userPrefsFileInTestDataFolder"},{"lineNumber":58,"author":{"gitID":"-"},"content":"                : null;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertEquals(expected, actual);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertEquals(new UserPrefs(), actual);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        assertEquals(expected, actual);"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        userPrefs.setGuiSettings(1000, 500, 300, 100);"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        userPrefs.setBookShelfFilePath(\"bookshelf.xml\");"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"        userPrefs.setBookShelfName(\"TypicalBookShelfName\");"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        return userPrefs;"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        saveUserPrefs(null, \"SomeFile.json\");"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        saveUserPrefs(new UserPrefs(), null);"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath."},{"lineNumber":104,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))"},{"lineNumber":108,"author":{"gitID":"-"},"content":"                    .saveUserPrefs(userPrefs);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":110,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":112,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"        UserPrefs original \u003d new UserPrefs();"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        original.setGuiSettings(1200, 200, 0, 2);"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"-"},"content":"        String pefsFilePath \u003d testFolder.getRoot() + File.separator + \"TempPrefs.json\";"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"        //Try writing when the file doesn\u0027t exist"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        assertEquals(original, readBack);"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        //Try saving when the file exists"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        original.setGuiSettings(5, 5, 5, 5);"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        assertEquals(original, readBack);"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":133}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static junit.framework.TestCase.assertNotNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class StorageManagerTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private StorageManager storageManager;"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        XmlBookShelfStorage bookShelfStorage \u003d new XmlBookShelfStorage(getTempFilePath(\"biblio\"));"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        XmlRecentBooksStorage recentBooksStorage \u003d new XmlRecentBooksStorage(getTempFilePath(\"recent\"));"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        storageManager \u003d new StorageManager(bookShelfStorage, userPrefsStorage, recentBooksStorage);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private String getTempFilePath(String fileName) {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        return testFolder.getRoot().getPath() + fileName;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public void prefsReadSave() throws Exception {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":46,"author":{"gitID":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the"},{"lineNumber":47,"author":{"gitID":"-"},"content":"         * {@link JsonUserPrefsStorage} class."},{"lineNumber":48,"author":{"gitID":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."},{"lineNumber":49,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        UserPrefs original \u003d new UserPrefs();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        original.setGuiSettings(300, 600, 4, 6);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        storageManager.saveUserPrefs(original);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        assertEquals(original, retrieved);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    public void bookShelfReadSave() throws Exception {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":60,"author":{"gitID":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"         * {@link XmlBookShelfStorage} class."},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"         * More extensive testing of BookShelf saving/reading is done in {@link XmlBookShelfStorageTest} class."},{"lineNumber":63,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf original \u003d getTypicalBookShelf();"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        storageManager.saveBookShelf(original);"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf retrieved \u003d storageManager.readBookShelf().get();"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(retrieved));"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    public void getBookShelfFilePath() {"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        assertNotNull(storageManager.getBookShelfFilePath());"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    public void handleBookShelfChangedEvent_exceptionThrown_eventRaised() {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        // Create a StorageManager while injecting a stub that  throws an exception when the save method is called"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        Storage storage \u003d new StorageManager(new XmlBookShelfStorageExceptionThrowingStub(\"dummy\"),"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"                new JsonUserPrefsStorage(\"dummy\"), new XmlRecentBooksStorage(\"dummy\"));"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        storage.handleBookShelfChangedEvent(new BookShelfChangedEvent(new BookShelf()));"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent() instanceof DataSavingExceptionEvent);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    public void recentBooksReadSave() throws Exception {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":87,"author":{"gitID":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"         * {@link XmlRecentBooksStorage} class."},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"         * More extensive testing of recent books saving/reading is done in"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"         * {@link XmlRecentBooksStorageTest} class."},{"lineNumber":91,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf original \u003d getTypicalBookShelf();"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"        storageManager.saveRecentBooksList(original);"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"        ReadOnlyBookShelf retrieved \u003d storageManager.readRecentBooksList().get();"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(retrieved));"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"    public void getRecentBooksFilePath() {"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"        assertNotNull(storageManager.getRecentBooksFilePath());"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":104,"author":{"gitID":"-"},"content":"     * A Stub class to throw an exception when the save method is called"},{"lineNumber":105,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"    class XmlBookShelfStorageExceptionThrowingStub extends XmlBookShelfStorage {"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"        public XmlBookShelfStorageExceptionThrowingStub(String filePath) {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"            super(filePath);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        public void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) throws IOException {"},{"lineNumber":114,"author":{"gitID":"-"},"content":"            throw new IOException(\"dummy exception\");"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":14,"takuyakanbr":21,"-":83}},{"path":"src/test/java/seedu/address/storage/XmlAdaptedBookTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.storage.XmlAdaptedBook.MISSING_FIELD_MESSAGE_FORMAT;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Gid;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Isbn;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.PublicationDate;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Publisher;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.book.Rating;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"public class XmlAdaptedBookTest {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_TITLE \u003d ARTEMIS.getTitle().toString();"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_DESCRIPTION \u003d ARTEMIS.getDescription().toString();"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    private static final List\u003cXmlAdaptedAuthor\u003e VALID_AUTHORS \u003d ARTEMIS.getAuthors().stream()"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"            .map(XmlAdaptedAuthor::new).collect(Collectors.toList());"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private static final List\u003cXmlAdaptedCategory\u003e VALID_CATEGORIES \u003d ARTEMIS.getCategories().stream()"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"            .map(XmlAdaptedCategory::new).collect(Collectors.toList());"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    private static final String VALID_GID \u003d ARTEMIS.getGid().toString();"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    private static final String VALID_ISBN \u003d ARTEMIS.getIsbn().toString();"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    private static final String VALID_PUBLISHER \u003d ARTEMIS.getPublisher().toString();"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"    private static final String VALID_PUBLICATION_DATE \u003d ARTEMIS.getPublicationDate().toString();"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_validBookDetails_returnsBook() throws Exception {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(ARTEMIS);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(ARTEMIS, book.toModelType());"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(VALID_GID, VALID_ISBN, null, VALID_DESCRIPTION,"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"                VALID_AUTHORS, VALID_CATEGORIES, VALID_PUBLISHER, VALID_PUBLICATION_DATE);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(VALID_GID, VALID_ISBN, VALID_TITLE, null,"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"                VALID_AUTHORS, VALID_CATEGORIES, VALID_PUBLISHER, VALID_PUBLICATION_DATE);"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public void toModelType_nullRating_throwsIllegalValueException() {"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(VALID_GID, VALID_ISBN, VALID_TITLE, VALID_DESCRIPTION,"},{"lineNumber":60,"author":{"gitID":"-"},"content":"                null, VALID_AUTHORS, VALID_CATEGORIES, VALID_PUBLISHER, VALID_PUBLICATION_DATE);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Rating.class.getSimpleName());"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"    public void toModelType_nullGid_throwsIllegalValueException() {"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(null, VALID_ISBN, VALID_TITLE, VALID_DESCRIPTION,"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"                VALID_AUTHORS, VALID_CATEGORIES, VALID_PUBLISHER, VALID_PUBLICATION_DATE);"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gid.class.getSimpleName());"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"    public void toModelType_nullIsbn_throwsIllegalValueException() {"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(VALID_GID, null, VALID_TITLE, VALID_DESCRIPTION,"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"                VALID_AUTHORS, VALID_CATEGORIES, VALID_PUBLISHER, VALID_PUBLICATION_DATE);"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Isbn.class.getSimpleName());"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"    public void toModelType_nullPublisher_throwsIllegalValueException() {"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(VALID_GID, VALID_ISBN, VALID_TITLE, VALID_DESCRIPTION,"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"                VALID_AUTHORS, VALID_CATEGORIES, null, VALID_PUBLICATION_DATE);"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Publisher.class.getSimpleName());"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"    public void toModelType_nullPublicationDate_throwsIllegalValueException() {"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(VALID_GID, VALID_ISBN, VALID_TITLE, VALID_DESCRIPTION,"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"                VALID_AUTHORS, VALID_CATEGORIES, VALID_PUBLISHER, null);"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PublicationDate.class.getSimpleName());"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":30,"takuyakanbr":53,"-":14}},{"path":"src/test/java/seedu/address/storage/XmlSerializableBookShelfTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.XmlUtil;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"public class XmlSerializableBookShelfTest {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"src/test/data/XmlSerializableBookShelfTest/\");"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private static final File TYPICAL_BOOKS_FILE \u003d new File(TEST_DATA_FOLDER + \"typicalBooksBookShelf.xml\");"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    private static final File INVALID_BOOK_FILE \u003d new File(TEST_DATA_FOLDER + \"invalidBookBookShelf.xml\");"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_typicalBooksFile_success() throws Exception {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf dataFromFile \u003d XmlUtil.getDataFromFile(TYPICAL_BOOKS_FILE,"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"                XmlSerializableBookShelf.class);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf addressBookFromFile \u003d dataFromFile.toModelType();"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf typicalBookShelf \u003d TypicalBooks.getTypicalBookShelf();"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(addressBookFromFile, typicalBookShelf);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_invalidBookFile_throwsIllegalValueException() throws Exception {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf dataFromFile \u003d XmlUtil.getDataFromFile(INVALID_BOOK_FILE,"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"                XmlSerializableBookShelf.class);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        dataFromFile.toModelType();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":21,"-":22}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.BABYLON_ASHES;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookShelfBuilder;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"public class ModelManagerTest {"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    public void getFilteredBookList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        ModelManager modelManager \u003d new ModelManager();"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        modelManager.getFilteredBookList().remove(0);"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public void getRecentBooksList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        ModelManager modelManager \u003d new ModelManager();"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        modelManager.getRecentBooksList().remove(0);"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf bookShelf \u003d new BookShelfBuilder().withBook(ARTEMIS).withBook(BABYLON_ASHES).build();"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf differentBookShelf \u003d new BookShelf();"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        ModelManager modelManager \u003d new ModelManager(bookShelf, userPrefs);"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(bookShelf, userPrefs);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        modelManager.updateSearchResults(bookShelf);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        modelManagerCopy.updateSearchResults(bookShelf);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        modelManager.addRecentBook(ARTEMIS);"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        modelManagerCopy.addRecentBook(ARTEMIS);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManager));"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(modelManager \u003d\u003d null);"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(5));"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"        // different bookShelf -\u003e returns false"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentBookShelf, userPrefs)));"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        // different searchResults -\u003e returns false"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(modelManager.equals(new ModelManager(bookShelf, userPrefs)));"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        // different recentBooks -\u003e returns false"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        modelManagerCopy.addRecentBook(BABYLON_ASHES);"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(modelManager.equals(modelManagerCopy));"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        // resets modelManager to initial state for upcoming tests"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"        modelManager.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"        // different userPrefs -\u003e returns true"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"        differentUserPrefs.setBookShelfName(\"differentName\");"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        ModelManager modelManagerDiffPrefs \u003d new ModelManager(bookShelf, differentUserPrefs);"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(modelManagerDiffPrefs.equals(new ModelManager(bookShelf, new UserPrefs())));"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":27,"takuyakanbr":6,"-":49}},{"path":"src/test/java/seedu/address/model/book/AuthorTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class AuthorTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Author(null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Author(\"Author 1\").hashCode(), new Author(\"Author 1\").hashCode());"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Author(\"Author x\").hashCode(), new Author(\"Author x\").hashCode());"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":7}},{"path":"src/test/java/seedu/address/model/UniqueListTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.exceptions.DuplicateDataException;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"public class UniqueListTest {"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public void add_validItem_success() throws Exception {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 2\"));"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 3\"));"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(3, uniqueList.toSet().size());"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    public void add_duplicateItem_throwsDuplicateDataException() throws Exception {"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 2\"));"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(DuplicateDataException.class);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public void add_null_throwsNullPointerException() throws Exception {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(null);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public void toSet_modifyList_doesNotMutateList() throws Exception {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cCategory\u003e set \u003d uniqueList.toSet();"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        set.add(new Category(\"Cat 2\"));"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(1, uniqueList.toSet().size());"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        set.remove(new Category(\"Cat 1\"));"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(1, uniqueList.toSet().size());"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    public void setItems_modifyList_success() throws Exception {"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e replacement \u003d new UniqueList\u003c\u003e();"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        replacement.add(new Category(\"Cat 2\"));"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        replacement.add(new Category(\"Cat 3\"));"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.setItems(replacement.toSet());"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(2, uniqueList.toSet().size());"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueList.contains(new Category(\"Cat 2\")));"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(false, uniqueList.contains(new Category(\"Cat 1\")));"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    public void setItems_null_throwsNullPointerException() {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.setItems(null);"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    public void mergeFrom_modifyList_success() throws Exception {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e toMerge \u003d new UniqueList\u003c\u003e();"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        toMerge.add(new Category(\"Cat 2\"));"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        toMerge.add(new Category(\"Cat 3\"));"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.mergeFrom(toMerge);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(3, uniqueList.toSet().size());"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueList.contains(new Category(\"Cat 2\")));"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueList.contains(new Category(\"Cat 1\")));"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    public void mergeFrom_null_throwsNullPointerException() {"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.mergeFrom(null);"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.asObservableList().remove(0);"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"    public void equals_sameContent_returnsTrue() throws Exception {"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList2 \u003d new UniqueList\u003c\u003e();"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList2.add(new Category(\"Cat 1\"));"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueList.equals(uniqueList2));"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() throws Exception {"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList2 \u003d new UniqueList\u003c\u003e();"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList2.add(new Category(\"Cat 1\"));"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(uniqueList.hashCode(), uniqueList2.hashCode());"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":110,"-":9}},{"path":"src/test/java/seedu/address/model/book/RatingTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class RatingTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Rating(null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        assertEquals(new Rating(-1).hashCode(), new Rating(-1).hashCode());"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        assertEquals(new Rating(0).hashCode(), new Rating(0).hashCode());"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":8,"-":13}},{"path":"src/test/java/seedu/address/storage/XmlBookShelfStorageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.BABYLON_ASHES;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"public class XmlBookShelfStorageTest {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"./src/test/data/XmlBookShelfStorageTest/\");"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public void readBookShelf_nullFilePath_throwsNullPointerException() throws Exception {"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        readBookShelf(null);"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    private java.util.Optional\u003cReadOnlyBookShelf\u003e readBookShelf(String filePath) throws Exception {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        return new XmlBookShelfStorage(filePath).readBookShelf(addToTestDataPathIfNotNull(filePath));"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private String addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null"},{"lineNumber":42,"author":{"gitID":"-"},"content":"                ? TEST_DATA_FOLDER + prefsFileInTestDataFolder"},{"lineNumber":43,"author":{"gitID":"-"},"content":"                : null;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(readBookShelf(\"NonExistentFile.xml\").isPresent());"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public void read_notXmlFormat_exceptionThrown() throws Exception {"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        readBookShelf(\"NotXmlFormatBookShelf.xml\");"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        /* IMPORTANT: Any code below an exception-throwing line (like the one above) will be ignored."},{"lineNumber":58,"author":{"gitID":"-"},"content":"         * That means you should not have more than one exception test in one method"},{"lineNumber":59,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    public void readBookShelf_invalidBookBookShelf_throwDataConversionException() throws Exception {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        readBookShelf(\"invalidBookBookShelf.xml\");"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"    public void readBookShelf_invalidAndValidBookBookShelf_throwDataConversionException() throws Exception {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        readBookShelf(\"invalidAndValidBookBookShelf.xml\");"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    public void readAndSaveBookShelf_allInOrder_success() throws Exception {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        String filePath \u003d testFolder.getRoot().getPath() + \"TempBookShelf.xml\";"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf original \u003d getTypicalBookShelf();"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        XmlBookShelfStorage xmlBookShelfStorage \u003d new XmlBookShelfStorage(filePath);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        //Save in new file and read back"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        xmlBookShelfStorage.saveBookShelf(original, filePath);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf readBack \u003d xmlBookShelfStorage.readBookShelf(filePath).get();"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(readBack));"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"        //Modify data, overwrite exiting file, and read back"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        original.removeBook(ARTEMIS);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        original.addBook(ARTEMIS);"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        original.removeBook(BABYLON_ASHES);"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        xmlBookShelfStorage.saveBookShelf(original, filePath);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        readBack \u003d xmlBookShelfStorage.readBookShelf(filePath).get();"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(readBack));"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"        //Save and read without specifying file path"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        original.addBook(BABYLON_ASHES);"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        xmlBookShelfStorage.saveBookShelf(original); //file path not specified"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        readBack \u003d xmlBookShelfStorage.readBookShelf().get(); //file path not specified"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(readBack));"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf_nullBookShelf_throwsNullPointerException() {"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        saveBookShelf(null, \"SomeFile.xml\");"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"     * Saves {@code bookShelf} at the specified {@code filePath}."},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"    private void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) {"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"            new XmlBookShelfStorage(filePath).saveBookShelf(bookShelf, addToTestDataPathIfNotNull(filePath));"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":114,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf_nullFilePath_throwsNullPointerException() throws IOException {"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"        saveBookShelf(new BookShelf(), null);"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":70,"-":55}},{"path":"src/test/java/seedu/address/model/book/BookTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class BookTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(null, null,"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"                null, null, null, null, null, null));"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(null, new Isbn(\"\"),"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"                Collections.emptySet(), new Title(\"\"), Collections.emptySet(),"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"\"), new Publisher(\"\"), new PublicationDate(\"\")));"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(new Gid(\"\"), null,"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"                Collections.emptySet(), new Title(\"\"), Collections.emptySet(),"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"\"), new Publisher(\"\"), new PublicationDate(\"\")));"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(new Gid(\"\"), new Isbn(\"\"),"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"                null, new Title(\"\"), Collections.emptySet(),"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"\"), new Publisher(\"\"), new PublicationDate(\"\")));"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(new Gid(\"\"), new Isbn(\"\"),"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"                Collections.emptySet(), null, Collections.emptySet(),"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"\"), new Publisher(\"\"), new PublicationDate(\"\")));"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(new Gid(\"\"), new Isbn(\"\"),"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"                Collections.emptySet(), new Title(\"\"), null,"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"\"), new Publisher(\"\"), new PublicationDate(\"\")));"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(new Gid(\"\"), new Isbn(\"\"),"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"                Collections.emptySet(), new Title(\"\"), Collections.emptySet(),"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"                null, new Publisher(\"\"), new PublicationDate(\"\")));"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(new Gid(\"\"), new Isbn(\"\"),"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"                Collections.emptySet(), new Title(\"\"), Collections.emptySet(),"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"\"), null, new PublicationDate(\"\")));"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(new Gid(\"\"), new Isbn(\"\"),"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"                Collections.emptySet(), new Title(\"\"), Collections.emptySet(),"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"\"), new Publisher(\"\"), null));"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":34,"takuyakanbr":7,"-":8}},{"path":"src/test/java/seedu/address/model/book/DescriptionTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class DescriptionTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Description(null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Description(\"Desc 1\").hashCode(), new Description(\"Desc 1\").hashCode());"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Description(\"Desc x\").hashCode(), new Description(\"Desc x\").hashCode());"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":7}},{"path":"src/test/java/seedu/address/model/book/CategoryTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class CategoryTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Category(null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Category(\"Category 1\").hashCode(), new Category(\"Category 1\").hashCode());"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Category(\"Category x\").hashCode(), new Category(\"Category x\").hashCode());"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":7}},{"path":"src/test/java/seedu/address/model/book/UniqueBookListTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"public class UniqueBookListTest {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_validTargetAndReplacement_success() throws Exception {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(TypicalBooks.ARTEMIS, TypicalBooks.BABYLON_ASHES);"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(false, uniqueBookList.contains(TypicalBooks.ARTEMIS));"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueBookList.contains(TypicalBooks.BABYLON_ASHES));"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_nonMatchingTarget_throwsBookNotFoundException() throws Exception {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(TypicalBooks.BABYLON_ASHES, TypicalBooks.WAKING_GODS);"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_nullTarget_throwsBookNotFoundException() throws Exception {"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(null, TypicalBooks.WAKING_GODS);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_nullReplacement_throwsNullPointerException() throws Exception {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(TypicalBooks.ARTEMIS, null);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_duplicateReplacement_throwsDuplicateBookException() throws Exception {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(DuplicateBookException.class);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(TypicalBooks.BABYLON_ASHES, TypicalBooks.ARTEMIS);"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    public void remove_validBook_success() throws Exception {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.remove(TypicalBooks.ARTEMIS);"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(0, uniqueBookList.toSet().size());"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    public void remove_nonMatchingBook_throwsBookNotFoundException() throws Exception {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.remove(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.asObservableList().remove(0);"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    public void equals_sameContent_returnsTrue() throws Exception {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList2 \u003d new UniqueBookList();"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList2.add(TypicalBooks.ARTEMIS);"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList2.add(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueBookList.equals(uniqueBookList2));"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":84,"-":9}},{"path":"src/test/java/seedu/address/model/book/TitleTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class TitleTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Title(null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Title(\"Title 1\").hashCode(), new Title(\"Title 1\").hashCode());"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Title(\"Title x\").hashCode(), new Title(\"Title x\").hashCode());"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":7}},{"path":"src/test/java/seedu/address/model/book/UniqueBookCircularListTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"public class UniqueBookCircularListTest {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    @Rule"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    public void addToFront_null_failure() throws Exception {"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList(5);"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(null);"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    public void addToFront_validBook_success() throws Exception {"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList();"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(true, uniqueBookCircularList.asObservableList().contains(TypicalBooks.ARTEMIS));"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    public void addToFront_repeatedBook_success() throws Exception {"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList(5);"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        ObservableList\u003cBook\u003e list \u003d uniqueBookCircularList.asObservableList();"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(true, list.contains(TypicalBooks.ARTEMIS));"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(1, list.size());"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"    public void addToFront_latestBookAtFront_success() throws Exception {"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList(5);"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        ObservableList\u003cBook\u003e list \u003d uniqueBookCircularList.asObservableList();"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(TypicalBooks.BABYLON_ASHES, list.get(0));"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"    public void addToFront_repeatedBookBroughtToFront_success() throws Exception {"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList(5);"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        ObservableList\u003cBook\u003e list \u003d uniqueBookCircularList.asObservableList();"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(2, list.size());"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(TypicalBooks.ARTEMIS, list.get(0));"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(TypicalBooks.BABYLON_ASHES, list.get(1));"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"    public void addToFront_tooManyBooks_success() throws Exception {"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList(2);"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.COLLAPSING_EMPIRE);"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        ObservableList\u003cBook\u003e list \u003d uniqueBookCircularList.asObservableList();"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(2, list.size()); // max size 2"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(false, list.contains(TypicalBooks.ARTEMIS)); // replaced"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(true, list.contains(TypicalBooks.BABYLON_ASHES));"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(true, list.contains(TypicalBooks.COLLAPSING_EMPIRE));"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList(5);"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.asObservableList().remove(0);"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"    public void equals_sameObject_returnsTrue() throws Exception {"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList(5);"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(true, uniqueBookCircularList.equals(uniqueBookCircularList));"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"    public void equals_sameContentSameOrder_returnsTrue() throws Exception {"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList(5);"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList2 \u003d new UniqueBookCircularList(5);"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList2.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList2.addToFront(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(true, uniqueBookCircularList.equals(uniqueBookCircularList2));"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"    public void equals_sameContentDifferentOrder_returnsFalse() throws Exception {"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList \u003d new UniqueBookCircularList(5);"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList.addToFront(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"        UniqueBookCircularList uniqueBookCircularList2 \u003d new UniqueBookCircularList(5);"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList2.addToFront(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"        uniqueBookCircularList2.addToFront(TypicalBooks.ARTEMIS);"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(false, uniqueBookCircularList.equals(uniqueBookCircularList2));"},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":98,"takuyakanbr":10,"-":7}},{"path":"src/test/java/seedu/address/testutil/BookShelfBuilder.java","lines":[{"lineNumber":1,"author":{"gitID":"qiu-siqi"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" * A utility class to help with building BookShelf objects."},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":" * Example usage: \u003cbr\u003e"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":" *     {@code BookShelf bs \u003d new BookShelfBuilder().withBook(new Book(...)).build();}"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"public class BookShelfBuilder {"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    private BookShelf bookShelf;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelfBuilder() {"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"        bookShelf \u003d new BookShelf();"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelfBuilder(BookShelf bookShelf) {"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"        this.bookShelf \u003d bookShelf;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"     * Adds a new {@code Book} to the {@code BookShelf} that we are building."},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelfBuilder withBook(Book book) {"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"            bookShelf.addBook(book);"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        } catch (DuplicateBookException dpe) {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"            throw new IllegalArgumentException(\"book is expected to be unique.\");"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        return this;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelf build() {"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        return bookShelf;"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":34,"takuyakanbr":5}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests."},{"lineNumber":7,"author":{"gitID":"-"},"content":" */"},{"lineNumber":8,"author":{"gitID":"-"},"content":"public class TypicalIndexes {"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"    public static final Index INDEX_FIRST_BOOK \u003d Index.fromOneBased(1);"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"    public static final Index INDEX_SECOND_BOOK \u003d Index.fromOneBased(2);"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public static final Index INDEX_THIRD_BOOK \u003d Index.fromOneBased(3);"},{"lineNumber":12,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/SearchDescriptorBuilder.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand.SearchDescriptor;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * A utility class to help with building SearchDescriptor objects."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class SearchDescriptorBuilder {"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"    private SearchDescriptor descriptor;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public SearchDescriptorBuilder() {"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"        descriptor \u003d new SearchDescriptor();"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    public SearchDescriptorBuilder(SearchDescriptor descriptor) {"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"        this.descriptor \u003d new SearchDescriptor(descriptor);"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"     * Sets the {@code searchTerm} of the {@code SearchDescriptor} that we are building."},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    public SearchDescriptorBuilder withSearchTerm(String searchTerm) {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        descriptor.setSearchTerm(searchTerm);"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"     * Sets the {@code isbn} of the {@code SearchDescriptor} that we are building."},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    public SearchDescriptorBuilder withIsbn(String isbn) {"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        descriptor.setIsbn(isbn);"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"     * Sets the {@code title} of the {@code SearchDescriptor} that we are building."},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public SearchDescriptorBuilder withTitle(String title) {"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        descriptor.setTitle(title);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"     * Sets the {@code author} of the {@code SearchDescriptor} that we are building."},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    public SearchDescriptorBuilder withAuthor(String author) {"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        descriptor.setAuthor(author);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"     * Sets the {@code category} of the {@code SearchDescriptor} that we are building."},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    public SearchDescriptorBuilder withCategory(String category) {"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        descriptor.setCategory(category);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    public SearchDescriptor build() {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        return descriptor;"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":62}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * A utility class for test cases."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class TestUtil {"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private static final String SANDBOX_FOLDER \u003d FileUtil.getPath(\"./src/test/data/sandbox/\");"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting string."},{"lineNumber":23,"author":{"gitID":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public static String getFilePathInSandboxFolder(String fileName) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"            FileUtil.createDirs(new File(SANDBOX_FOLDER));"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return SANDBOX_FOLDER + fileName;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the middle index of the book in the {@code model}\u0027s book list."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public static Index getMidIndex(Model model) {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        return Index.fromOneBased(model.getBookShelf().getBookList().size() / 2);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the last index of the book in the {@code model}\u0027s book list."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public static Index getLastIndex(Model model) {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        return Index.fromOneBased(model.getBookShelf().getBookList().size());"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the book in the {@code model}\u0027s book list at {@code index}."},{"lineNumber":50,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    public static Book getBook(Model model, Index index) {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        return model.getBookShelf().getBookList().get(index.getZeroBased());"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":8,"-":46}},{"path":"src/test/java/seedu/address/testutil/BookBuilder.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Gid;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Isbn;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.PublicationDate;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Publisher;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.book.Rating;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.util.BookDataUtil;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":" * A utility class to help with building Book objects."},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"public class BookBuilder {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DEFAULT_AUTHOR \u003d \"Andy Weir\";"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DEFAULT_TITLE \u003d \"Artemis\";"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DEFAULT_CATEGORY \u003d \"Science Fiction\";"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"This is a description for Artemis.\";"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public static final int DEFAULT_RATING \u003d -1;"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    public static final String DEFAULT_ID \u003d \"ry3GjwEACAAJ\";"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    public static final String DEFAULT_ISBN \u003d \"9780525572664\";"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    public static final String DEFAULT_PUBLISHER \u003d \"Someone\";"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    public static final String DEFAULT_PUBLICATION_DATE \u003d \"2017-11-14\";"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    private Set\u003cAuthor\u003e authors;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    private Title title;"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    private Set\u003cCategory\u003e categories;"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    private Description description;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private Rating rating;"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    private Gid gid;"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"    private Isbn isbn;"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"    private PublicationDate publicationDate;"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"    private Publisher publisher;"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder() {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        authors \u003d Collections.singleton(new Author(DEFAULT_AUTHOR));"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        title \u003d new Title(DEFAULT_TITLE);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        categories \u003d Collections.singleton(new Category(DEFAULT_CATEGORY));"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        rating \u003d new Rating(DEFAULT_RATING);"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        gid \u003d new Gid(DEFAULT_ID);"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        isbn \u003d new Isbn(DEFAULT_ISBN);"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        publicationDate \u003d new PublicationDate(DEFAULT_PUBLICATION_DATE);"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        publisher \u003d new Publisher(DEFAULT_PUBLISHER);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"     * Initializes the BookBuilder with the data of {@code bookToCopy}."},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder(Book bookToCopy) {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        authors \u003d new HashSet\u003c\u003e(bookToCopy.getAuthors());"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        title \u003d bookToCopy.getTitle();"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        categories \u003d new HashSet\u003c\u003e(bookToCopy.getCategories());"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        description \u003d bookToCopy.getDescription();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        rating \u003d bookToCopy.getRating();"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"     * Parses the {@code authors} into a {@code Set\u003cAuthor\u003e} and set it to the {@code Book} that we are building."},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder withAuthors(String... authors) {"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        this.authors \u003d BookDataUtil.getAuthorSet(authors);"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"     * Sets the {@code Title} of the {@code Book} that we are building."},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder withTitle(String title) {"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d new Title(title);"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"     * Parses the {@code categories} into a {@code Set\u003cCategory\u003e} and set it to the {@code Book} that we are building."},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder withCategories(String... categories) {"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        this.categories \u003d BookDataUtil.getCategorySet(categories);"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"     * Sets the {@code Description} of the {@code Book} that we are building."},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder withDescription(String description) {"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d new Description(description);"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":100,"author":{"gitID":"-"},"content":"     * Sets the {@code Rating} of the {@code Book} that we are building."},{"lineNumber":101,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    public BookBuilder withRating(int rating) {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        this.rating \u003d new Rating(rating);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        return this;"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"     * Sets the {@code Gid} of the {@code Book} that we are building."},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"    public BookBuilder withGid(String gid) {"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"        this.gid \u003d new Gid(gid);"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"        return this;"},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"     * Sets the {@code Isbn} of the {@code Book} that we are building."},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"    public BookBuilder withIsbn(String isbn) {"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"        this.isbn \u003d new Isbn(isbn);"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"        return this;"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"     * Sets the {@code Publisher} of the {@code Book} that we are building."},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"    public BookBuilder withPublisher(String publisher) {"},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":"        this.publisher \u003d new Publisher(publisher);"},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":"        return this;"},{"lineNumber":129,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":131,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":132,"author":{"gitID":"qiu-siqi"},"content":"     * Sets the {@code PublicationDate} of the {@code Book} that we are building."},{"lineNumber":133,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":134,"author":{"gitID":"qiu-siqi"},"content":"    public BookBuilder withPublicationDate(String date) {"},{"lineNumber":135,"author":{"gitID":"qiu-siqi"},"content":"        this.publicationDate \u003d new PublicationDate(date);"},{"lineNumber":136,"author":{"gitID":"qiu-siqi"},"content":"        return this;"},{"lineNumber":137,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":139,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":140,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a new {@code Book} object."},{"lineNumber":141,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":142,"author":{"gitID":"takuyakanbr"},"content":"    public Book build() {"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        return new Book(gid, isbn, authors, title, categories, description, rating,"},{"lineNumber":144,"author":{"gitID":"qiu-siqi"},"content":"                publisher, publicationDate);"},{"lineNumber":145,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":146,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":147,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":52,"takuyakanbr":79,"-":16}},{"path":"src/test/java/seedu/address/testutil/TypicalBooks.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" * A utility class containing a list of {@code Book} objects to be used in tests."},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"public class TypicalBooks {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book ARTEMIS \u003d new BookBuilder().withAuthors(\"Andy Weir\").withTitle(\"Artemis\")"},{"lineNumber":17,"author":{"gitID":"-"},"content":"            .withCategories(\"Fiction\").withDescription(\"This is Artemis.\").withRating(-1).withGid(\"ry3GjwEACAAJ\")"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"            .withIsbn(\"9780525572664\").withPublisher(\"\").withPublicationDate(\"2017-11-14\").build();"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book BABYLON_ASHES \u003d new BookBuilder().withAuthors(\"James S. A. Corey\")"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"            .withTitle(\"Babylon\u0027s Ashes\").withCategories(\"Fiction\").withDescription(\"This is Babylon\u0027s Ashes.\")"},{"lineNumber":21,"author":{"gitID":"-"},"content":"            .withRating(-1).withGid(\"3jsYCwAAQBAJ\").withIsbn(\"9780316217637\").withPublisher(\"Orbit\")"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"            .withPublicationDate(\"2016-12-06\").build();"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book COLLAPSING_EMPIRE \u003d new BookBuilder().withAuthors(\"John Scalzi\")"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"            .withTitle(\"The Collapsing Empire\").withCategories(\"Fiction\")"},{"lineNumber":25,"author":{"gitID":"-"},"content":"            .withDescription(\"This is The Collapsing Empire.\").withRating(-1).withGid(\"2SoaDAAAQBAJ\")"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"            .withIsbn(\"9780765388896\").withPublisher(\"Tor Books\").withPublicationDate(\"2017-03-21\").build();"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book CONSIDER_PHLEBAS \u003d new BookBuilder().withAuthors(\"Iain M. Banks\")"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"            .withTitle(\"Consider Phlebas\").withCategories(\"Fiction\", \"Science Fiction\")"},{"lineNumber":29,"author":{"gitID":"-"},"content":"            .withDescription(\"This is Consider Phlebas.\").withRating(-1).withGid(\"3_bJKlAOecEC\")"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"            .withIsbn(\"9780316095839\").withPublicationDate(\"2009-12-01\").withPublisher(\"Orbit\").build();"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book WAKING_GODS \u003d new BookBuilder().withAuthors(\"Sylvain Neuvel\").withTitle(\"Waking Gods\")"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"            .withCategories(\"Fiction\", \"Science Fiction\").withDescription(\"This is Waking Gods.\")"},{"lineNumber":33,"author":{"gitID":"-"},"content":"            .withRating(-1).withGid(\"CIj1DAAAQBAJ\").withIsbn(\"9781405921909\").withPublisher(\"Penguin UK\")"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"            .withPublicationDate(\"2017-04-06\").build();"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    private TypicalBooks() {} // prevents instantiation"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an {@code BookShelf} with all the typical books."},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    public static BookShelf getTypicalBookShelf() {"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d new BookShelf();"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        for (Book book : getTypicalBooks()) {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"            try {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"                bookShelf.addBook(book);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"            } catch (DuplicateBookException e) {"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"                throw new AssertionError(\"not possible\");"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"            }"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelf;"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    public static List\u003cBook\u003e getTypicalBooks() {"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ARTEMIS, BABYLON_ASHES,"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"                COLLAPSING_EMPIRE, CONSIDER_PHLEBAS, WAKING_GODS));"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":7,"takuyakanbr":41,"-":9}},{"path":"src/test/java/seedu/address/model/BookShelfTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.BABYLON_ASHES;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.WAKING_GODS;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"public class BookShelfTest {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private BookShelf bookShelf;"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    @Before"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    public void setUp() {"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf \u003d new BookShelf();"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public void constructor() {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Collections.emptyList(), bookShelf.getBookList());"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public void resetData_null_throwsNullPointerException() {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.resetData(null);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    public void resetData_withValidReadOnlyBookShelf_replacesData() {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf newData \u003d getTypicalBookShelf();"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.resetData(newData);"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(newData, bookShelf);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public void resetData_withDuplicatePersons_throwsAssertionError() {"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        // Repeat ARTEMIS twice"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        List\u003cBook\u003e newBooks \u003d Arrays.asList(ARTEMIS, ARTEMIS);"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        BookShelfStub newData \u003d new BookShelfStub(newBooks);"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(AssertionError.class);"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.resetData(newData);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook_validTargetAndReplacement_success() throws Exception {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(ARTEMIS, BABYLON_ASHES);"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(false, bookShelf.getBookList().contains(ARTEMIS));"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, bookShelf.getBookList().contains(BABYLON_ASHES));"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook_nonMatchingTarget_throwsBookNotFoundException() throws Exception {"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(BABYLON_ASHES, WAKING_GODS);"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook_nullTarget_throwsBookNotFoundException() throws Exception {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(null, WAKING_GODS);"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook_nullReplacement_throwsNullPointerException() throws Exception {"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(ARTEMIS, null);"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"    public void removeBook_validBook_success() throws Exception {"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.removeBook(ARTEMIS);"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(0, bookShelf.getBookList().size());"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    public void removeBook_nonMatchingBook_throwsBookNotFoundException() throws Exception {"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.removeBook(BABYLON_ASHES);"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"    public void getBookList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.getBookList().remove(0);"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"     * A stub ReadOnlyBookShelf whose book list can violate interface constraints."},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"    private static class BookShelfStub implements ReadOnlyBookShelf {"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"        private final ObservableList\u003cBook\u003e books \u003d FXCollections.observableArrayList();"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"        BookShelfStub(Collection\u003cBook\u003e books) {"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"            this.books.setAll(books);"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":"        @Override"},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"        public ObservableList\u003cBook\u003e getBookList() {"},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"            return books;"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":101,"-":28}},{"path":"src/test/java/guitests/guihandles/MainWindowHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import guitests.guihandles.exceptions.StylesheetNotFoundException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"-"},"content":" * Provides a handle for {@code MainWindow}."},{"lineNumber":10,"author":{"gitID":"-"},"content":" */"},{"lineNumber":11,"author":{"gitID":"-"},"content":"public class MainWindowHandle extends StageHandle {"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    private final Scene scene;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    private final BookListPanelHandle bookListPanel;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    private final SearchResultsPanelHandle searchResultsPanel;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    private final RecentBooksPanelHandle recentBooksPanel;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private final ResultDisplayHandle resultDisplay;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    private final CommandBoxHandle commandBox;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private final StatusBarFooterHandle statusBarFooter;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private final MainMenuHandle mainMenu;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    private final BookDetailsPanelHandle bookDetailsPanel;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public MainWindowHandle(Stage stage) {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        super(stage);"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"        scene \u003d stage.getScene();"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"        bookListPanel \u003d new BookListPanelHandle(getChildNode(BookListPanelHandle.BOOK_LIST_VIEW_ID));"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        searchResultsPanel \u003d"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"                new SearchResultsPanelHandle(getChildNode(SearchResultsPanelHandle.SEARCH_RESULTS_LIST_VIEW_ID));"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksPanel \u003d new RecentBooksPanelHandle(getChildNode(RecentBooksPanelHandle.RECENT_BOOKS_LIST_VIEW_ID));"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        resultDisplay \u003d new ResultDisplayHandle(getChildNode(ResultDisplayHandle.RESULT_DISPLAY_ID));"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        commandBox \u003d new CommandBoxHandle(getChildNode(CommandBoxHandle.COMMAND_INPUT_FIELD_ID));"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        statusBarFooter \u003d new StatusBarFooterHandle(getChildNode(StatusBarFooterHandle.STATUS_BAR_PLACEHOLDER));"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        mainMenu \u003d new MainMenuHandle(getChildNode(MainMenuHandle.MENU_BAR_ID));"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        bookDetailsPanel \u003d new BookDetailsPanelHandle(getChildNode(BookDetailsPanelHandle.BOOK_DETAILS_PANE_ID));"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    public BookListPanelHandle getBookListPanel() {"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        return bookListPanel;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    public SearchResultsPanelHandle getSearchResultsPanel() {"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        return searchResultsPanel;"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"    public RecentBooksPanelHandle getRecentBooksPanel() {"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        return recentBooksPanel;"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        return resultDisplay;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public CommandBoxHandle getCommandBox() {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        return commandBox;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        return statusBarFooter;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public MainMenuHandle getMainMenu() {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        return mainMenu;"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    public BookDetailsPanelHandle getBookDetailsPanel() {"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        return bookDetailsPanel;"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    public String getActiveStylesheet() {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        if (scene.getStylesheets().size() \u003d\u003d 0) {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"            throw new StylesheetNotFoundException();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        return scene.getStylesheets().get(0);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":10,"takuyakanbr":12,"-":54}},{"path":"src/test/java/seedu/address/storage/XmlRecentBooksStorageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.BABYLON_ASHES;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"public class XmlRecentBooksStorageTest {"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    private static final String TEST_DATA_FOLDER \u003d"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"            FileUtil.getPath(\"./src/test/data/XmlBookShelfStorageTest/\");"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    public void readRecentBooksList_nullFilePath_throwsNullPointerException() throws Exception {"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        readRecentBooksList(null);"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    private java.util.Optional\u003cReadOnlyBookShelf\u003e readRecentBooksList(String filePath) throws Exception {"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        return new XmlRecentBooksStorage(filePath).readRecentBooksList(addToTestDataPathIfNotNull(filePath));"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    private String addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null"},{"lineNumber":43,"author":{"gitID":"-"},"content":"                ? TEST_DATA_FOLDER + prefsFileInTestDataFolder"},{"lineNumber":44,"author":{"gitID":"-"},"content":"                : null;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(readRecentBooksList(\"NonExistentFile.xml\").isPresent());"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public void read_notXmlFormat_exceptionThrown() throws Exception {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        readRecentBooksList(\"NotXmlFormatBookShelf.xml\");"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"    public void readRecentBooksList_invalidBookBookShelf_throwDataConversionException() throws Exception {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        readRecentBooksList(\"invalidBookBookShelf.xml\");"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"    public void readRecentBooksList_invalidAndValidBookBookShelf_throwDataConversionException() throws Exception {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        readRecentBooksList(\"invalidAndValidBookBookShelf.xml\");"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"    public void readAndSaveRecentBooksList_allInOrder_success() throws Exception {"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        String filePath \u003d testFolder.getRoot().getPath() + \"TempRecentBooksData.xml\";"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf original \u003d getTypicalBookShelf();"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"        XmlRecentBooksStorage xmlRecentBooksStorage \u003d new XmlRecentBooksStorage(filePath);"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"        //Save in new file and read back"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"        xmlRecentBooksStorage.saveRecentBooksList(original, filePath);"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"        ReadOnlyBookShelf readBack \u003d xmlRecentBooksStorage.readRecentBooksList(filePath).get();"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(readBack));"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        //Modify data, overwrite exiting file, and read back"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        original.removeBook(ARTEMIS);"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        original.addBook(ARTEMIS);"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        original.removeBook(BABYLON_ASHES);"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        xmlRecentBooksStorage.saveRecentBooksList(original, filePath);"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"        readBack \u003d xmlRecentBooksStorage.readRecentBooksList(filePath).get();"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(readBack));"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        //Save and read without specifying file path"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        original.addBook(BABYLON_ASHES);"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        xmlRecentBooksStorage.saveRecentBooksList(original); //file path not specified"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"        readBack \u003d xmlRecentBooksStorage.readRecentBooksList().get(); //file path not specified"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(readBack));"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"    public void saveRecentBooksList_nullBookShelf_throwsNullPointerException() {"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"        saveRecentBooksList(null, \"SomeFile.xml\");"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"     * Saves {@code recentBooksData} at the specified {@code filePath}."},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"    private void saveRecentBooksList(ReadOnlyBookShelf recentBooksData, String filePath) {"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"            new XmlRecentBooksStorage(filePath).saveRecentBooksList(recentBooksData,"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"                    addToTestDataPathIfNotNull(filePath));"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":111,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"    public void saveRecentBooksList_nullFilePath_throwsNullPointerException() throws IOException {"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"        saveRecentBooksList(new BookShelf(), null);"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":55,"takuyakanbr":19,"-":47}},{"path":"src/test/java/guitests/guihandles/BookCardHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * Provides a handle to a person card in the person list panel."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"public class BookCardHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    private static final String TITLE_FIELD_ID \u003d \"#title\";"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    private static final String AUTHORS_FIELD_ID \u003d \"#authors\";"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    private static final String CATEGORIES_FIELD_ID \u003d \"#categories\";"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"    private final Label idLabel;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    private final Label titleLabel;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    private final List\u003cLabel\u003e authorsLabel;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    private final List\u003cLabel\u003e categoriesLabel;"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle(Node cardNode) {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        super(cardNode);"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"        this.idLabel \u003d getChildNode(ID_FIELD_ID);"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        this.titleLabel \u003d getChildNode(TITLE_FIELD_ID);"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        Region authorsContainer \u003d getChildNode(AUTHORS_FIELD_ID);"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        this.authorsLabel \u003d authorsContainer"},{"lineNumber":32,"author":{"gitID":"-"},"content":"                .getChildrenUnmodifiable()"},{"lineNumber":33,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":34,"author":{"gitID":"-"},"content":"                .map(Label.class::cast)"},{"lineNumber":35,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        Region categoriesContainer \u003d getChildNode(CATEGORIES_FIELD_ID);"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        this.categoriesLabel \u003d categoriesContainer"},{"lineNumber":39,"author":{"gitID":"-"},"content":"                .getChildrenUnmodifiable()"},{"lineNumber":40,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":41,"author":{"gitID":"-"},"content":"                .map(Label.class::cast)"},{"lineNumber":42,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public String getId() {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        return idLabel.getText();"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"    public String getTitle() {"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        return titleLabel.getText();"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"    public List\u003cString\u003e getAuthors() {"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        return authorsLabel"},{"lineNumber":55,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":56,"author":{"gitID":"-"},"content":"                .map(Label::getText)"},{"lineNumber":57,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    public List\u003cString\u003e getCategories() {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        return categoriesLabel"},{"lineNumber":62,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":63,"author":{"gitID":"-"},"content":"                .map(Label::getText)"},{"lineNumber":64,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":28,"-":38}},{"path":"src/test/java/guitests/guihandles/BookListPanelHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.ui.BookCard;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":" * Provides a handle for {@code BookListPanel} containing the list of {@code BookCard}."},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"public class BookListPanelHandle extends NodeHandle\u003cListView\u003cBookCard\u003e\u003e {"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    public static final String BOOK_LIST_VIEW_ID \u003d \"#bookListView\";"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    private Optional\u003cBookCard\u003e lastRememberedSelectedBookCard;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    public BookListPanelHandle(ListView\u003cBookCard\u003e bookListPanelNode) {"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        super(bookListPanelNode);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a handle to the selected {@code BookCardHandle}."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * A maximum of 1 item can be selected at any time."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * @throws AssertionError if no card is selected, or more than 1 card is selected."},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getHandleToSelectedCard() {"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e bookList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        if (bookList.size() !\u003d 1) {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"            throw new AssertionError(\"Book list size expected 1.\");"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        return new BookCardHandle(bookList.get(0).getRoot());"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * Returns the index of the selected card."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public int getSelectedCardIndex() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return getRootNode().getSelectionModel().getSelectedIndex();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * Returns true if a card is currently selected."},{"lineNumber":46,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public boolean isAnyCardSelected() {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedCardsList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        if (selectedCardsList.size() \u003e 1) {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Card list size expected 0 or 1.\");"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return !selectedCardsList.isEmpty();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"     * Navigates the listview to display and select the book."},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    public void navigateToCard(Book book) {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e cards \u003d getRootNode().getItems();"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cBookCard\u003e matchingCard \u003d cards.stream().filter(card -\u003e card.book.equals(book)).findFirst();"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        if (!matchingCard.isPresent()) {"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"            throw new IllegalArgumentException(\"Book does not exist.\");"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        guiRobot.interact(() -\u003e {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"            getRootNode().scrollTo(matchingCard.get());"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            getRootNode().getSelectionModel().select(matchingCard.get());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the book card handle of a book associated with the {@code index} in the list."},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getBookCardHandle(int index) {"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        return getBookCardHandle(getRootNode().getItems().get(index).book);"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the {@code BookCardHandle} of the specified {@code book} in the list."},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getBookCardHandle(Book book) {"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cBookCardHandle\u003e handle \u003d getRootNode().getItems().stream()"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"                .filter(card -\u003e card.book.equals(book))"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"                .map(card -\u003e new BookCardHandle(card.getRoot()))"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"                .findFirst();"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        return handle.orElseThrow(() -\u003e new IllegalArgumentException(\"Book does not exist.\"));"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"     * Selects the {@code BookCard} at {@code index} in the list."},{"lineNumber":95,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    public void select(int index) {"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        getRootNode().getSelectionModel().select(index);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"     * Remembers the selected {@code BookCard} in the list."},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"    public void rememberSelectedBookCard() {"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"            lastRememberedSelectedBookCard \u003d Optional.empty();"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        } else {"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"            lastRememberedSelectedBookCard \u003d Optional.of(selectedItems.get(0));"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"     * Returns true if the selected {@code BookCard} is different from the value remembered by the most recent"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"     * {@code rememberSelectedBookCard()} call."},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"    public boolean isSelectedBookCardChanged() {"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"            return lastRememberedSelectedBookCard.isPresent();"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"        } else {"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"            return !lastRememberedSelectedBookCard.isPresent()"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"                    || !lastRememberedSelectedBookCard.get().equals(selectedItems.get(0));"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":126,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":129,"author":{"gitID":"-"},"content":"     * Returns the size of the list."},{"lineNumber":130,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    public int getListSize() {"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        return getRootNode().getItems().size();"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":77,"-":57}},{"path":"src/main/java/seedu/address/ui/UiManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.control.Alert;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.scene.control.Alert.AlertType;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.MainApp;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * The manager of the UI component."},{"lineNumber":23,"author":{"gitID":"-"},"content":" */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class UiManager extends ComponentManager implements Ui {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_STAGE_TITLE \u003d \"File Op Error\";"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE \u003d \"Could not save data\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE \u003d \"Could not save data to file\";"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/book_flat_32.png\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private Logic logic;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private Config config;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private UserPrefs prefs;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private MainWindow mainWindow;"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public UiManager(Logic logic, Config config, UserPrefs prefs) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        this.config \u003d config;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        this.prefs \u003d prefs;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        logger.info(\"Starting UI...\");"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        //Set the application icon."},{"lineNumber":52,"author":{"gitID":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, config, prefs, logic);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts"},{"lineNumber":57,"author":{"gitID":"-"},"content":"            mainWindow.fillInnerParts();"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        } catch (Throwable e) {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            logger.severe(StringUtil.getDetails(e));"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void stop() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        prefs.updateLastUsedGuiSetting(mainWindow.getCurrentGuiSetting());"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        mainWindow.hide();"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    private void showFileOperationAlertAndWait(String description, String details, Throwable cause) {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        final String content \u003d details + \":\\n\" + cause.toString();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(AlertType.ERROR, FILE_OPS_ERROR_DIALOG_STAGE_TITLE, description, content);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    private Image getImage(String imagePath) {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":85,"author":{"gitID":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters."},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * This method only returns after the user has closed the alert dialog."},{"lineNumber":87,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"},{"lineNumber":89,"author":{"gitID":"-"},"content":"                                               String contentText) {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        final Alert alert \u003d new Alert(type);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        alert.initOwner(owner);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        alert.setTitle(title);"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        alert.setHeaderText(headerText);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        alert.setContentText(contentText);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        alert.showAndWait();"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},"},{"lineNumber":102,"author":{"gitID":"-"},"content":"     * and exits the application after the user has closed the alert dialog."},{"lineNumber":103,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        Platform.exit();"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        System.exit(1);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event Handling Code \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    private void handleDataSavingExceptionEvent(DataSavingExceptionEvent event) {"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        showFileOperationAlertAndWait(FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE, FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE,"},{"lineNumber":117,"author":{"gitID":"-"},"content":"                event.exception);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":1,"-":118}},{"path":"src/test/java/guitests/guihandles/BookDetailsPanelHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":" * Provides a handle for the {@code BookDetailsPanel} of the UI."},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"public class BookDetailsPanelHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    public static final String BOOK_DETAILS_PANE_ID \u003d \"#bookDetailsPane\";"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    private static final String TITLE_FIELD_ID \u003d \"#title\";"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    private static final String ISBN_FIELD_ID \u003d \"#isbn\";"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    private static final String PUBLISHER_FIELD_ID \u003d \"#publisher\";"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    private static final String PUBLICATION_DATE_FIELD_ID \u003d \"#publicationDate\";"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private static final String DESCRIPTION_FIELD_ID \u003d \"#description\";"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    private static final String AUTHORS_FIELD_ID \u003d \"#authors\";"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    private static final String CATEGORIES_FIELD_ID \u003d \"#categories\";"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private final Label titleLabel;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private final Label isbnLabel;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    private final Label publisherLabel;"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private final Label publicationDateLabel;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private final Label descriptionLabel;"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private List\u003cLabel\u003e authorsLabel;"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    private List\u003cLabel\u003e categoriesLabel;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    private String lastRememberedIsbn;"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    public BookDetailsPanelHandle(Node bookDetailsPanelNode) {"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        super(bookDetailsPanelNode);"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        this.titleLabel \u003d getChildNode(TITLE_FIELD_ID);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        this.isbnLabel \u003d getChildNode(ISBN_FIELD_ID);"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        this.publisherLabel \u003d getChildNode(PUBLISHER_FIELD_ID);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        this.publicationDateLabel \u003d getChildNode(PUBLICATION_DATE_FIELD_ID);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        this.descriptionLabel \u003d getChildNode(DESCRIPTION_FIELD_ID);"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        updateAuthorsLabel();"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        updateCategoriesLabel();"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    public String getIsbn() {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        return isbnLabel.getText();"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"    public String getTitle() {"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        return titleLabel.getText();"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    public String getPublisher() {"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        return publisherLabel.getText();"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    public String getPublicationDate() {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        return publicationDateLabel.getText();"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    public String getDescription() {"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        return descriptionLabel.getText();"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    public List\u003cString\u003e getAuthors() {"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        updateAuthorsLabel();"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        return authorsLabel"},{"lineNumber":70,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":71,"author":{"gitID":"-"},"content":"                .map(Label::getText)"},{"lineNumber":72,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"    public List\u003cString\u003e getCategories() {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        updateCategoriesLabel();"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        return categoriesLabel"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"                .stream()"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"                .map(Label::getText)"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"                .collect(Collectors.toList());"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    public boolean isVisible() {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        return getRootNode().isVisible();"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    public void rememberIsbn() {"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        lastRememberedIsbn \u003d getIsbn();"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    public boolean isIsbnChanged() {"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"        return !lastRememberedIsbn.equals(getIsbn());"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"    /** Update the list of authors labels. */"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"    private void updateAuthorsLabel() {"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        Region authorsContainer \u003d getChildNode(AUTHORS_FIELD_ID);"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"        this.authorsLabel \u003d authorsContainer"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"                .getChildrenUnmodifiable()"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"                .stream()"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"                .map(Label.class::cast)"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"                .collect(Collectors.toList());"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    /** Update the list of categories labels. */"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"    private void updateCategoriesLabel() {"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"        Region categoriesContainer \u003d getChildNode(CATEGORIES_FIELD_ID);"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        this.categoriesLabel \u003d categoriesContainer"},{"lineNumber":109,"author":{"gitID":"-"},"content":"                .getChildrenUnmodifiable()"},{"lineNumber":110,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":111,"author":{"gitID":"-"},"content":"                .map(Label.class::cast)"},{"lineNumber":112,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":14,"takuyakanbr":81,"-":19}},{"path":"src/main/java/seedu/address/ui/BookCard.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.scene.layout.FlowPane;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":" * An UI component that displays information of a {@code Book}."},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"public class BookCard extends UiPart\u003cRegion\u003e {"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    private static final String FXML \u003d \"BookListCard.fxml\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"},{"lineNumber":19,"author":{"gitID":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime."},{"lineNumber":20,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":21,"author":{"gitID":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    public final Book book;"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    private Label title;"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    private Label id;"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    private FlowPane authors;"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"    private FlowPane categories;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    public BookCard(Book book, int displayedIndex) {"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        super(FXML);"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        this.book \u003d book;"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        id.setText(displayedIndex + \". \");"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        title.setText(book.getTitle().title);"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        book.getAuthors().forEach(author -\u003e authors.getChildren()"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"                .add(new Label(author.fullName)));"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        book.getCategories().forEach(category -\u003e categories.getChildren()"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"                .add(new Label(category.toString())));"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        if (!(other instanceof BookCard)) {"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"            return false;"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        // state check"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        BookCard card \u003d (BookCard) other;"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        return id.getText().equals(card.id.getText())"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 book.equals(card.book);"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":39,"-":24}},{"path":"src/test/java/guitests/guihandles/RecentBooksPanelHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.ui.BookCard;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":" * Provides a handle for {@code RecentBooksPanel} containing the list of {@code BookCard}."},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"public class RecentBooksPanelHandle extends NodeHandle\u003cListView\u003cBookCard\u003e\u003e {"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    public static final String RECENT_BOOKS_LIST_VIEW_ID \u003d \"#recentBooksListView\";"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    private Optional\u003cBookCard\u003e lastRememberedSelectedBookCard;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    public RecentBooksPanelHandle(ListView\u003cBookCard\u003e recentBooksPanelNode) {"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        super(recentBooksPanelNode);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a handle to the selected {@code BookCardHandle}."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * A maximum of 1 item can be selected at any time."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * @throws AssertionError if no card is selected, or more than 1 card is selected."},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getHandleToSelectedCard() {"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e bookList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        if (bookList.size() !\u003d 1) {"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"            throw new AssertionError(\"Search results list size expected 1.\");"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        return new BookCardHandle(bookList.get(0).getRoot());"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * Returns the index of the selected card."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public int getSelectedCardIndex() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return getRootNode().getSelectionModel().getSelectedIndex();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * Returns true if a card is currently selected."},{"lineNumber":46,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public boolean isAnyCardSelected() {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedCardsList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        if (selectedCardsList.size() \u003e 1) {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Card list size expected 0 or 1.\");"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return !selectedCardsList.isEmpty();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"     * Navigates the listview to display and select the book."},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    public void navigateToCard(Book book) {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e cards \u003d getRootNode().getItems();"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cBookCard\u003e matchingCard \u003d cards.stream().filter(card -\u003e card.book.equals(book)).findFirst();"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        if (!matchingCard.isPresent()) {"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"            throw new IllegalArgumentException(\"Book does not exist.\");"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        guiRobot.interact(() -\u003e {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"            getRootNode().scrollTo(matchingCard.get());"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            getRootNode().getSelectionModel().select(matchingCard.get());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the book card handle of a book associated with the {@code index} in the list."},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getBookCardHandle(int index) {"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        return getBookCardHandle(getRootNode().getItems().get(index).book);"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the {@code BookCardHandle} of the specified {@code book} in the list."},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getBookCardHandle(Book book) {"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cBookCardHandle\u003e handle \u003d getRootNode().getItems().stream()"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"                .filter(card -\u003e card.book.equals(book))"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"                .map(card -\u003e new BookCardHandle(card.getRoot()))"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"                .findFirst();"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        return handle.orElseThrow(() -\u003e new IllegalArgumentException(\"Book does not exist: \" + book.toString() + \".\"));"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"     * Selects the {@code BookCard} at {@code index} in the list."},{"lineNumber":95,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    public void select(int index) {"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        getRootNode().getSelectionModel().select(index);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"     * Remembers the selected {@code BookCard} in the list."},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"    public void rememberSelectedBookCard() {"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"            lastRememberedSelectedBookCard \u003d Optional.empty();"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        } else {"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"            lastRememberedSelectedBookCard \u003d Optional.of(selectedItems.get(0));"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"     * Returns true if the selected {@code BookCard} is different from the value remembered by the most recent"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"     * {@code rememberSelectedBookCard()} call."},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"    public boolean isSelectedBookCardChanged() {"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"            return lastRememberedSelectedBookCard.isPresent();"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"        } else {"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"            return !lastRememberedSelectedBookCard.isPresent()"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"                    || !lastRememberedSelectedBookCard.get().equals(selectedItems.get(0));"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":126,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":129,"author":{"gitID":"-"},"content":"     * Returns the size of the list."},{"lineNumber":130,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    public int getListSize() {"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        return getRootNode().getItems().size();"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":135,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":77,"takuyakanbr":2,"-":56}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.event.ActionEvent;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.Scene;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.control.MenuItem;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextInputControl;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCombination;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyEvent;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.scene.layout.StackPane;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.WindowSettings;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ChangeThemeRequestEvent;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ShowHelpRequestEvent;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.SwitchToBookListRequestEvent;"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.SwitchToRecentBooksRequestEvent;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.SwitchToSearchResultsRequestEvent;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":30,"author":{"gitID":"-"},"content":" * The Main Window. Provides the basic application layout containing"},{"lineNumber":31,"author":{"gitID":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed."},{"lineNumber":32,"author":{"gitID":"-"},"content":" */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private Stage primaryStage;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private Logic logic;"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    // Independent Ui parts residing in this Ui container"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    private BookDetailsPanel bookDetailsPanel;"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"    private BookListPanel bookListPanel;"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    private SearchResultsPanel searchResultsPanel;"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"    private RecentBooksPanel recentBooksPanel;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    private Config config;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    private UserPrefs prefs;"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    private Scene scene;"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    private StackPane mainContentPlaceholder;"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    private StackPane commandBoxPlaceholder;"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    private MenuItem helpMenuItem;"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"    private StackPane bookListPanelPlaceholder;"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    private StackPane resultDisplayPlaceholder;"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    private StackPane statusbarPlaceholder;"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public MainWindow(Stage primaryStage, Config config, UserPrefs prefs, Logic logic) {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        super(FXML, primaryStage);"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"        // Set dependencies"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        this.primaryStage \u003d primaryStage;"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        this.config \u003d config;"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        this.prefs \u003d prefs;"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"        // Configure the UI"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        setTitle(config.getAppTitle());"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        setWindowDefaultSize(prefs);"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        updateStylesheet(prefs);"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"        setAccelerators();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"    public Stage getPrimaryStage() {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        return primaryStage;"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"    private void setAccelerators() {"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":98,"author":{"gitID":"-"},"content":"     * Sets the accelerator of a MenuItem."},{"lineNumber":99,"author":{"gitID":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator"},{"lineNumber":100,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        menuItem.setAccelerator(keyCombination);"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":105,"author":{"gitID":"-"},"content":"         * TODO: the code below can be removed once the bug reported here"},{"lineNumber":106,"author":{"gitID":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666"},{"lineNumber":107,"author":{"gitID":"-"},"content":"         * is fixed in later version of SDK."},{"lineNumber":108,"author":{"gitID":"-"},"content":"         *"},{"lineNumber":109,"author":{"gitID":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will"},{"lineNumber":110,"author":{"gitID":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and"},{"lineNumber":111,"author":{"gitID":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"},{"lineNumber":112,"author":{"gitID":"-"},"content":"         * not work when the focus is in them because the key event is consumed by"},{"lineNumber":113,"author":{"gitID":"-"},"content":"         * the TextInputControl(s)."},{"lineNumber":114,"author":{"gitID":"-"},"content":"         *"},{"lineNumber":115,"author":{"gitID":"-"},"content":"         * For now, we add following event filter to capture such key events and open"},{"lineNumber":116,"author":{"gitID":"-"},"content":"         * help window purposely so to support accelerators even when focus is"},{"lineNumber":117,"author":{"gitID":"-"},"content":"         * in CommandBox or ResultDisplay."},{"lineNumber":118,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"},{"lineNumber":120,"author":{"gitID":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"},{"lineNumber":121,"author":{"gitID":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());"},{"lineNumber":122,"author":{"gitID":"-"},"content":"                event.consume();"},{"lineNumber":123,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":125,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":128,"author":{"gitID":"-"},"content":"     * Fills up all the placeholders of this window."},{"lineNumber":129,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":130,"author":{"gitID":"-"},"content":"    void fillInnerParts() {"},{"lineNumber":131,"author":{"gitID":"takuyakanbr"},"content":"        bookDetailsPanel \u003d new BookDetailsPanel();"},{"lineNumber":132,"author":{"gitID":"takuyakanbr"},"content":"        mainContentPlaceholder.getChildren().add(bookDetailsPanel.getRoot());"},{"lineNumber":133,"author":{"gitID":"-"},"content":""},{"lineNumber":134,"author":{"gitID":"qiu-siqi"},"content":"        bookListPanel \u003d new BookListPanel(logic.getFilteredBookList());"},{"lineNumber":135,"author":{"gitID":"takuyakanbr"},"content":"        searchResultsPanel \u003d new SearchResultsPanel(logic.getSearchResultsList());"},{"lineNumber":136,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksPanel \u003d new RecentBooksPanel(logic.getRecentBooksList());"},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"        bookListPanelPlaceholder.getChildren().add(searchResultsPanel.getRoot());"},{"lineNumber":138,"author":{"gitID":"qiu-siqi"},"content":"        bookListPanelPlaceholder.getChildren().add(bookListPanel.getRoot());"},{"lineNumber":139,"author":{"gitID":"qiu-siqi"},"content":"        bookListPanelPlaceholder.getChildren().add(recentBooksPanel.getRoot());"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"        searchResultsPanel.getRoot().setVisible(false);"},{"lineNumber":141,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksPanel.getRoot().setVisible(false);"},{"lineNumber":142,"author":{"gitID":"-"},"content":""},{"lineNumber":143,"author":{"gitID":"-"},"content":"        ResultDisplay resultDisplay \u003d new ResultDisplay();"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"qiu-siqi"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(prefs.getBookShelfFilePath());"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"},{"lineNumber":148,"author":{"gitID":"-"},"content":""},{"lineNumber":149,"author":{"gitID":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(logic);"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"},{"lineNumber":151,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitID":"-"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"    void hide() {"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        primaryStage.hide();"},{"lineNumber":155,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"    private void setTitle(String appTitle) {"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        primaryStage.setTitle(appTitle);"},{"lineNumber":159,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitID":"-"},"content":""},{"lineNumber":161,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":162,"author":{"gitID":"-"},"content":"     * Sets the default size based on user preferences."},{"lineNumber":163,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":164,"author":{"gitID":"-"},"content":"    private void setWindowDefaultSize(UserPrefs prefs) {"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        primaryStage.setHeight(prefs.getWindowSettings().getWindowHeight());"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        primaryStage.setWidth(prefs.getWindowSettings().getWindowWidth());"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        if (prefs.getWindowSettings().getWindowCoordinates() !\u003d null) {"},{"lineNumber":168,"author":{"gitID":"-"},"content":"            primaryStage.setX(prefs.getWindowSettings().getWindowCoordinates().getX());"},{"lineNumber":169,"author":{"gitID":"-"},"content":"            primaryStage.setY(prefs.getWindowSettings().getWindowCoordinates().getY());"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"-"},"content":"    /** Updates the stylesheet used based on user preferences. */"},{"lineNumber":174,"author":{"gitID":"-"},"content":"    private void updateStylesheet(UserPrefs prefs) {"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        scene.getStylesheets().setAll(prefs.getAppTheme().getCssFile());"},{"lineNumber":176,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":179,"author":{"gitID":"-"},"content":"     * Returns the current size and the position of the main Window."},{"lineNumber":180,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":181,"author":{"gitID":"-"},"content":"    WindowSettings getCurrentGuiSetting() {"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        return new WindowSettings(primaryStage.getWidth(), primaryStage.getHeight(),"},{"lineNumber":183,"author":{"gitID":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());"},{"lineNumber":184,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitID":"-"},"content":""},{"lineNumber":186,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitID":"-"},"content":"     * Opens the help window."},{"lineNumber":188,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":189,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":190,"author":{"gitID":"-"},"content":"    public void handleHelp() {"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        HelpWindow helpWindow \u003d new HelpWindow();"},{"lineNumber":192,"author":{"gitID":"-"},"content":"        helpWindow.show();"},{"lineNumber":193,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitID":"-"},"content":""},{"lineNumber":195,"author":{"gitID":"-"},"content":"    void show() {"},{"lineNumber":196,"author":{"gitID":"-"},"content":"        primaryStage.show();"},{"lineNumber":197,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":198,"author":{"gitID":"-"},"content":""},{"lineNumber":199,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":200,"author":{"gitID":"-"},"content":"     * Closes the application."},{"lineNumber":201,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":202,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":203,"author":{"gitID":"-"},"content":"    private void handleExit() {"},{"lineNumber":204,"author":{"gitID":"-"},"content":"        raise(new ExitAppRequestEvent());"},{"lineNumber":205,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitID":"-"},"content":""},{"lineNumber":207,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":208,"author":{"gitID":"-"},"content":"    private void handleChangeThemeRequestEvent(ChangeThemeRequestEvent event) {"},{"lineNumber":209,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        prefs.setAppTheme(event.newTheme);"},{"lineNumber":211,"author":{"gitID":"-"},"content":"        updateStylesheet(prefs);"},{"lineNumber":212,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitID":"-"},"content":""},{"lineNumber":214,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":215,"author":{"gitID":"takuyakanbr"},"content":"    private void handleShowHelpRequestEvent(ShowHelpRequestEvent event) {"},{"lineNumber":216,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":217,"author":{"gitID":"-"},"content":"        handleHelp();"},{"lineNumber":218,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":220,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":221,"author":{"gitID":"takuyakanbr"},"content":"    private void handleSwitchToBookListRequestEvent(SwitchToBookListRequestEvent event) {"},{"lineNumber":222,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":223,"author":{"gitID":"takuyakanbr"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":224,"author":{"gitID":"qiu-siqi"},"content":"            bookDetailsPanel.clear();"},{"lineNumber":225,"author":{"gitID":"takuyakanbr"},"content":"            bookListPanel.clearSelectionAndScrollToTop();"},{"lineNumber":226,"author":{"gitID":"takuyakanbr"},"content":"            bookListPanel.getRoot().setVisible(true);"},{"lineNumber":227,"author":{"gitID":"takuyakanbr"},"content":"            searchResultsPanel.getRoot().setVisible(false);"},{"lineNumber":228,"author":{"gitID":"qiu-siqi"},"content":"            recentBooksPanel.getRoot().setVisible(false);"},{"lineNumber":229,"author":{"gitID":"takuyakanbr"},"content":"        });"},{"lineNumber":230,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":231,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":232,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":233,"author":{"gitID":"takuyakanbr"},"content":"    private void handleSwitchToSearchResultsRequestEvent(SwitchToSearchResultsRequestEvent event) {"},{"lineNumber":234,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":235,"author":{"gitID":"takuyakanbr"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":236,"author":{"gitID":"qiu-siqi"},"content":"            bookDetailsPanel.clear();"},{"lineNumber":237,"author":{"gitID":"takuyakanbr"},"content":"            searchResultsPanel.clearSelectionAndScrollToTop();"},{"lineNumber":238,"author":{"gitID":"takuyakanbr"},"content":"            bookListPanel.getRoot().setVisible(false);"},{"lineNumber":239,"author":{"gitID":"takuyakanbr"},"content":"            searchResultsPanel.getRoot().setVisible(true);"},{"lineNumber":240,"author":{"gitID":"qiu-siqi"},"content":"            recentBooksPanel.getRoot().setVisible(false);"},{"lineNumber":241,"author":{"gitID":"takuyakanbr"},"content":"        });"},{"lineNumber":242,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":243,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":244,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":245,"author":{"gitID":"qiu-siqi"},"content":"    private void handleSwitchToRecentBooksRequestEvent(SwitchToRecentBooksRequestEvent event) {"},{"lineNumber":246,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":247,"author":{"gitID":"qiu-siqi"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":248,"author":{"gitID":"qiu-siqi"},"content":"            bookDetailsPanel.clear();"},{"lineNumber":249,"author":{"gitID":"qiu-siqi"},"content":"            recentBooksPanel.clearSelectionAndScrollToTop();"},{"lineNumber":250,"author":{"gitID":"takuyakanbr"},"content":"            bookListPanel.getRoot().setVisible(false);"},{"lineNumber":251,"author":{"gitID":"takuyakanbr"},"content":"            searchResultsPanel.getRoot().setVisible(false);"},{"lineNumber":252,"author":{"gitID":"qiu-siqi"},"content":"            recentBooksPanel.getRoot().setVisible(true);"},{"lineNumber":253,"author":{"gitID":"qiu-siqi"},"content":"        });"},{"lineNumber":254,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":255,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":256,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":20,"takuyakanbr":36,"-":200}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.time.Clock;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.controlsfx.control.StatusBar;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public static final String SYNC_STATUS_INITIAL \u003d \"Not updated yet in this session\";"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public static final String SYNC_STATUS_UPDATED \u003d \"Last Updated: %s\";"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     * Used to generate time stamps."},{"lineNumber":27,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * TODO: change clock to an instance variable."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     * We leave it as a static variable because manual dependency injection"},{"lineNumber":30,"author":{"gitID":"-"},"content":"     * will require passing down the clock reference all the way from MainApp,"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * but it should be easier once we have factories/DI frameworks."},{"lineNumber":32,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static Clock clock \u003d Clock.systemDefaultZone();"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StatusBarFooter.class);"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private StatusBar syncStatus;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    private StatusBar saveLocationStatus;"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public StatusBarFooter(String saveLocation) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        setSyncStatus(SYNC_STATUS_INITIAL);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        setSaveLocation(\"./\" + saveLocation);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     * Sets the clock used to determine the current time."},{"lineNumber":54,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public static void setClock(Clock clock) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        StatusBarFooter.clock \u003d clock;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":60,"author":{"gitID":"-"},"content":"     * Returns the clock currently in use."},{"lineNumber":61,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public static Clock getClock() {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        return clock;"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    private void setSaveLocation(String location) {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e this.saveLocationStatus.setText(location));"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    private void setSyncStatus(String status) {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e this.syncStatus.setText(status));"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"    public void handleBookShelfChangedEvent(BookShelfChangedEvent bsce) {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        long now \u003d clock.millis();"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        String lastUpdated \u003d new Date(now).toString();"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(bsce, \"Setting last updated status to \" + lastUpdated));"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        setSyncStatus(String.format(SYNC_STATUS_UPDATED, lastUpdated));"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"-":78}},{"path":"src/main/java/seedu/address/ui/BookListPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.fxmisc.easybind.EasyBind;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListCell;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.BookListSelectionChangedEvent;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.JumpToBookListIndexRequestEvent;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":" * Panel containing the list of books."},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"public class BookListPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    private static final String FXML \u003d \"BookListPanel.fxml\";"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BookListPanel.class);"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    private ListView\u003cBookCard\u003e bookListView;"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    public BookListPanel(ObservableList\u003cBook\u003e bookList) {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        super(FXML);"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        setConnections(bookList);"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    private void setConnections(ObservableList\u003cBook\u003e bookList) {"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        ObservableList\u003cBookCard\u003e mappedList \u003d EasyBind.map("},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"                bookList, (book) -\u003e new BookCard(book, bookList.indexOf(book) + 1));"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        bookListView.setItems(mappedList);"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        bookListView.setCellFactory(listView -\u003e new BookListViewCell());"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        setEventHandlerForSelectionChangeEvent();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    private void setEventHandlerForSelectionChangeEvent() {"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        bookListView.getSelectionModel().selectedItemProperty()"},{"lineNumber":46,"author":{"gitID":"-"},"content":"                .addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"                    if (newValue !\u003d null) {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"                        logger.fine(\"Selection in book list panel changed to : \u0027\" + newValue + \"\u0027\");"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"                        raise(new BookListSelectionChangedEvent(newValue));"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"                    }"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"                });"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"     * Scrolls to the {@code BookCard} at the {@code index} and selects it."},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"    private void scrollTo(int index) {"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"            bookListView.scrollTo(index);"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"            bookListView.getSelectionModel().clearAndSelect(index);"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        });"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    protected void clearSelectionAndScrollToTop() {"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        bookListView.getSelectionModel().clearSelection();"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        bookListView.scrollTo(0);"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    private void handleJumpToBookListRequestEvent(JumpToBookListIndexRequestEvent event) {"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        scrollTo(event.targetIndex);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code BookCard}."},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"    class BookListViewCell extends ListCell\u003cBookCard\u003e {"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        @Override"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"        protected void updateItem(BookCard book, boolean empty) {"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"            super.updateItem(book, empty);"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"            if (empty || book \u003d\u003d null) {"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"                setGraphic(null);"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"                setText(null);"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"            } else {"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"                setGraphic(book.getRoot());"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"            }"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":64,"takuyakanbr":10,"-":19}},{"path":"src/test/java/guitests/guihandles/SearchResultsPanelHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.ui.BookCard;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":" * Provides a handle for {@code SearchResultsPanel} containing the list of {@code BookCard}."},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"public class SearchResultsPanelHandle extends NodeHandle\u003cListView\u003cBookCard\u003e\u003e {"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    public static final String SEARCH_RESULTS_LIST_VIEW_ID \u003d \"#searchResultsListView\";"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    private Optional\u003cBookCard\u003e lastRememberedSelectedBookCard;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public SearchResultsPanelHandle(ListView\u003cBookCard\u003e searchResultsPanelNode) {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        super(searchResultsPanelNode);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a handle to the selected {@code BookCardHandle}."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * A maximum of 1 item can be selected at any time."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * @throws AssertionError if no card is selected, or more than 1 card is selected."},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getHandleToSelectedCard() {"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e bookList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        if (bookList.size() !\u003d 1) {"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"            throw new AssertionError(\"Search results list size expected 1.\");"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        return new BookCardHandle(bookList.get(0).getRoot());"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * Returns the index of the selected card."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public int getSelectedCardIndex() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return getRootNode().getSelectionModel().getSelectedIndex();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * Returns true if a card is currently selected."},{"lineNumber":46,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public boolean isAnyCardSelected() {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedCardsList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        if (selectedCardsList.size() \u003e 1) {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Card list size expected 0 or 1.\");"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return !selectedCardsList.isEmpty();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"     * Navigates the listview to display and select the book."},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    public void navigateToCard(Book book) {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e cards \u003d getRootNode().getItems();"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cBookCard\u003e matchingCard \u003d cards.stream().filter(card -\u003e card.book.equals(book)).findFirst();"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        if (!matchingCard.isPresent()) {"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"            throw new IllegalArgumentException(\"Book does not exist.\");"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        guiRobot.interact(() -\u003e {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"            getRootNode().scrollTo(matchingCard.get());"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            getRootNode().getSelectionModel().select(matchingCard.get());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the book card handle of a book associated with the {@code index} in the list."},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getBookCardHandle(int index) {"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        return getBookCardHandle(getRootNode().getItems().get(index).book);"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the {@code BookCardHandle} of the specified {@code book} in the list."},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getBookCardHandle(Book book) {"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cBookCardHandle\u003e handle \u003d getRootNode().getItems().stream()"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"                .filter(card -\u003e card.book.equals(book))"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"                .map(card -\u003e new BookCardHandle(card.getRoot()))"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"                .findFirst();"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        return handle.orElseThrow(() -\u003e new IllegalArgumentException(\"Book does not exist: \" + book.toString() + \".\"));"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"     * Selects the {@code BookCard} at {@code index} in the list."},{"lineNumber":95,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    public void select(int index) {"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        getRootNode().getSelectionModel().select(index);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"     * Remembers the selected {@code BookCard} in the list."},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"    public void rememberSelectedBookCard() {"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"            lastRememberedSelectedBookCard \u003d Optional.empty();"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        } else {"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"            lastRememberedSelectedBookCard \u003d Optional.of(selectedItems.get(0));"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"     * Returns true if the selected {@code BookCard} is different from the value remembered by the most recent"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"     * {@code rememberSelectedBookCard()} call."},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"    public boolean isSelectedBookCardChanged() {"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"            return lastRememberedSelectedBookCard.isPresent();"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"        } else {"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"            return !lastRememberedSelectedBookCard.isPresent()"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"                    || !lastRememberedSelectedBookCard.get().equals(selectedItems.get(0));"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":126,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":129,"author":{"gitID":"-"},"content":"     * Returns the size of the list."},{"lineNumber":130,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    public int getListSize() {"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        return getRootNode().getItems().size();"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":69,"takuyakanbr":8,"-":57}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"-"},"content":" * Container for user visible messages."},{"lineNumber":5,"author":{"gitID":"-"},"content":" */"},{"lineNumber":6,"author":{"gitID":"-"},"content":"public class Messages {"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"},{"lineNumber":9,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_INVALID_BOOK_DISPLAYED_INDEX \u003d \"The book index provided is invalid\";"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_BOOKS_LISTED_OVERVIEW \u003d \"%1$d books listed!\";"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":11}},{"path":"src/main/java/seedu/address/commons/core/Config.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Config values used by the app"},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class Config {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public static final String DEFAULT_CONFIG_FILE \u003d \"config.json\";"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    // Config values customizable through config file"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    private String appTitle \u003d \"Bibliotek\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private Level logLevel \u003d Level.INFO;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    private String userPrefsFilePath \u003d \"preferences.json\";"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    private String recentBooksFilePath \u003d \"recentbooks.xml\";"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public String getAppTitle() {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        return appTitle;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public void setAppTitle(String appTitle) {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        this.appTitle \u003d appTitle;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public Level getLogLevel() {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        return logLevel;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public void setLogLevel(Level logLevel) {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        this.logLevel \u003d logLevel;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public String getUserPrefsFilePath() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        return userPrefsFilePath;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public void setUserPrefsFilePath(String userPrefsFilePath) {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"    public String getRecentBooksFilePath() {"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        return recentBooksFilePath;"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"    public void setRecentBooksFilePath(String recentBooksFilePath) {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        this.recentBooksFilePath \u003d recentBooksFilePath;"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well."},{"lineNumber":57,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        Config o \u003d (Config) other;"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        return Objects.equals(appTitle, o.appTitle)"},{"lineNumber":63,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(logLevel, o.logLevel)"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath)"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(recentBooksFilePath, o.recentBooksFilePath);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        return Objects.hash(appTitle, logLevel, userPrefsFilePath, recentBooksFilePath);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        sb.append(\"App title : \" + appTitle);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        sb.append(\"\\nCurrent log level : \" + logLevel);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        sb.append(\"\\nRecent books file Location : \" + recentBooksFilePath);"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        return sb.toString();"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":13,"takuyakanbr":1,"-":69}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.logging.ConsoleHandler;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.FileHandler;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.logging.Handler;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.logging.SimpleFormatter;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * Configures and manages loggers and handlers, including their logging level"},{"lineNumber":15,"author":{"gitID":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e"},{"lineNumber":16,"author":{"gitID":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,"},{"lineNumber":17,"author":{"gitID":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log"},{"lineNumber":18,"author":{"gitID":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e"},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class LogsCenter {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private static final String LOG_FILE \u003d \"bibliotek.log\";"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private static FileHandler fileHandler;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private static ConsoleHandler consoleHandler;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e"},{"lineNumber":32,"author":{"gitID":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name"},{"lineNumber":33,"author":{"gitID":"-"},"content":"     * is requested again from the LogsCenter."},{"lineNumber":34,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public static void init(Config config) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * Creates a logger with the given name."},{"lineNumber":42,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public static Logger getLogger(String name) {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        logger.setUseParentHandlers(false);"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        removeHandlers(logger);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        addConsoleHandler(logger);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        addFileHandler(logger);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        return Logger.getLogger(name);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"-"},"content":"     * Creates a Logger for the given class name."},{"lineNumber":56,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        if (clazz \u003d\u003d null) {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"            return Logger.getLogger(\"\");"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        return getLogger(clazz.getSimpleName());"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e"},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * Creates the {@code consoleHandler} if it is null."},{"lineNumber":67,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    private static void addConsoleHandler(Logger logger) {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        if (consoleHandler \u003d\u003d null) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            consoleHandler \u003d createConsoleHandler();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        logger.addHandler(consoleHandler);"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"-"},"content":"     * Remove all the handlers from {@code logger}."},{"lineNumber":77,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    private static void removeHandlers(Logger logger) {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        Handler[] handlers \u003d logger.getHandlers();"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        for (Handler handler : handlers) {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"            logger.removeHandler(handler);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e"},{"lineNumber":87,"author":{"gitID":"-"},"content":"     * Creates {@code fileHandler} if it is null."},{"lineNumber":88,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    private static void addFileHandler(Logger logger) {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"            if (fileHandler \u003d\u003d null) {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"                fileHandler \u003d createFileHandler();"},{"lineNumber":93,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":94,"author":{"gitID":"-"},"content":"            logger.addHandler(fileHandler);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":96,"author":{"gitID":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"-"},"content":"     * Creates a {@code FileHandler} for the log file."},{"lineNumber":102,"author":{"gitID":"-"},"content":"     * @throws IOException if there are problems opening the file."},{"lineNumber":103,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        fileHandler.setLevel(currentLogLevel);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        return fileHandler;"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        return consoleHandler;"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * Decorates the given string to create a log message suitable for logging event handling methods."},{"lineNumber":119,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":120,"author":{"gitID":"-"},"content":"    public static String getEventHandlingLogMessage(BaseEvent e, String message) {"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        return \"---[Event handled][\" + e + \"]\" + message;"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":125,"author":{"gitID":"-"},"content":"     * @see #getEventHandlingLogMessage(BaseEvent, String)"},{"lineNumber":126,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":127,"author":{"gitID":"-"},"content":"    public static String getEventHandlingLogMessage(BaseEvent e) {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        return getEventHandlingLogMessage(e, \"\");"},{"lineNumber":129,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":1,"-":129}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.PrintWriter;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.StringWriter;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import java.io.UnsupportedEncodingException;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import java.net.URLEncoder;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * Helper functions for handling strings."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class StringUtil {"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     *   Ignores case, but a full word match is required."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e"},{"lineNumber":20,"author":{"gitID":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true"},{"lineNumber":21,"author":{"gitID":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match"},{"lineNumber":23,"author":{"gitID":"-"},"content":"     *       \u003c/pre\u003e"},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * @param sentence cannot be null"},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        requireNonNull(sentence);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        requireNonNull(word);"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        String preppedWord \u003d word.trim();"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"        String preppedSentence \u003d sentence;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        for (String wordInSentence: wordsInPreppedSentence) {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"            if (wordInSentence.equalsIgnoreCase(preppedWord)) {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"                return true;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        return false;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * Returns a detailed message of the t, including the stack trace."},{"lineNumber":48,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public static String getDetails(Throwable t) {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        requireNonNull(t);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        StringWriter sw \u003d new StringWriter();"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer"},{"lineNumber":58,"author":{"gitID":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e"},{"lineNumber":59,"author":{"gitID":"-"},"content":"     * Will return false for any other non-null string input"},{"lineNumber":60,"author":{"gitID":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)"},{"lineNumber":61,"author":{"gitID":"-"},"content":"     * @throws NullPointerException if {@code s} is null."},{"lineNumber":62,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        requireNonNull(s);"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"            int value \u003d Integer.parseInt(s);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the URL encoded form of the string {@code s}, or any empty string"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"     * if UTF-8 encoding is not supported."},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"    public static String urlEncode(String s) {"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(s);"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"            return URLEncoder.encode(s, \"UTF-8\");"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        } catch (UnsupportedEncodingException e) {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"            return \"\";"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":15,"-":71}},{"path":"src/main/java/seedu/address/commons/core/WindowSettings.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.awt.Point;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.Serializable;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * A Serializable class that contains the window settings."},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class WindowSettings implements Serializable {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    private static final double DEFAULT_WIDTH \u003d 800;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private final Double windowWidth;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    private final Double windowHeight;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private final Point windowCoordinates;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public WindowSettings() {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        this.windowWidth \u003d DEFAULT_WIDTH;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        this.windowHeight \u003d DEFAULT_HEIGHT;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        this.windowCoordinates \u003d null; // null represent no coordinates"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public WindowSettings(Double windowWidth, Double windowHeight, int xPosition, int yPosition) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        this.windowWidth \u003d windowWidth;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        this.windowHeight \u003d windowHeight;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        this.windowCoordinates \u003d new Point(xPosition, yPosition);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public Double getWindowWidth() {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        return windowWidth;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public Double getWindowHeight() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        return windowHeight;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public Point getWindowCoordinates() {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        return windowCoordinates;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        if (!(other instanceof WindowSettings)) { //this handles null as well."},{"lineNumber":49,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        WindowSettings o \u003d (WindowSettings) other;"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return Objects.equals(windowWidth, o.windowWidth)"},{"lineNumber":55,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(windowHeight, o.windowHeight)"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        sb.append(\"Width : \").append(windowWidth);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        sb.append(\"\\nHeight : \").append(windowHeight);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        sb.append(\"\\nPosition : \").append(windowCoordinates);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        return sb.toString();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":2,"-":70}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * Utility methods related to Collections"},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class CollectionUtil {"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    /** @see #requireAllNonNull(Collection) */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public static void requireAllNonNull(Object... items) {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        requireNonNull(items);"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null."},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        requireNonNull(items);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        items.forEach(Objects::requireNonNull);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null."},{"lineNumber":34,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     * Returns true if every element in a collection are unique by {@link Object#equals(Object)}."},{"lineNumber":41,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public static boolean elementsAreUnique(Collection\u003c?\u003e items) {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        final Set\u003cObject\u003e testSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        for (Object item : items) {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"            final boolean itemAlreadyExists \u003d !testSet.add(item); // see Set documentation"},{"lineNumber":46,"author":{"gitID":"-"},"content":"            if (itemAlreadyExists) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"                return false;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        return true;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"     * Returns a new {@link Set} containing all the specified items."},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    @SafeVarargs"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    public static \u003cT\u003e Set\u003cT\u003e toSet(T... items) {"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        HashSet\u003cT\u003e set \u003d new HashSet\u003c\u003e();"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        Collections.addAll(set, items);"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        return set;"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":11,"-":51}},{"path":"src/main/java/seedu/address/ui/SearchResultsPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.fxmisc.easybind.EasyBind;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import javafx.collections.ListChangeListener;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListCell;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.JumpToSearchResultsIndexRequestEvent;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.SearchResultsSelectionChangedEvent;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":" * Panel containing the list of search results."},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"public class SearchResultsPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    private static final String FXML \u003d \"SearchResultsPanel.fxml\";"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private static final String INFO_TEXT \u003d \"Showing %s search results.\";"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SearchResultsPanel.class);"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    private Label infoLabel;"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    private ListView\u003cBookCard\u003e searchResultsListView;"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public SearchResultsPanel(ObservableList\u003cBook\u003e searchResults) {"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        super(FXML);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        setConnections(searchResults);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    private void setConnections(ObservableList\u003cBook\u003e searchResults) {"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        ObservableList\u003cBookCard\u003e mappedList \u003d EasyBind.map("},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"                searchResults, (book) -\u003e new BookCard(book, searchResults.indexOf(book) + 1));"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        searchResultsListView.setItems(mappedList);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        searchResultsListView.setCellFactory(listView -\u003e new BookListViewCell());"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        setEventHandlerForSelectionChangeEvent();"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        setEventHandlerForListChangeEvent();"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    private void setEventHandlerForSelectionChangeEvent() {"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        searchResultsListView.getSelectionModel().selectedItemProperty()"},{"lineNumber":52,"author":{"gitID":"-"},"content":"                .addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"                    if (newValue !\u003d null) {"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"                        logger.fine(\"Selection in search results panel changed to : \u0027\" + newValue + \"\u0027\");"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"                        raise(new SearchResultsSelectionChangedEvent(newValue));"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"                    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"                });"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    private void setEventHandlerForListChangeEvent() {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        searchResultsListView.getItems().addListener((ListChangeListener\u003cBookCard\u003e) c -\u003e {"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"            long newSize \u003d c.getList().size();"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"            infoLabel.setText(String.format(INFO_TEXT, newSize));"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        });"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    /** Scrolls to the top of the search results list. */"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    protected void scrollToTop() {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        searchResultsListView.scrollTo(0);"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"     * Scrolls to the {@code BookCard} at the {@code index} and selects it."},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"    private void scrollTo(int index) {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"            searchResultsListView.scrollTo(index);"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"            searchResultsListView.getSelectionModel().clearAndSelect(index);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        });"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    protected void clearSelectionAndScrollToTop() {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        searchResultsListView.getSelectionModel().clearSelection();"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        scrollToTop();"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    private void handleJumpToResultsListRequestEvent(JumpToSearchResultsIndexRequestEvent event) {"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        scrollTo(event.targetIndex);"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code BookCard}."},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"    class BookListViewCell extends ListCell\u003cBookCard\u003e {"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        @Override"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        protected void updateItem(BookCard book, boolean empty) {"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"            super.updateItem(book, empty);"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"            if (empty || book \u003d\u003d null) {"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"                setGraphic(null);"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"                setText(null);"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"            } else {"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"                setGraphic(book.getRoot());"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"            }"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":27,"takuyakanbr":66,"-":18}},{"path":"src/main/java/seedu/address/commons/events/ui/SwitchToBookListRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * An event requesting to view the user\u0027s book list."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class SwitchToBookListRequestEvent extends BaseEvent {"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":3,"-":12}},{"path":"src/main/java/seedu/address/commons/events/ui/SwitchToSearchResultsRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * An event requesting to view the search results."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class SwitchToSearchResultsRequestEvent extends BaseEvent {"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":3,"-":12}},{"path":"src/main/java/seedu/address/commons/events/ui/BookListSelectionChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.ui.BookCard;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" * Represents a selection change in the Book List Panel"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class BookListSelectionChangedEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    private final BookCard newSelection;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    public BookListSelectionChangedEvent(BookCard newSelection) {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        this.newSelection \u003d newSelection;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    public BookCard getNewSelection() {"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        return newSelection;"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":12,"takuyakanbr":2,"-":11}},{"path":"src/main/java/seedu/address/commons/events/ui/SwitchToRecentBooksRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":" * An event request to list recently selected books."},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"public class SwitchToRecentBooksRequestEvent extends BaseEvent {"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"-":10}},{"path":"src/main/java/seedu/address/commons/events/ui/JumpToSearchResultsIndexRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Indicates a request to jump to a particular index in the list of search results."},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class JumpToSearchResultsIndexRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public final int targetIndex;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    public JumpToSearchResultsIndexRequestEvent(Index targetIndex) {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex.getZeroBased();"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":3,"-":19}},{"path":"src/main/java/seedu/address/ui/RecentBooksPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.fxmisc.easybind.EasyBind;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import javafx.collections.ListChangeListener;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListCell;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.JumpToRecentBooksIndexRequestEvent;"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.RecentBooksSelectionChangedEvent;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":" * Panel containing the list of recently selected books."},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"public class RecentBooksPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    private static final String FXML \u003d \"RecentBooksPanel.fxml\";"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    private static final String INFO_TEXT \u003d \"Showing %s recently selected books.\";"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(RecentBooksPanel.class);"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    private Label infoLabel;"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"    private ListView\u003cBookCard\u003e recentBooksListView;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    public RecentBooksPanel(ObservableList\u003cBook\u003e searchResults) {"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        super(FXML);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        setConnections(searchResults);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"    private void setConnections(ObservableList\u003cBook\u003e recentBooks) {"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        ObservableList\u003cBookCard\u003e mappedList \u003d EasyBind.map("},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"                recentBooks, (book) -\u003e new BookCard(book, recentBooks.indexOf(book) + 1));"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksListView.setItems(mappedList);"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksListView.setCellFactory(listView -\u003e new BookListViewCell());"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        setEventHandlerForSelectionChangeEvent();"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        setEventHandlerForListChangeEvent();"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    private void setEventHandlerForSelectionChangeEvent() {"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksListView.getSelectionModel().selectedItemProperty()"},{"lineNumber":52,"author":{"gitID":"-"},"content":"                .addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"                    if (newValue !\u003d null) {"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"                        logger.fine(\"Selection in recent books panel changed to : \u0027\" + newValue + \"\u0027\");"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"                        raise(new RecentBooksSelectionChangedEvent(newValue));"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"                    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"                });"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    private void setEventHandlerForListChangeEvent() {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksListView.getItems().addListener((ListChangeListener\u003cBookCard\u003e) c -\u003e {"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"            long newSize \u003d c.getList().size();"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"            infoLabel.setText(String.format(INFO_TEXT, newSize));"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        });"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    /** Scrolls to the top of the search results list. */"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    protected void scrollToTop() {"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksListView.scrollTo(0);"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"     * Scrolls to the {@code BookCard} at the {@code index} and selects it."},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"    private void scrollTo(int index) {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"            recentBooksListView.scrollTo(index);"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"            recentBooksListView.getSelectionModel().clearAndSelect(index);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        });"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    protected void clearSelectionAndScrollToTop() {"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksListView.getSelectionModel().clearSelection();"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"        scrollToTop();"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"    @Subscribe"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"    private void handleJumpToRecentBooksIndexRequestEvent(JumpToRecentBooksIndexRequestEvent event) {"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        scrollTo(event.targetIndex);"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code BookCard}."},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"    class BookListViewCell extends ListCell\u003cBookCard\u003e {"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        @Override"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        protected void updateItem(BookCard book, boolean empty) {"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"            super.updateItem(book, empty);"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"            if (empty || book \u003d\u003d null) {"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"                setGraphic(null);"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"                setText(null);"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"            } else {"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"                setGraphic(book.getRoot());"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"            }"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":61,"takuyakanbr":31,"-":18}},{"path":"src/main/java/seedu/address/commons/events/ui/JumpToBookListIndexRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Indicates a request to jump to a particular index in the list of books."},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class JumpToBookListIndexRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public final int targetIndex;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    public JumpToBookListIndexRequestEvent(Index targetIndex) {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex.getZeroBased();"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":3,"-":19}},{"path":"src/main/java/seedu/address/ui/BookDetailsPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import javafx.scene.layout.FlowPane;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.BookListSelectionChangedEvent;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.RecentBooksSelectionChangedEvent;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.SearchResultsSelectionChangedEvent;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":" * The Book Details Panel of the App."},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"public class BookDetailsPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private static final String FXML \u003d \"BookDetailsPanel.fxml\";"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private Label title;"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    private Label isbn;"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"    private FlowPane authors;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    private FlowPane categories;"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    private Label publisher;"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    private Label publicationDate;"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    private Label description;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    public BookDetailsPanel() {"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        super(FXML);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        getRoot().setVisible(false);"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"    private void scrollToTop() {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        scrollPane.setVvalue(0);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    /** Update this panel to show details about the specified book. */"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    private void showBook(Book book) {"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"            title.setText(book.getTitle().toString());"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"            isbn.setText(book.getIsbn().toString());"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"            publisher.setText(book.getPublisher().toString());"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"            publicationDate.setText(book.getPublicationDate().toString());"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"            description.setText(book.getDescription().toString());"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"            authors.getChildren().clear();"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"            categories.getChildren().clear();"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"            book.getAuthors().forEach(author -\u003e authors.getChildren()"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"                    .add(new Label(author.fullName)));"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"            book.getCategories().forEach(category -\u003e categories.getChildren()"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"                    .add(new Label(category.toString())));"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"            scrollToTop();"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"            getRoot().setVisible(true);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        });"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"    protected void clear() {"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        getRoot().setVisible(false);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"    private void handleBookListSelectionChangedEvent(BookListSelectionChangedEvent event) {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        showBook(event.getNewSelection().book);"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    private void handleSearchResultsSelectionChangedEvent(SearchResultsSelectionChangedEvent event) {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        showBook(event.getNewSelection().book);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"    @Subscribe"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"    private void handleRecentBooksSelectionChangedEvent(RecentBooksSelectionChangedEvent event) {"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        showBook(event.getNewSelection().book);"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":14,"takuyakanbr":57,"-":26}},{"path":"src/main/java/seedu/address/commons/events/network/ResultOutcome.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":" * Represents the type of result outcome of a network request."},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"public enum ResultOutcome {"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"    FAILURE, SUCCESS"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":8}},{"path":"src/main/java/seedu/address/commons/events/ui/RecentBooksSelectionChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.ui.BookCard;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" * Represents a selection change in the Recent Books Panel."},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"public class RecentBooksSelectionChangedEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    private final BookCard newSelection;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    public RecentBooksSelectionChangedEvent(BookCard newSelection) {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        this.newSelection \u003d newSelection;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    public BookCard getNewSelection() {"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        return newSelection;"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":14,"-":11}},{"path":"src/main/java/seedu/address/commons/events/ui/JumpToRecentBooksIndexRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" * Indicates a request to jump to a particular index in the list of recently selected books."},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"public class JumpToRecentBooksIndexRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public final int targetIndex;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    public JumpToRecentBooksIndexRequestEvent(Index targetIndex) {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex.getZeroBased();"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":8,"-":13}},{"path":"src/main/java/seedu/address/commons/events/ui/SearchResultsSelectionChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.ui.BookCard;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Represents a selection change in the Search Results Panel."},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class SearchResultsSelectionChangedEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    private final BookCard newSelection;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    public SearchResultsSelectionChangedEvent(BookCard newSelection) {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        this.newSelection \u003d newSelection;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    public BookCard getNewSelection() {"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        return newSelection;"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":11,"takuyakanbr":3,"-":11}},{"path":"src/main/java/seedu/address/commons/events/network/ApiSearchRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Indicates a request to search for books using the Google Books API."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class ApiSearchRequestEvent extends BaseEvent {"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"    public final String searchParameters;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public ApiSearchRequestEvent(String searchParameters) {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        this.searchParameters \u003d searchParameters;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        return \"searching for: \" + searchParameters;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":19,"-":1}},{"path":"src/main/java/seedu/address/network/Network.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":" * The API of the Network component."},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"public interface Network {"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"     * Stops the Network component."},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    void stop();"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":12}},{"path":"src/main/java/seedu/address/commons/events/network/ApiSearchResultEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Represents the results of a search for books using the Google Books API."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class ApiSearchResultEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final ResultOutcome outcome;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public final ReadOnlyBookShelf bookShelf;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    public ApiSearchResultEvent(ResultOutcome outcome, ReadOnlyBookShelf bookShelf) {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"        this.outcome \u003d outcome;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"        this.bookShelf \u003d bookShelf;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        if (outcome \u003d\u003d ResultOutcome.FAILURE) {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            return \"API failure\";"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        return \"number of books \" + bookShelf.getBookList().size();"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":25,"-":1}},{"path":"src/main/java/seedu/address/commons/events/network/ApiBookDetailsRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Indicates a request to obtain details for a book using the Google Books API."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class ApiBookDetailsRequestEvent extends BaseEvent {"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"    public final String bookId;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public ApiBookDetailsRequestEvent(String bookId) {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        this.bookId \u003d bookId;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        return \"book details for: \" + bookId;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":19,"-":1}},{"path":"src/main/java/seedu/address/commons/events/model/BookShelfChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"/** Indicates the BookShelf in the model has changed */"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"public class BookShelfChangedEvent extends BaseEvent {"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"    public final ReadOnlyBookShelf data;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public BookShelfChangedEvent(ReadOnlyBookShelf data) {"},{"lineNumber":12,"author":{"gitID":"-"},"content":"        this.data \u003d data;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"        return \"number of books \" + data.getBookList().size();"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":11,"-":8}},{"path":"src/main/java/seedu/address/commons/events/network/ApiBookDetailsResultEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Represents the results of a search for book details using the Google Books API."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class ApiBookDetailsResultEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final ResultOutcome outcome;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public final Book book;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    public ApiBookDetailsResultEvent(ResultOutcome outcome, Book book) {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"        this.outcome \u003d outcome;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"        this.book \u003d book;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        if (outcome \u003d\u003d ResultOutcome.FAILURE) {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            return \"API failure\";"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        return \"book: \" + book;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":25,"-":1}},{"path":"src/main/java/seedu/address/network/api/google/JsonDeserializer.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletionException;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.InvalidBookException;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" * Provides utilities to deserialize JSON responses."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"public class JsonDeserializer {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDeserializer.class);"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    private final ObjectMapper mapper;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    JsonDeserializer() {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        mapper \u003d new ObjectMapper().configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     * Converts the JSON string from Google Books API into a book."},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public Book convertJsonStringToBook(String json) {"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"            JsonBookDetails jsonBookDetails \u003d mapper.readValue(json, JsonBookDetails.class);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"            return jsonBookDetails.toModelType();"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        } catch (IOException | InvalidBookException e) {"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"            logger.warning(\"Failed to convert JSON to book.\");"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"            throw new CompletionException(e);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"     * Converts the JSON string from Google Books API into a book shelf."},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public ReadOnlyBookShelf convertJsonStringToBookShelf(String json) {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"            JsonSearchResults jsonSearchResults \u003d mapper.readValue(json, JsonSearchResults.class);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"            return jsonSearchResults.toModelType();"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"            logger.warning(\"Failed to convert JSON to book shelf.\");"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"            throw new CompletionException(e);"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"takuyakanbr":45,"-":7}},{"path":"src/main/java/seedu/address/network/NetworkManager.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiBookDetailsRequestEvent;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiBookDetailsResultEvent;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiSearchRequestEvent;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiSearchResultEvent;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ResultOutcome;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.api.google.GoogleBooksApi;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"-"},"content":" * Provides networking functionality (making web API calls)."},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":" *"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * No web API methods are directly exposed on this class. To make a web API call,"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":" * raise the corresponding *RequestEvent. To receive the results of the call,"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":" * handle the corresponding *ResultEvent."},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"public class NetworkManager extends ComponentManager implements Network {"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(NetworkManager.class);"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    private final HttpClient httpClient;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    private final GoogleBooksApi googleBooksApi;"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public NetworkManager() {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        super();"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        httpClient \u003d new HttpClient();"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi \u003d new GoogleBooksApi(httpClient);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    protected NetworkManager(HttpClient httpClient, GoogleBooksApi googleBooksApi) {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        requireAllNonNull(httpClient, googleBooksApi);"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        this.httpClient \u003d httpClient;"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        this.googleBooksApi \u003d googleBooksApi;"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    public void stop() {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        httpClient.close();"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    protected void handleGoogleApiSearchRequestEvent(ApiSearchRequestEvent event) {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.searchBooks(event.searchParameters)"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"                .thenApply(bookShelf -\u003e {"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"                    raise(new ApiSearchResultEvent(ResultOutcome.SUCCESS, bookShelf));"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"                    return bookShelf;"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"                })"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"                .exceptionally(e -\u003e {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"                    logger.warning(\"Search request failed: \" + StringUtil.getDetails(e));"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"                    raise(new ApiSearchResultEvent(ResultOutcome.FAILURE, null));"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"                    return null;"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"                });"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    protected void handleGoogleApiBookDetailsRequestEvent(ApiBookDetailsRequestEvent event) {"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.getBookDetails(event.bookId)"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"                .thenApply(book -\u003e {"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"                    raise(new ApiBookDetailsResultEvent(ResultOutcome.SUCCESS, book));"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"                    return book;"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"                })"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"                .exceptionally(e -\u003e {"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"                    logger.warning(\"Book detail request failed: \" + StringUtil.getDetails(e));"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"                    raise(new ApiBookDetailsResultEvent(ResultOutcome.FAILURE, null));"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"                    return null;"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"                });"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":67,"-":13}},{"path":"src/main/java/seedu/address/network/HttpResponse.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import org.asynchttpclient.Response;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * A wrapper around the {@link Response} class from async-http-client."},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"public class HttpResponse {"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    private final int statusCode;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    private final String contentType;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    private final String responseBody;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    public HttpResponse(int statusCode, String contentType, String responseBody) {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"        requireAllNonNull(contentType, responseBody);"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        this.statusCode \u003d statusCode;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        this.contentType \u003d contentType;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this.responseBody \u003d responseBody;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    public HttpResponse(Response response) {"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        this(response.getStatusCode(), response.getContentType(), response.getResponseBody());"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public int getStatusCode() {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        return statusCode;"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public String getContentType() {"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        return contentType;"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public String getResponseBody() {"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        return responseBody;"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":34,"-":4}},{"path":"src/main/java/seedu/address/logic/UndoStack.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Stack;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoableCommand;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"-"},"content":" * Maintains the undo-stack (the stack of commands that can be undone) and the redo-stack (the stack of"},{"lineNumber":10,"author":{"gitID":"-"},"content":" * commands that can be undone)."},{"lineNumber":11,"author":{"gitID":"-"},"content":" */"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"public class UndoStack {"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    private Stack\u003cUndoableCommand\u003e undoStack;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    public UndoStack() {"},{"lineNumber":16,"author":{"gitID":"-"},"content":"        undoStack \u003d new Stack\u003c\u003e();"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"     * Pushes {@code command} onto the undo-stack if it is of type {@code UndoableCommand}."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public void push(Command command) {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        if (!(command instanceof UndoableCommand)) {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"            return;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"        undoStack.add((UndoableCommand) command);"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * Pops and returns the next {@code UndoableCommand} to be undone in the stack."},{"lineNumber":32,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public UndoableCommand popUndo() {"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        return undoStack.pop();"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * Returns true if there are more commands that can be undone."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public boolean canUndo() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return !undoStack.empty();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        if (!(other instanceof UndoStack)) {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        UndoStack stack \u003d (UndoStack) other;"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"        // state check"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        return undoStack.equals(stack.undoStack);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":7,"-":54}},{"path":"src/main/java/seedu/address/network/api/google/GoogleBooksApi.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletionException;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import java.util.function.Function;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.HttpClient;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.network.HttpResponse;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":" * Provides access to the Google Books API."},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"public class GoogleBooksApi {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    protected static final String URL_SEARCH_BOOKS \u003d"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            \"https://www.googleapis.com/books/v1/volumes?maxResults\u003d30\u0026printType\u003dbooks\u0026q\u003d%s\";"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    protected static final String URL_BOOK_DETAILS \u003d \"https://www.googleapis.com/books/v1/volumes/%s\";"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private static final String CONTENT_TYPE_JSON \u003d \"application/json\";"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private static final int HTTP_STATUS_OK \u003d 200;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private final HttpClient httpClient;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private final JsonDeserializer deserializer;"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    public GoogleBooksApi(HttpClient httpClient) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        requireNonNull(httpClient);"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        this.httpClient \u003d httpClient;"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        this.deserializer \u003d new JsonDeserializer();"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     * Searches for books on Google Books that matches a set of parameters."},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"     * @param parameters search parameters."},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     * @return a CompletableFuture that resolves to a ReadOnlyBookShelf."},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    public CompletableFuture\u003cReadOnlyBookShelf\u003e searchBooks(String parameters) {"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        String requestUrl \u003d String.format(URL_SEARCH_BOOKS, StringUtil.urlEncode(parameters));"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        return executeGetAndApply(requestUrl, deserializer::convertJsonStringToBookShelf);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"     * Retrieves the details of a single book on Google Books."},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"     * @param bookId the ID of the book on Google Books."},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"     * @return a CompletableFuture that resolves to a Book."},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    public CompletableFuture\u003cBook\u003e getBookDetails(String bookId) {"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        String requestUrl \u003d String.format(URL_BOOK_DETAILS, StringUtil.urlEncode(bookId));"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        return executeGetAndApply(requestUrl, deserializer::convertJsonStringToBook);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"     * Asynchronously executes a HTTP GET request to the specified url and"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"     * applies the specified function to transform the resulting response body."},{"lineNumber":61,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":62,"author":{"gitID":"-"},"content":"     * @param url the url used for the GET request."},{"lineNumber":63,"author":{"gitID":"-"},"content":"     * @param fn the function that will be applied on the response body of the GET request."},{"lineNumber":64,"author":{"gitID":"-"},"content":"     * @param \u003cT\u003e the return type of the function to be applied."},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * @return a CompleteableFuture that resolves to the result of the given function."},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    private \u003cT\u003e CompletableFuture\u003cT\u003e executeGetAndApply(String url, Function\u003cString, ? extends T\u003e fn) {"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        return httpClient"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"                .makeGetRequest(url)"},{"lineNumber":70,"author":{"gitID":"-"},"content":"                .thenApply(GoogleBooksApi::requireJsonContentType)"},{"lineNumber":71,"author":{"gitID":"-"},"content":"                .thenApply(GoogleBooksApi::requireHttpStatusOk)"},{"lineNumber":72,"author":{"gitID":"-"},"content":"                .thenApply(HttpResponse::getResponseBody)"},{"lineNumber":73,"author":{"gitID":"-"},"content":"                .thenApply(fn);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"-"},"content":"     * Throws a {@link CompletionException} if the content type of the response is not JSON."},{"lineNumber":78,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    private static HttpResponse requireJsonContentType(HttpResponse response) {"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        if (!response.getContentType().startsWith(CONTENT_TYPE_JSON)) {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"            throw new CompletionException("},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"                    new IOException(\"Unexpected content type \" + response.getContentType()));"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        return response;"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"-"},"content":"     * Throws a {@link CompletionException} if the HTTP status code of the response is not {@code 200: OK}."},{"lineNumber":89,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    private static HttpResponse requireHttpStatusOk(HttpResponse response) {"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        if (response.getStatusCode() !\u003d HTTP_STATUS_OK) {"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"            throw new CompletionException("},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"                    new IOException(\"Get request failed with status code \" + response.getStatusCode()));"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        return response;"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":70,"-":27}},{"path":"src/main/java/seedu/address/logic/Logic.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"-"},"content":" * API of the Logic component"},{"lineNumber":11,"author":{"gitID":"-"},"content":" */"},{"lineNumber":12,"author":{"gitID":"-"},"content":"public interface Logic {"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"-"},"content":"     * Executes the command and returns the result."},{"lineNumber":15,"author":{"gitID":"-"},"content":"     * @param commandText The command as entered by the user."},{"lineNumber":16,"author":{"gitID":"-"},"content":"     * @return the result of the command execution."},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * @throws CommandException If an error occurs during command execution."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * @throws ParseException If an error occurs during parsing."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    /** Returns an unmodifiable view of the filtered list of books */"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    /** Returns an unmodifiable view of the search results list. */"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    ObservableList\u003cBook\u003e getSearchResultsList();"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    /** Returns an unmodifiable view of the recently selected books list. */"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    ObservableList\u003cBook\u003e getRecentBooksList();"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    /** Returns the list of input entered by the user, encapsulated in a {@code ListElementPointer} object */"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    ListElementPointer getHistorySnapshot();"},{"lineNumber":33,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"takuyakanbr":3,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * Parses input arguments and creates a new AddCommand object"},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitID":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * and returns an AddCommand object for execution."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":19,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    public AddCommand parse(String args) throws ParseException {"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"            Index index \u003d ParserUtil.parseIndex(args);"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"            return new AddCommand(index);"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"            throw new ParseException("},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":8,"-":21}},{"path":"src/main/java/seedu/address/network/api/google/JsonBookDetails.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import java.util.Set;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Gid;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Isbn;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.PublicationDate;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Publisher;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.InvalidBookException;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.util.BookDataUtil;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"-"},"content":" * A temporary data holder used for deserialization of the JSON response"},{"lineNumber":20,"author":{"gitID":"-"},"content":" * from the book details endpoint of Google Books API."},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class JsonBookDetails {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private int error \u003d 0;"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private String id \u003d \"\";"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private JsonVolumeInfo volumeInfo \u003d new JsonVolumeInfo();"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    // This should fail if the API returns an error, due to incompatible types."},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    public void setError(int error) {"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        this.error \u003d error;"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    public void setId(String id) {"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        this.id \u003d id;"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public void setVolumeInfo(JsonVolumeInfo volumeInfo) {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        this.volumeInfo \u003d volumeInfo;"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * Converts this data holder object into the model\u0027s Book object."},{"lineNumber":42,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public Book toModelType() throws InvalidBookException {"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        Isbn isbn \u003d getIsbnFromIndustryIdentifiers(volumeInfo.industryIdentifiers);"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        if (isbn \u003d\u003d null) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"            throw new InvalidBookException(\"No ISBN is found for the book.\");"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        return new Book(new Gid(id), isbn,"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"                BookDataUtil.getAuthorSet(volumeInfo.authors), new Title(volumeInfo.title),"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"                getCategorySet(volumeInfo.categories), getDescription(volumeInfo.description),"},{"lineNumber":53,"author":{"gitID":"-"},"content":"                new Publisher(volumeInfo.publisher),"},{"lineNumber":54,"author":{"gitID":"-"},"content":"                new PublicationDate(volumeInfo.publishedDate));"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    private static Isbn getIsbnFromIndustryIdentifiers(JsonIndustryIdentifiers[] iiArray) {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        return Stream.of(iiArray)"},{"lineNumber":59,"author":{"gitID":"-"},"content":"                .filter(ii -\u003e ii.type.equals(\"ISBN_13\"))"},{"lineNumber":60,"author":{"gitID":"-"},"content":"                .findFirst()"},{"lineNumber":61,"author":{"gitID":"-"},"content":"                .map(ii -\u003e new Isbn(ii.identifier))"},{"lineNumber":62,"author":{"gitID":"-"},"content":"                .orElse(null);"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    private static Set\u003cCategory\u003e getCategorySet(String[] categories) {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        return Stream.of(categories)"},{"lineNumber":67,"author":{"gitID":"-"},"content":"                .flatMap(category -\u003e Stream.of(category.split(\"/\")))"},{"lineNumber":68,"author":{"gitID":"-"},"content":"                .map(token -\u003e new Category(token.trim()))"},{"lineNumber":69,"author":{"gitID":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"    private static Description getDescription(String description) {"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        return new Description(description.replaceAll(\"\u003cbr\u003e\", \"\\n\"));"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"    private static class JsonVolumeInfo {"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        private String title \u003d \"\";"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        private String[] authors \u003d new String[0];"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        private String publisher \u003d \"\";"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        private String publishedDate \u003d \"\";"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        private String description \u003d \"\";"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"        private JsonIndustryIdentifiers[] industryIdentifiers \u003d new JsonIndustryIdentifiers[0];"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        private String[] categories \u003d new String[0];"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"        public void setIndustryIdentifiers(JsonIndustryIdentifiers[] industryIdentifiers) {"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"            this.industryIdentifiers \u003d industryIdentifiers;"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        public void setTitle(String title) {"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"            this.title \u003d title;"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        public void setAuthors(String[] authors) {"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"            this.authors \u003d authors;"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"        public void setPublisher(String publisher) {"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"            this.publisher \u003d publisher;"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        public void setPublishedDate(String publishedDate) {"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"            this.publishedDate \u003d publishedDate;"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"        public void setDescription(String description) {"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"            this.description \u003d description;"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        public void setCategories(String[] categories) {"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"            this.categories \u003d categories;"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"    private static class JsonIndustryIdentifiers {"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"        private String type;"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"        private String identifier;"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"        public void setIdentifier(String identifier) {"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"            this.identifier \u003d identifier;"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"        public void setType(String type) {"},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"            this.type \u003d type;"},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":38,"takuyakanbr":65,"-":26}},{"path":"src/main/java/seedu/address/network/HttpClient.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import java.util.logging.Logger;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import org.asynchttpclient.AsyncHttpClient;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.asynchttpclient.Dsl;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"-"},"content":" * A wrapper around the {@link AsyncHttpClient} class from async-http-client."},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"public class HttpClient {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HttpClient.class);"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private static final int CONNECTION_TIMEOUT_MILLIS \u003d 1000 * 5; // 5 seconds"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    private static final int READ_TIMEOUT_MILLIS \u003d 1000 * 5; // 5 seconds"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    private static final int REQUEST_TIMEOUT_MILLIS \u003d 1000 * 5; // 5 seconds"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private final AsyncHttpClient asyncHttpClient;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    protected HttpClient() {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        this.asyncHttpClient \u003d Dsl.asyncHttpClient(Dsl.config()"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"                .setConnectTimeout(CONNECTION_TIMEOUT_MILLIS)"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"                .setReadTimeout(READ_TIMEOUT_MILLIS)"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"                .setRequestTimeout(REQUEST_TIMEOUT_MILLIS));"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    protected HttpClient(AsyncHttpClient asyncHttpClient) {"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        requireNonNull(asyncHttpClient);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        this.asyncHttpClient \u003d asyncHttpClient;"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"     * Asynchronously executes a HTTP GET request to the specified url."},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    public CompletableFuture\u003cHttpResponse\u003e makeGetRequest(String url) {"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        return asyncHttpClient"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"                .prepareGet(url)"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"                .execute()"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"                .toCompletableFuture()"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"                .thenApply(HttpResponse::new);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * Stops and closes the underlying {@link AsyncHttpClient}."},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    public void close() {"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"            if (!asyncHttpClient.isClosed()) {"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"                asyncHttpClient.close();"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"            }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        } catch (IOException e) {"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"            logger.warning(\"Failed to shut down AsyncHttpClient.\");"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":50,"-":11}},{"path":"src/main/java/seedu/address/network/api/google/JsonSearchResults.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Gid;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Isbn;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.PublicationDate;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Publisher;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.InvalidBookException;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.util.BookDataUtil;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"-"},"content":" * A temporary data holder used for deserialization of the JSON response"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * from the book searching endpoint of Google Books API."},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class JsonSearchResults {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSearchResults.class);"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private int error \u003d 0;"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private int totalItems \u003d 0;"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    private JsonVolume[] items \u003d new JsonVolume[0];"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    // This should fail if the API returns an error, due to incompatible types."},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public void setError(int error) {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        this.error \u003d error;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public void setTotalItems(int totalItems) {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        this.totalItems \u003d totalItems;"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    public void setItems(JsonVolume[] items) {"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        this.items \u003d items;"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":46,"author":{"gitID":"-"},"content":"     * Converts this data holder object into the model\u0027s BookShelf object."},{"lineNumber":47,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public ReadOnlyBookShelf toModelType() {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d new BookShelf();"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        for (JsonVolume volume : items) {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"            try {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"                Book book \u003d convertToBook(volume);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"                bookShelf.addBook(book);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            } catch (InvalidBookException | DuplicateBookException e) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"                logger.warning(e.getMessage());"},{"lineNumber":57,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelf;"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":63,"author":{"gitID":"-"},"content":"     * Converts a JsonVolume into a Book."},{"lineNumber":64,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    private static Book convertToBook(JsonVolume volume) throws InvalidBookException {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        JsonVolumeInfo volumeInfo \u003d volume.volumeInfo;"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        Isbn isbn \u003d getIsbnFromIndustryIdentifiers(volumeInfo.industryIdentifiers);"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        if (isbn \u003d\u003d null) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            throw new InvalidBookException(\"Found book without ISBN\");"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        return new Book(new Gid(volume.id), isbn,"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"                BookDataUtil.getAuthorSet(volumeInfo.authors), new Title(volumeInfo.title),"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"                BookDataUtil.getCategorySet(volumeInfo.categories), new Description(volumeInfo.description),"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"                new Publisher(volumeInfo.publisher), new PublicationDate(volumeInfo.publishedDate));"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"    private static Isbn getIsbnFromIndustryIdentifiers(JsonIndustryIdentifiers[] iiArray) {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        return Stream.of(iiArray)"},{"lineNumber":81,"author":{"gitID":"-"},"content":"                .filter(ii -\u003e ii.type.equals(\"ISBN_13\"))"},{"lineNumber":82,"author":{"gitID":"-"},"content":"                .findFirst()"},{"lineNumber":83,"author":{"gitID":"-"},"content":"                .map(ii -\u003e new Isbn(ii.identifier))"},{"lineNumber":84,"author":{"gitID":"-"},"content":"                .orElse(null);"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"    private static class JsonVolume {"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        private String id \u003d \"\";"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        private JsonVolumeInfo volumeInfo \u003d new JsonVolumeInfo();"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"        public void setId(String id) {"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"            this.id \u003d id;"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        public void setVolumeInfo(JsonVolumeInfo volumeInfo) {"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"            this.volumeInfo \u003d volumeInfo;"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"    private static class JsonVolumeInfo {"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        private String title \u003d \"\";"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"        private String[] authors \u003d new String[0];"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"        private String publisher \u003d \"\";"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"        private String publishedDate \u003d \"\";"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"        private String description \u003d \"\";"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"        private JsonIndustryIdentifiers[] industryIdentifiers \u003d new JsonIndustryIdentifiers[0];"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        private String[] categories \u003d new String[0];"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"        public void setIndustryIdentifiers(JsonIndustryIdentifiers[] industryIdentifiers) {"},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"            this.industryIdentifiers \u003d industryIdentifiers;"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"        public void setTitle(String title) {"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"            this.title \u003d title;"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"        public void setAuthors(String[] authors) {"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"            this.authors \u003d authors;"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"        public void setPublisher(String publisher) {"},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"            this.publisher \u003d publisher;"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":"        public void setPublishedDate(String publishedDate) {"},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":"            this.publishedDate \u003d publishedDate;"},{"lineNumber":130,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":131,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":132,"author":{"gitID":"takuyakanbr"},"content":"        public void setDescription(String description) {"},{"lineNumber":133,"author":{"gitID":"takuyakanbr"},"content":"            this.description \u003d description;"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":135,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"        public void setCategories(String[] categories) {"},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"            this.categories \u003d categories;"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":139,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":141,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":142,"author":{"gitID":"qiu-siqi"},"content":"    private static class JsonIndustryIdentifiers {"},{"lineNumber":143,"author":{"gitID":"qiu-siqi"},"content":"        private String type;"},{"lineNumber":144,"author":{"gitID":"qiu-siqi"},"content":"        private String identifier;"},{"lineNumber":145,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":146,"author":{"gitID":"qiu-siqi"},"content":"        public void setIdentifier(String identifier) {"},{"lineNumber":147,"author":{"gitID":"qiu-siqi"},"content":"            this.identifier \u003d identifier;"},{"lineNumber":148,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":149,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":150,"author":{"gitID":"qiu-siqi"},"content":"        public void setType(String type) {"},{"lineNumber":151,"author":{"gitID":"qiu-siqi"},"content":"            this.type \u003d type;"},{"lineNumber":152,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":153,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":154,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":31,"takuyakanbr":94,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"},{"lineNumber":5,"author":{"gitID":"-"},"content":" */"},{"lineNumber":6,"author":{"gitID":"-"},"content":"public class CliSyntax {"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"    /* Prefix definitions */"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"    public static final Prefix PREFIX_AUTHOR \u003d new Prefix(\"a/\");"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public static final Prefix PREFIX_ISBN \u003d new Prefix(\"i/\");"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"t/\");"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    public static final Prefix PREFIX_RATING \u003d new Prefix(\"r/\");"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"takuyakanbr":3,"-":9}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.book.Rating;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes."},{"lineNumber":21,"author":{"gitID":"-"},"content":" * {@code ParserUtil} contains methods that take in {@code Optional} as parameters. However, it goes against Java\u0027s"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * convention (see https://stackoverflow.com/a/39005452) as {@code Optional} should only be used a return type."},{"lineNumber":23,"author":{"gitID":"-"},"content":" * Justification: The methods in concern receive {@code Optional} return values from other methods as parameters and"},{"lineNumber":24,"author":{"gitID":"-"},"content":" * return {@code Optional} values based on whether the parameters were present. Therefore, it is redundant to unwrap the"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * initial {@code Optional} before passing to {@code ParserUtil} as a parameter and then re-wrap it into an"},{"lineNumber":26,"author":{"gitID":"-"},"content":" * {@code Optional} return value inside {@code ParserUtil} methods."},{"lineNumber":27,"author":{"gitID":"-"},"content":" */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"public class ParserUtil {"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_INSUFFICIENT_PARTS \u003d \"Number of parts must be more than 1.\";"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":34,"author":{"gitID":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * trimmed."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if the specified index is invalid (not non-zero unsigned integer)."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws IllegalValueException {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(MESSAGE_INVALID_INDEX);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code String title} into a {@code Title}."},{"lineNumber":48,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"    public static Title parseTitle(String title) {"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(title);"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        String trimmedTitle \u003d title.trim();"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        return new Title(trimmedTitle);"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code Optional\u003cString\u003e title} into an {@code Optional\u003cTitle\u003e} if {@code title} is present."},{"lineNumber":58,"author":{"gitID":"-"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":59,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    public static Optional\u003cTitle\u003e parseTitle(Optional\u003cString\u003e title) {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(title);"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        return title.isPresent() ? Optional.of(parseTitle(title.get())) : Optional.empty();"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code String author} into a {@code Author}."},{"lineNumber":67,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"    public static Author parseAuthor(String author) {"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(author);"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        String trimmedAuthor \u003d author.trim();"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        return new Author(trimmedAuthor);"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"     * Parses {@code Collection\u003cString\u003e authors} into a {@code Set\u003cAuthor\u003e}."},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"    public static Set\u003cAuthor\u003e parseAuthors(Collection\u003cString\u003e authors) {"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(authors);"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        final Set\u003cAuthor\u003e authorSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"        for (String author : authors) {"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"            authorSet.add(parseAuthor(author));"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"        return authorSet;"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code String category} into a {@code Category}."},{"lineNumber":89,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"    public static Category parseCategory(String category) {"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(category);"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"        String trimmedCategory \u003d category.trim();"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"        return new Category(trimmedCategory);"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"     * Parses {@code Collection\u003cString\u003e categories} into a {@code Set\u003cCategory\u003e}."},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"    public static Set\u003cCategory\u003e parseCategories(Collection\u003cString\u003e categories) {"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(categories);"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"        final Set\u003cCategory\u003e categorySet \u003d new HashSet\u003c\u003e();"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"        for (String category : categories) {"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"            categorySet.add(parseCategory(category));"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"        return categorySet;"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code String description} into a {@code Description}."},{"lineNumber":111,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"    public static Description parseDescription(String description) {"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(description);"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"        String trimmedDescription \u003d description.trim();"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"        return new Description(trimmedDescription);"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code Optional\u003cString\u003e description} into an {@code Optional\u003cDescription\u003e}"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"     * if {@code description} is present."},{"lineNumber":122,"author":{"gitID":"-"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":123,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"    public static Optional\u003cDescription\u003e parseDescription(Optional\u003cString\u003e description) {"},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(description);"},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"        return description.isPresent() ? Optional.of(parseDescription(description.get())) : Optional.empty();"},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":129,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":130,"author":{"gitID":"-"},"content":"     * Parses a {@code String rating} into a {@code Rating}."},{"lineNumber":131,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":132,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    public static Rating parseRating(int rating) {"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        requireNonNull(rating);"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        return new Rating(rating);"},{"lineNumber":136,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"-"},"content":""},{"lineNumber":138,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":139,"author":{"gitID":"-"},"content":"     * Parses a {@code Optional\u003cString\u003e rating} into an {@code Optional\u003cRating\u003e}"},{"lineNumber":140,"author":{"gitID":"-"},"content":"     * if {@code rating} is present."},{"lineNumber":141,"author":{"gitID":"-"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":142,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":143,"author":{"gitID":"-"},"content":"    public static Optional\u003cRating\u003e parseRating(Optional\u003cInteger\u003e rating) {"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        requireNonNull(rating);"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        return rating.isPresent() ? Optional.of(parseRating(rating.get())) : Optional.empty();"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":80,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ActiveListType;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":" * Deletes a book identified using it\u0027s last displayed index from the book shelf."},{"lineNumber":17,"author":{"gitID":"-"},"content":" */"},{"lineNumber":18,"author":{"gitID":"-"},"content":"public class DeleteCommand extends UndoableCommand {"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"            + \": Deletes the book identified by the index number used in the current book listing.\\n\""},{"lineNumber":24,"author":{"gitID":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\""},{"lineNumber":25,"author":{"gitID":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_DELETE_BOOK_SUCCESS \u003d \"Deleted Book: %1$s\";"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    public static final String MESSAGE_WRONG_ACTIVE_LIST \u003d \"Items from the current list cannot be deleted.\";"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private final Index targetIndex;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    private Book bookToDelete;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public DeleteCommand(Index targetIndex) {"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(bookToDelete);"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        if (model.getActiveListType() !\u003d ActiveListType.BOOK_SHELF) {"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"            throw new CommandException(MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"            model.deleteBook(bookToDelete);"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        } catch (BookNotFoundException pnfe) {"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"            throw new AssertionError(\"The target book cannot be missing\");"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete));"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBook\u003e lastShownList \u003d model.getFilteredBookList();"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"        bookToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":69,"author":{"gitID":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls"},{"lineNumber":70,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.targetIndex.equals(((DeleteCommand) other).targetIndex) // state check"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(this.bookToDelete, ((DeleteCommand) other).bookToDelete));"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":14,"takuyakanbr":7,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.SwitchToBookListRequestEvent;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":" * Lists all books in the book shelf to the user."},{"lineNumber":10,"author":{"gitID":"-"},"content":" */"},{"lineNumber":11,"author":{"gitID":"-"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all books\";"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        EventsCenter.getInstance().post(new SwitchToBookListRequestEvent());"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"takuyakanbr":3,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ActiveListType;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"-"},"content":" * Clears the address book."},{"lineNumber":11,"author":{"gitID":"-"},"content":" */"},{"lineNumber":12,"author":{"gitID":"-"},"content":"public class ClearCommand extends UndoableCommand {"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Book shelf has been cleared!\";"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    public static final String MESSAGE_WRONG_ACTIVE_LIST \u003d \"Items from the current list cannot be cleared.\";"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        requireNonNull(model);"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"        if (model.getActiveListType() !\u003d ActiveListType.BOOK_SHELF) {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"            throw new CommandException(MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        model.resetData(new BookShelf());"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"takuyakanbr":6,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed."},{"lineNumber":11,"author":{"gitID":"-"},"content":" */"},{"lineNumber":12,"author":{"gitID":"-"},"content":"public abstract class Command {"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    protected Model model;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    protected CommandHistory history;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    protected UndoStack undoStack;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"     * Constructs a feedback message to summarise an operation that displayed a listing of books."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":20,"author":{"gitID":"-"},"content":"     * @param displaySize used to generate summary"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"     * @return summary message for books displayed"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    public static String getMessageForBookListShownSummary(int displaySize) {"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"        return String.format(Messages.MESSAGE_BOOKS_LISTED_OVERVIEW, displaySize);"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * Executes the command and returns the result message."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":30,"author":{"gitID":"-"},"content":"     * @return feedback message of the operation result for display"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * @throws CommandException If an error occurs during command execution."},{"lineNumber":32,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public abstract CommandResult execute() throws CommandException;"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * Provides any needed dependencies to the command."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * Commands making use of any of these should override this method to gain"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * access to the dependencies."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"    public void setData(Model model, CommandHistory history, UndoStack undoStack) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        this.model \u003d model;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":7,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.network.ApiBookDetailsRequestEvent;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":" * Adds a book to the book shelf."},{"lineNumber":17,"author":{"gitID":"-"},"content":" */"},{"lineNumber":18,"author":{"gitID":"-"},"content":"public class AddCommand extends UndoableCommand {"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"            + \": Adds the book identified by the index number used in the current search result.\\n\""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\""},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_ADDING \u003d \"Adding the book into your book shelf...\";"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_ADD_FAIL \u003d \"Failed to add book into your book shelf. \""},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"            + \"Make sure you are connected to the Internet.\";"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New book added: %1$s\";"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_DUPLICATE_BOOK \u003d \"This book already exists in the book shelf\";"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_WRONG_ACTIVE_LIST \u003d \"Items from the current list cannot be added.\";"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    private final Index targetIndex;"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    private Book toAdd;"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    public AddCommand(Index targetIndex) {"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(targetIndex);"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(toAdd);"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        EventsCenter.getInstance().post(new ApiBookDetailsRequestEvent(toAdd.getGid().gid));"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        return new CommandResult(MESSAGE_ADDING);"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        requireNonNull(model);"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        switch (model.getActiveListType()) {"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        case SEARCH_RESULTS:"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"        {"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"            List\u003cBook\u003e searchResultsList \u003d model.getSearchResultsList();"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d searchResultsList.size()) {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"            toAdd \u003d searchResultsList.get(targetIndex.getZeroBased());"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"            break;"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        case RECENT_BOOKS:"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"        {"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"            List\u003cBook\u003e recentBooksList \u003d model.getRecentBooksList();"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d recentBooksList.size()) {"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":73,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"            toAdd \u003d recentBooksList.get(targetIndex.getZeroBased());"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"            break;"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"        default:"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"            throw new CommandException(MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":86,"author":{"gitID":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 this.targetIndex.equals(((AddCommand) other).targetIndex)"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(this.toAdd, ((AddCommand) other).toAdd));"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":52,"takuyakanbr":3,"-":35}},{"path":"src/main/java/seedu/address/logic/parser/BookShelfParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ExitCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HelpCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.commands.RecentCommand;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ThemeCommand;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * Parses user input."},{"lineNumber":26,"author":{"gitID":"-"},"content":" */"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"public class BookShelfParser {"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"-"},"content":"     * Used for initial separation of command word and args."},{"lineNumber":31,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * Parses user input into command for execution."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * @param userInput full user input string"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * @return the command based on the user input"},{"lineNumber":39,"author":{"gitID":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        if (!matcher.matches()) {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        switch (commandWord) {"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        case AddCommand.COMMAND_WORD:"},{"lineNumber":53,"author":{"gitID":"-"},"content":"            return new AddCommandParser().parse(arguments);"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"        case ClearCommand.COMMAND_WORD:"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            return new ClearCommand();"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        case DeleteCommand.COMMAND_WORD:"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"            return new DeleteCommandParser().parse(arguments);"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"        case ExitCommand.COMMAND_WORD:"},{"lineNumber":62,"author":{"gitID":"-"},"content":"            return new ExitCommand();"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"        case HelpCommand.COMMAND_WORD:"},{"lineNumber":65,"author":{"gitID":"-"},"content":"            return new HelpCommand();"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        case HistoryCommand.COMMAND_WORD:"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            return new HistoryCommand();"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        case ListCommand.COMMAND_WORD:"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"            return new ListCommand();"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        case RecentCommand.COMMAND_WORD:"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"            return new RecentCommand();"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        case SearchCommand.COMMAND_WORD:"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"            return new SearchCommandParser().parse(arguments);"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        case SelectCommand.COMMAND_WORD:"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"            return new SelectCommandParser().parse(arguments);"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"        case ThemeCommand.COMMAND_WORD:"},{"lineNumber":83,"author":{"gitID":"-"},"content":"            return new ThemeCommandParser().parse(arguments);"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"        case UndoCommand.COMMAND_WORD:"},{"lineNumber":86,"author":{"gitID":"-"},"content":"            return new UndoCommand();"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"        default:"},{"lineNumber":89,"author":{"gitID":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"takuyakanbr":15,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/ThemeCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Theme;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.InvalidThemeException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ThemeCommand;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * Parses input arguments and creates a new ThemeCommand object."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"-"},"content":"public class ThemeCommandParser implements Parser\u003cThemeCommand\u003e {"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitID":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the ThemeCommand"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * and returns a ThemeCommand object for execution."},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"     * @throws ParseException if the user input does not conform the expected format."},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public ThemeCommand parse(String args) throws ParseException {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        String themeName \u003d args.trim();"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        if (themeName.length() \u003d\u003d 0) {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE));"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"            Theme newTheme \u003d Theme.getThemeByName(themeName);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"            return new ThemeCommand(newTheme);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        } catch (InvalidThemeException e) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(ThemeCommand.MESSAGE_INVALID_THEME, themeName));"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":3,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/SearchCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" * Parses input arguments and creates a new SearchCommand object."},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"public class SearchCommandParser implements Parser\u003cSearchCommand\u003e {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     * Parses the given {@code String} of arguments in the context of the SearchCommand"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"     * and returns a SearchCommand object for execution."},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"     * @throws ParseException if the user input does not conform the expected format."},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    public SearchCommand parse(String args) throws ParseException {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ISBN, PREFIX_TITLE, PREFIX_AUTHOR, PREFIX_CATEGORY);"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        SearchCommand.SearchDescriptor searchDescriptor \u003d new SearchCommand.SearchDescriptor();"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        String searchTerm \u003d argMultimap.getPreamble();"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        if (searchTerm.length() \u003e 0) {"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"            searchDescriptor.setSearchTerm(searchTerm);"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        argMultimap.getValue(PREFIX_ISBN).ifPresent(searchDescriptor::setIsbn);"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        argMultimap.getValue(PREFIX_TITLE).ifPresent(searchDescriptor::setTitle);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        argMultimap.getValue(PREFIX_AUTHOR).ifPresent(searchDescriptor::setAuthor);"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        argMultimap.getValue(PREFIX_CATEGORY).ifPresent(searchDescriptor::setCategory);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        if (!searchDescriptor.isValid()) {"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"            throw new ParseException(SearchCommand.MESSAGE_EMPTY_QUERY);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        return new SearchCommand(searchDescriptor);"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"takuyakanbr":36,"-":4}},{"path":"src/main/java/seedu/address/logic/commands/HistoryCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Lists all the commands entered by user from the start of app launch."},{"lineNumber":14,"author":{"gitID":"-"},"content":" */"},{"lineNumber":15,"author":{"gitID":"-"},"content":"public class HistoryCommand extends Command {"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"history\";"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Entered commands (from most recent to earliest):\\n%1$s\";"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_NO_HISTORY \u003d \"You have not yet entered any commands.\";"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        List\u003cString\u003e previousCommands \u003d history.getHistory();"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"        if (previousCommands.isEmpty()) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"            return new CommandResult(MESSAGE_NO_HISTORY);"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"        Collections.reverse(previousCommands);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, String.join(\"\\n\", previousCommands)));"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    public void setData(Model model, CommandHistory history, UndoStack undoStack) {"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        requireNonNull(history);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        this.history \u003d history;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/SelectCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.JumpToBookListIndexRequestEvent;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.JumpToRecentBooksIndexRequestEvent;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.JumpToSearchResultsIndexRequestEvent;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":" * Selects a book identified using it\u0027s last displayed index from the book shelf."},{"lineNumber":16,"author":{"gitID":"-"},"content":" */"},{"lineNumber":17,"author":{"gitID":"-"},"content":"public class SelectCommand extends Command {"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"select\";"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            + \": Selects the book identified by the index number in the current book listing.\\n\""},{"lineNumber":23,"author":{"gitID":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\""},{"lineNumber":24,"author":{"gitID":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_SELECT_BOOK_SUCCESS \u003d \"Selected Book: %1$s\";"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public static final String MESSAGE_WRONG_ACTIVE_LIST \u003d \"Items from the current list cannot be selected.\";"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private final Index targetIndex;"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public SelectCommand(Index targetIndex) {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        switch (model.getActiveListType()) {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        case BOOK_SHELF:"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        {"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"            List\u003cBook\u003e filteredBookList \u003d model.getFilteredBookList();"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d filteredBookList.size()) {"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"            model.addRecentBook(filteredBookList.get(targetIndex.getZeroBased()));"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"            EventsCenter.getInstance().post(new JumpToBookListIndexRequestEvent(targetIndex));"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"            break;"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        case SEARCH_RESULTS:"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"            List\u003cBook\u003e searchResultsList \u003d model.getSearchResultsList();"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d searchResultsList.size()) {"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"            model.addRecentBook(searchResultsList.get(targetIndex.getZeroBased()));"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"            EventsCenter.getInstance().post(new JumpToSearchResultsIndexRequestEvent(targetIndex));"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"            break;"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        case RECENT_BOOKS:"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"        {"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"            List\u003cBook\u003e recentBooksList \u003d model.getRecentBooksList();"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d recentBooksList.size()) {"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"            EventsCenter.getInstance().post(new JumpToRecentBooksIndexRequestEvent(targetIndex));"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"            break;"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        default:"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"            throw new CommandException(MESSAGE_WRONG_ACTIVE_LIST);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_BOOK_SUCCESS, targetIndex.getOneBased()));"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":84,"author":{"gitID":"-"},"content":"                || (other instanceof SelectCommand // instanceof handles nulls"},{"lineNumber":85,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.targetIndex.equals(((SelectCommand) other).targetIndex)); // state check"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":18,"takuyakanbr":24,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/UndoableCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":" * Represents a command which can be undone."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public abstract class UndoableCommand extends Command {"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    private ReadOnlyBookShelf previousBookShelf;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    protected abstract CommandResult executeUndoableCommand() throws CommandException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"     * Stores the current state of {@code model#bookShelf}."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    private void saveBookShelfSnapshot() {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        requireNonNull(model);"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"        this.previousBookShelf \u003d new BookShelf(model.getBookShelf());"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * This method is called before the execution of {@code UndoableCommand}."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     * {@code UndoableCommand}s that require this preprocessing step should override this method."},{"lineNumber":30,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {}"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"     * Reverts the BookShelf to the state before this command"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"     * was executed and updates the filtered book list to"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"     * show all books."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    protected final void undo() {"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        requireAllNonNull(model, previousBookShelf);"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        model.resetData(previousBookShelf);"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public final CommandResult execute() throws CommandException {"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        saveBookShelfSnapshot();"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        preprocessUndoableCommand();"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        return executeUndoableCommand();"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":15,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Terminates the program."},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class ExitCommand extends Command {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Bibliotek as requested ...\";"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"        EventsCenter.getInstance().post(new ExitAppRequestEvent());"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT);"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"-":20}},{"path":"src/main/java/seedu/address/storage/Storage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * API of the Storage component"},{"lineNumber":14,"author":{"gitID":"-"},"content":" */"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"public interface Storage extends BookShelfStorage, UserPrefsStorage, RecentBooksStorage {"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    void saveUserPrefs(UserPrefs userPrefs) throws IOException;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    String getBookShelfFilePath();"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    Optional\u003cReadOnlyBookShelf\u003e readBookShelf() throws DataConversionException, IOException;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    void saveBookShelf(ReadOnlyBookShelf bookShelf) throws IOException;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"    Optional\u003cReadOnlyBookShelf\u003e readRecentBooksList() throws DataConversionException, IOException;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    void saveRecentBooksList(ReadOnlyBookShelf recentBooksList) throws IOException;"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"     * Saves the current version of the Book Shelf to the hard disk. Creates a new file if it is missing."},{"lineNumber":40,"author":{"gitID":"-"},"content":"     * Raises {@link DataSavingExceptionEvent} if there was an error during saving."},{"lineNumber":41,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    void handleBookShelfChangedEvent(BookShelfChangedEvent bsce);"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":7,"takuyakanbr":15,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.SwitchToBookListRequestEvent;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.logic.UndoStack;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Undo the previous {@code UndoableCommand}."},{"lineNumber":14,"author":{"gitID":"-"},"content":" */"},{"lineNumber":15,"author":{"gitID":"-"},"content":"public class UndoCommand extends Command {"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo success!\";"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to undo!\";"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        requireAllNonNull(model, undoStack);"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        if (!undoStack.canUndo()) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"            throw new CommandException(MESSAGE_FAILURE);"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"        undoStack.popUndo().undo();"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        EventsCenter.getInstance().post(new SwitchToBookListRequestEvent());"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    public void setData(Model model, CommandHistory commandHistory, UndoStack undoStack) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        this.model \u003d model;"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        this.undoStack \u003d undoStack;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"takuyakanbr":2,"-":31}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.network.ApiBookDetailsResultEvent;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiSearchResultEvent;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.NewResultAvailableEvent;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.SwitchToBookListRequestEvent;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.SwitchToRecentBooksRequestEvent;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.SwitchToSearchResultsRequestEvent;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SearchCommand;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.parser.BookShelfParser;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ActiveListType;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":31,"author":{"gitID":"-"},"content":" * The main LogicManager of the app."},{"lineNumber":32,"author":{"gitID":"-"},"content":" */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"public class LogicManager extends ComponentManager implements Logic {"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private final Model model;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private final CommandHistory history;"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    private final BookShelfParser bookShelfParser;"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    private final UndoStack undoStack;"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public LogicManager(Model model) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        this.model \u003d model;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        history \u003d new CommandHistory();"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        bookShelfParser \u003d new BookShelfParser();"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        undoStack \u003d new UndoStack();"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"            Command command \u003d bookShelfParser.parseCommand(commandText);"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"            command.setData(model, history, undoStack);"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            CommandResult result \u003d command.execute();"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"            undoStack.push(command);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            return result;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        } finally {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"            history.add(commandText);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        return model.getFilteredBookList();"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cBook\u003e getSearchResultsList() {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        return model.getSearchResultsList();"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"    public ObservableList\u003cBook\u003e getRecentBooksList() {"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"        return model.getRecentBooksList();"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    public ListElementPointer getHistorySnapshot() {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        return new ListElementPointer(history.getHistory());"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    private void handleApiSearchResultEvent(ApiSearchResultEvent event) {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        switch (event.outcome) {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        case FAILURE:"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"            raise(new NewResultAvailableEvent(SearchCommand.MESSAGE_SEARCH_FAIL));"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"            break;"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        case SUCCESS:"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"            // Updating the search results on the model will update its observable list (and hence the UI)"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"            // so this must be done on the JavaFX thread."},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"            Platform.runLater(() -\u003e {"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"                ReadOnlyBookShelf searchResults \u003d event.bookShelf;"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"                model.updateSearchResults(searchResults);"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"                raise(new SwitchToSearchResultsRequestEvent());"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"                raise(new NewResultAvailableEvent("},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"                        String.format(SearchCommand.MESSAGE_SEARCH_SUCCESS, searchResults.getBookList().size())));"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"            });"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"            break;"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        default:"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"            logger.warning(\"Unexpected ApiSearchResultEvent outcome.\");"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"            break;"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"    @Subscribe"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"    private void handleApiBookDetailsResultEvent(ApiBookDetailsResultEvent event) {"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"        switch (event.outcome) {"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        case FAILURE:"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"            raise(new NewResultAvailableEvent(AddCommand.MESSAGE_ADD_FAIL));"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"            break;"},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"        case SUCCESS:"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"            Platform.runLater(() -\u003e {"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"                Book toAdd \u003d event.book;"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"                try {"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"                    model.addBook(toAdd);"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":"                    raise(new NewResultAvailableEvent("},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"                            String.format(AddCommand.MESSAGE_SUCCESS, toAdd)));"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"                } catch (DuplicateBookException e) {"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"                    raise(new NewResultAvailableEvent(AddCommand.MESSAGE_DUPLICATE_BOOK));"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"                }"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"            });"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"            break;"},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"        default:"},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"            logger.warning(\"Unexpected ApiBookDetailsEvent outcome.\");"},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":"            break;"},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":129,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":131,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":132,"author":{"gitID":"takuyakanbr"},"content":"    private void handleShowBookListRequestEvent(SwitchToBookListRequestEvent event) {"},{"lineNumber":133,"author":{"gitID":"takuyakanbr"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"        model.setActiveListType(ActiveListType.BOOK_SHELF);"},{"lineNumber":135,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":"    private void handleShowSearchResultsRequestEvent(SwitchToSearchResultsRequestEvent event) {"},{"lineNumber":139,"author":{"gitID":"takuyakanbr"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"        model.setActiveListType(ActiveListType.SEARCH_RESULTS);"},{"lineNumber":141,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":143,"author":{"gitID":"qiu-siqi"},"content":"    @Subscribe"},{"lineNumber":144,"author":{"gitID":"qiu-siqi"},"content":"    private void handleSwitchToRecentBooksRequestEvent(SwitchToRecentBooksRequestEvent event) {"},{"lineNumber":145,"author":{"gitID":"takuyakanbr"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":146,"author":{"gitID":"qiu-siqi"},"content":"        model.setActiveListType(ActiveListType.RECENT_BOOKS);"},{"lineNumber":147,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":148,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":39,"takuyakanbr":62,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/RecentCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.SwitchToRecentBooksRequestEvent;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":" * Lists all recently selected books to the user."},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"public class RecentCommand extends Command {"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    public static final String COMMAND_WORD \u003d \"recent\";"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all recently selected books.\";"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    public CommandResult execute() {"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(model);"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        EventsCenter.getInstance().post(new SwitchToRecentBooksRequestEvent());"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":17,"-":5}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * Manages storage of AddressBook data in local storage."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class StorageManager extends ComponentManager implements Storage {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private BookShelfStorage bookShelfStorage;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private UserPrefsStorage userPrefsStorage;"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    private RecentBooksStorage recentBooksStorage;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public StorageManager(BookShelfStorage bookShelfStorage, UserPrefsStorage userPrefsStorage,"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"                          RecentBooksStorage recentBooksStorage) {"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        super();"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        this.bookShelfStorage \u003d bookShelfStorage;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        this.recentBooksStorage \u003d recentBooksStorage;"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public String getUserPrefsFilePath() {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        return userPrefsStorage.readUserPrefs();"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void saveUserPrefs(UserPrefs userPrefs) throws IOException {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BookShelf methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    public String getBookShelfFilePath() {"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelfStorage.getBookShelfFilePath();"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readBookShelf() throws DataConversionException, IOException {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        return readBookShelf(bookShelfStorage.getBookShelfFilePath());"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readBookShelf(String filePath) throws DataConversionException, IOException {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelfStorage.readBookShelf(filePath);"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf(ReadOnlyBookShelf bookShelf) throws IOException {"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        saveBookShelf(bookShelf, bookShelfStorage.getBookShelfFilePath());"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) throws IOException {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        bookShelfStorage.saveBookShelf(bookShelf, filePath);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    public void handleBookShelfChangedEvent(BookShelfChangedEvent event) {"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event, \"Local data changed, saving to file\"));"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"            saveBookShelf(event.data);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":88,"author":{"gitID":"-"},"content":"            raise(new DataSavingExceptionEvent(e));"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RecentBooks methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"    public String getRecentBooksFilePath() {"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"        return recentBooksStorage.getRecentBooksFilePath();"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readRecentBooksList() throws DataConversionException, IOException {"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        return recentBooksStorage.readRecentBooksList();"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"    public void saveRecentBooksList(ReadOnlyBookShelf recentBooksList) throws IOException {"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"        recentBooksStorage.saveRecentBooksList(recentBooksList);"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":108,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":20,"takuyakanbr":37,"-":51}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedAuthor.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlValue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" * JAXB-friendly adapted version of the Author."},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"public class XmlAdaptedAuthor {"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    @XmlValue"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    private String authorName;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs an XmlAdaptedAuthor."},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * This is the no-arg constructor that is required by JAXB."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedAuthor() {}"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code XmlAdaptedAuthor} with the given {@code authorName}."},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedAuthor(String authorName) {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        this.authorName \u003d authorName;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     * Converts a given Author into this class for JAXB use."},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"     * @param source future changes to this will not affect the created."},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedAuthor(Author source) {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        authorName \u003d source.fullName;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"     * Converts this jaxb-friendly adapted author object into the model\u0027s Author object."},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    public Author toModelType() {"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        return new Author(authorName);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof XmlAdaptedAuthor)) {"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        return authorName.equals(((XmlAdaptedAuthor) other).authorName);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":42,"-":14}},{"path":"src/main/java/seedu/address/storage/BookShelfStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":" * Represents a storage for {@link seedu.address.model.BookShelf}."},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"public interface BookShelfStorage {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the file path of the data file."},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    String getBookShelfFilePath();"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"     * Returns BookShelf data as a {@link ReadOnlyBookShelf}."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found."},{"lineNumber":22,"author":{"gitID":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format."},{"lineNumber":23,"author":{"gitID":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    Optional\u003cReadOnlyBookShelf\u003e readBookShelf() throws DataConversionException, IOException;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"     * @see #getBookShelfFilePath()"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    Optional\u003cReadOnlyBookShelf\u003e readBookShelf(String filePath) throws DataConversionException, IOException;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     * Saves the given {@link ReadOnlyBookShelf} to the storage."},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"     * @param bookShelf cannot be null."},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * @throws IOException if there was any problem writing to the file."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    void saveBookShelf(ReadOnlyBookShelf bookShelf) throws IOException;"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     * @see #saveBookShelf(ReadOnlyBookShelf)"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) throws IOException;"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":32,"-":12}},{"path":"src/main/java/seedu/address/storage/XmlSerializableBookShelf.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlElement;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":" * An Immutable BookShelf that is serializable to XML format"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"@XmlRootElement(name \u003d \"bookshelf\")"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"public class XmlSerializableBookShelf {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    private List\u003cXmlAdaptedBook\u003e books;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"     * Creates an empty XmlSerializableBookShelf."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * This empty constructor is required for marshalling."},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public XmlSerializableBookShelf() {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        books \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     * Converts a given BookShelf into this class for JAXB use."},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    public XmlSerializableBookShelf(ReadOnlyBookShelf src) {"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        this();"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        books.addAll(src.getBookList().stream().map(XmlAdaptedBook::new).collect(Collectors.toList()));"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     * Converts this bookshelf into the model\u0027s {@code BookShelf} object."},{"lineNumber":41,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated or duplicates in the"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"     * {@code XmlAdaptedBook}."},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    public BookShelf toModelType() throws IllegalValueException {"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d new BookShelf();"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        for (XmlAdaptedBook b : books) {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"            bookShelf.addBook(b.toModelType());"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelf;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof XmlSerializableBookShelf)) {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf otherBookShelf \u003d (XmlSerializableBookShelf) other;"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        return books.equals(otherBookShelf.books);"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":44,"-":22}},{"path":"src/main/java/seedu/address/storage/XmlBookShelfStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":" * A class to access BookShelf data stored as an xml file on the hard disk."},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"public class XmlBookShelfStorage implements BookShelfStorage {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(XmlBookShelfStorage.class);"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private String filePath;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    public XmlBookShelfStorage(String filePath) {"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    public String getBookShelfFilePath() {"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        return filePath;"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readBookShelf() throws DataConversionException, IOException {"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        return readBookShelf(filePath);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     * Similar to {@link #readBookShelf()}"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * @param filePath location of the data. Cannot be null"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readBookShelf(String filePath) throws DataConversionException,"},{"lineNumber":45,"author":{"gitID":"-"},"content":"                                                                             FileNotFoundException {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        File bookShelfFile \u003d new File(filePath);"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        if (!bookShelfFile.exists()) {"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"            logger.info(\"BookShelf file \"  + bookShelfFile + \" not found\");"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"            return Optional.empty();"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf xmlBookShelf \u003d XmlFileStorage.loadDataFromSaveFile(new File(filePath));"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"            return Optional.of(xmlBookShelf.toModelType());"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"            logger.info(\"Illegal values found in \" + bookShelfFile + \": \" + ive.getMessage());"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            throw new DataConversionException(ive);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf(ReadOnlyBookShelf bookShelf) throws IOException {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        saveBookShelf(bookShelf, filePath);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"     * Similar to {@link #saveBookShelf(ReadOnlyBookShelf)}"},{"lineNumber":71,"author":{"gitID":"-"},"content":"     * @param filePath location of the data. Cannot be null"},{"lineNumber":72,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) throws IOException {"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(bookShelf);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        FileUtil.createIfMissing(file);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        XmlFileStorage.saveDataToFile(file, new XmlSerializableBookShelf(bookShelf));"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":51,"-":31}},{"path":"src/main/java/seedu/address/logic/commands/SearchCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISBN;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Optional;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiSearchRequestEvent;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.CollectionUtil;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" * Searches for books on Google Books that matches a set of parameters."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"public class SearchCommand extends Command {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public static final String COMMAND_WORD \u003d \"search\";"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Searches for books online.\\n\""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"            + \"Parameters: [SEARCH_TERM] \""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"            + \"[\" + PREFIX_ISBN + \"ISBN] \""},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"            + \"[\" + PREFIX_AUTHOR + \"AUTHOR] \""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY]\\n\""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"            + \"Example: \" + COMMAND_WORD"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"            + PREFIX_TITLE + \" Artemis \""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"            + PREFIX_AUTHOR + \"Andy Weir\";"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    public static final String MESSAGE_SEARCHING \u003d \"Searching for matching books...\";"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public static final String MESSAGE_EMPTY_QUERY \u003d \"No search term or search parameter specified.\";"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    public static final String MESSAGE_SEARCH_FAIL \u003d \"Failed to retrieve information from online.\";"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public static final String MESSAGE_SEARCH_SUCCESS \u003d \"Found %s matching books.\";"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    private final SearchDescriptor searchDescriptor;"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     * Creates a SearchCommand to search for matching books."},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     * @param searchDescriptor parameters to search with."},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public SearchCommand(SearchDescriptor searchDescriptor) {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(searchDescriptor);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        this.searchDescriptor \u003d new SearchDescriptor(searchDescriptor);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    public CommandResult execute() {"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        EventsCenter.getInstance().post(new ApiSearchRequestEvent(searchDescriptor.toSearchString()));"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        return new CommandResult(MESSAGE_SEARCHING);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof SearchCommand)) {"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        // state check"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        SearchCommand e \u003d (SearchCommand) other;"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        return searchDescriptor.equals(e.searchDescriptor);"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"     * Stores the parameters to search with."},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    public static class SearchDescriptor {"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        private String searchTerm;"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        private String isbn;"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        private String title;"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        private String author;"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        private String category;"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        public SearchDescriptor() {}"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        /**"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"         * Copy constructor."},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"         */"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        public SearchDescriptor(SearchDescriptor toCopy) {"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"            this.searchTerm \u003d toCopy.searchTerm;"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"            this.isbn \u003d toCopy.isbn;"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"            this.title \u003d toCopy.title;"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"            this.author \u003d toCopy.author;"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"            this.category \u003d toCopy.category;"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        /**"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"         * Returns true if at least one field is not empty."},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"         */"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        public boolean isValid() {"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"            return CollectionUtil.isAnyNonNull(searchTerm, isbn, title, author, category);"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"        public Optional\u003cString\u003e getSearchTerm() {"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"            return Optional.ofNullable(searchTerm);"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"        public void setSearchTerm(String searchTerm) {"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"            this.searchTerm \u003d searchTerm;"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"        public Optional\u003cString\u003e getIsbn() {"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"            return Optional.ofNullable(isbn);"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        public void setIsbn(String isbn) {"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"            this.isbn \u003d isbn;"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"        public Optional\u003cString\u003e getTitle() {"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":"            return Optional.ofNullable(title);"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"        public void setTitle(String title) {"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"            this.title \u003d title;"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"        public Optional\u003cString\u003e getAuthor() {"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"            return Optional.ofNullable(author);"},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":"        public void setAuthor(String author) {"},{"lineNumber":130,"author":{"gitID":"takuyakanbr"},"content":"            this.author \u003d author;"},{"lineNumber":131,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":132,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":133,"author":{"gitID":"takuyakanbr"},"content":"        public Optional\u003cString\u003e getCategory() {"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"            return Optional.ofNullable(category);"},{"lineNumber":135,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"        public void setCategory(String category) {"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":"            this.category \u003d category;"},{"lineNumber":139,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":141,"author":{"gitID":"takuyakanbr"},"content":"        /** Returns the search string to be used as part of the API url. */"},{"lineNumber":142,"author":{"gitID":"takuyakanbr"},"content":"        public String toSearchString() {"},{"lineNumber":143,"author":{"gitID":"takuyakanbr"},"content":"            StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":144,"author":{"gitID":"takuyakanbr"},"content":"            getSearchTerm().ifPresent(searchTerm -\u003e builder.append(searchTerm).append(\" \"));"},{"lineNumber":145,"author":{"gitID":"takuyakanbr"},"content":"            getIsbn().ifPresent(isbn -\u003e builder.append(\"isbn:\").append(isbn).append(\" \"));"},{"lineNumber":146,"author":{"gitID":"takuyakanbr"},"content":"            getTitle().ifPresent(title -\u003e builder.append(\"intitle:\").append(title).append(\" \"));"},{"lineNumber":147,"author":{"gitID":"takuyakanbr"},"content":"            getAuthor().ifPresent(author -\u003e builder.append(\"inauthor:\").append(author).append(\" \"));"},{"lineNumber":148,"author":{"gitID":"takuyakanbr"},"content":"            getCategory().ifPresent(category -\u003e builder.append(\"subject:\").append(category));"},{"lineNumber":149,"author":{"gitID":"takuyakanbr"},"content":"            return builder.toString().trim();"},{"lineNumber":150,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":151,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":152,"author":{"gitID":"takuyakanbr"},"content":"        @Override"},{"lineNumber":153,"author":{"gitID":"takuyakanbr"},"content":"        public String toString() {"},{"lineNumber":154,"author":{"gitID":"takuyakanbr"},"content":"            return toSearchString();"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        public boolean equals(Object other) {"},{"lineNumber":159,"author":{"gitID":"-"},"content":"            // short circuit if same object"},{"lineNumber":160,"author":{"gitID":"-"},"content":"            if (other \u003d\u003d this) {"},{"lineNumber":161,"author":{"gitID":"-"},"content":"                return true;"},{"lineNumber":162,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":163,"author":{"gitID":"-"},"content":""},{"lineNumber":164,"author":{"gitID":"-"},"content":"            // instanceof handles nulls"},{"lineNumber":165,"author":{"gitID":"takuyakanbr"},"content":"            if (!(other instanceof SearchDescriptor)) {"},{"lineNumber":166,"author":{"gitID":"takuyakanbr"},"content":"                return false;"},{"lineNumber":167,"author":{"gitID":"takuyakanbr"},"content":"            }"},{"lineNumber":168,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":169,"author":{"gitID":"takuyakanbr"},"content":"            // state check"},{"lineNumber":170,"author":{"gitID":"takuyakanbr"},"content":"            SearchDescriptor e \u003d (SearchDescriptor) other;"},{"lineNumber":171,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":172,"author":{"gitID":"takuyakanbr"},"content":"            return getSearchTerm().equals(e.getSearchTerm())"},{"lineNumber":173,"author":{"gitID":"takuyakanbr"},"content":"                    \u0026\u0026 getIsbn().equals(e.getIsbn())"},{"lineNumber":174,"author":{"gitID":"takuyakanbr"},"content":"                    \u0026\u0026 getTitle().equals(e.getTitle())"},{"lineNumber":175,"author":{"gitID":"takuyakanbr"},"content":"                    \u0026\u0026 getAuthor().equals(e.getAuthor())"},{"lineNumber":176,"author":{"gitID":"takuyakanbr"},"content":"                    \u0026\u0026 getCategory().equals(e.getCategory());"},{"lineNumber":177,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":178,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":179,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"takuyakanbr":151,"-":25}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedCategory.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlValue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" * JAXB-friendly adapted version of the Category."},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"public class XmlAdaptedCategory {"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    @XmlValue"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    private String category;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs an XmlAdaptedCategory."},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * This is the no-arg constructor that is required by JAXB."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedCategory() {}"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code XmlAdaptedCategory} with the given {@code category}."},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedCategory(String category) {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        this.category \u003d category;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     * Converts a given Category into this class for JAXB use."},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"     * @param source future changes to this will not affect the created."},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedCategory(Category source) {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        category \u003d source.category;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"     * Converts this jaxb-friendly adapted category object into the model\u0027s Category object."},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    public Category toModelType() {"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        return new Category(category);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof XmlAdaptedCategory)) {"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        return category.equals(((XmlAdaptedCategory) other).category);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":42,"-":14}},{"path":"src/main/java/seedu/address/storage/RecentBooksStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":" * Represents a storage for recently selected books."},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"public interface RecentBooksStorage {"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the file path of the data file."},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    String getRecentBooksFilePath();"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"     * Returns recently selected books data from storage as a {@link ReadOnlyBookShelf}."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found."},{"lineNumber":22,"author":{"gitID":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format."},{"lineNumber":23,"author":{"gitID":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    Optional\u003cReadOnlyBookShelf\u003e readRecentBooksList() throws DataConversionException, IOException;"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"     * Saves the given recently selected books represented as {@link ReadOnlyBookShelf}"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"     * to the storage."},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"     * @param recentBooksList cannot be null."},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * @throws IOException if there was any problem writing to the file."},{"lineNumber":32,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"    void saveRecentBooksList(ReadOnlyBookShelf recentBooksList) throws IOException;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":19,"takuyakanbr":3,"-":12}},{"path":"src/main/java/seedu/address/storage/XmlFileStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javax.xml.bind.JAXBException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.XmlUtil;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" * Stores bookshelf data in an XML file"},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class XmlFileStorage {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     * Saves the given bookshelf data to the specified file."},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public static void saveDataToFile(File file, XmlSerializableBookShelf bookShelf)"},{"lineNumber":20,"author":{"gitID":"-"},"content":"            throws FileNotFoundException {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            XmlUtil.saveDataToFile(file, bookShelf);"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        } catch (JAXBException e) {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Unexpected exception \" + e.getMessage());"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     * Returns book shelf in the file or an empty book shelf."},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public static XmlSerializableBookShelf loadDataFromSaveFile(File file) throws DataConversionException,"},{"lineNumber":32,"author":{"gitID":"-"},"content":"            FileNotFoundException {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"            return XmlUtil.getDataFromFile(file, XmlSerializableBookShelf.class);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        } catch (JAXBException e) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"            throw new DataConversionException(e);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":11,"-":29}},{"path":"src/main/java/seedu/address/MainApp.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.application.Application;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Version;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.ConfigUtil;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.logic.LogicManager;"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.model.util.SampleDataUtil;"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.Network;"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.NetworkManager;"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.storage.BookShelfStorage;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.storage.RecentBooksStorage;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"import seedu.address.storage.Storage;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.address.storage.StorageManager;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.address.storage.UserPrefsStorage;"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.storage.XmlBookShelfStorage;"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.storage.XmlRecentBooksStorage;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import seedu.address.ui.Ui;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"import seedu.address.ui.UiManager;"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":43,"author":{"gitID":"-"},"content":" * The main entry point to the application."},{"lineNumber":44,"author":{"gitID":"-"},"content":" */"},{"lineNumber":45,"author":{"gitID":"-"},"content":"public class MainApp extends Application {"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    public static final Version VERSION \u003d new Version(1, 1, 0, false);"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    protected Ui ui;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    protected Logic logic;"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    protected Network network;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    protected Storage storage;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    protected Model model;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    protected Config config;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    protected UserPrefs userPrefs;"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public void init() throws Exception {"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Bibliotek ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        super.init();"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"        config \u003d initConfig(getApplicationParameter(\"config\"));"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        userPrefs \u003d initPrefs(userPrefsStorage);"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        BookShelfStorage bookShelfStorage \u003d new XmlBookShelfStorage(userPrefs.getBookShelfFilePath());"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        RecentBooksStorage recentBooksStorage \u003d new XmlRecentBooksStorage(config.getRecentBooksFilePath());"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        storage \u003d new StorageManager(bookShelfStorage, userPrefsStorage, recentBooksStorage);"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        initLogging(config);"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        network \u003d new NetworkManager();"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        logic \u003d new LogicManager(model);"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        ui \u003d new UiManager(logic, config, userPrefs);"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        initEventsCenter();"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    private String getApplicationParameter(String parameterName) {"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        Map\u003cString, String\u003e applicationParameters \u003d getParameters().getNamed();"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        return applicationParameters.get(parameterName);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s book shelf and {@code userPrefs}. \u003cbr\u003e"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"     * The data from the sample book shelf will be used instead if {@code storage}\u0027s book shelf is not found,"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"     * or an empty book shelf will be used instead if errors occur when reading {@code storage}\u0027s book shelf."},{"lineNumber":95,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    private Model initModelManager(Storage storage, UserPrefs userPrefs) {"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cReadOnlyBookShelf\u003e bookShelfOptional;"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        ReadOnlyBookShelf initialData;"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        ReadOnlyBookShelf recentBooksData;"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"            bookShelfOptional \u003d storage.readBookShelf();"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"            if (!bookShelfOptional.isPresent()) {"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"                logger.info(\"Data file not found. Will be starting with a sample BookShelf\");"},{"lineNumber":104,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"            initialData \u003d bookShelfOptional.orElseGet(SampleDataUtil::getSampleBookShelf);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty BookShelf\");"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"            initialData \u003d new BookShelf();"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty BookShelf\");"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"            initialData \u003d new BookShelf();"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"            Optional\u003cReadOnlyBookShelf\u003e recentBooksOptional \u003d storage.readRecentBooksList();"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"            recentBooksData \u003d recentBooksOptional.orElse(new BookShelf());"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty recent list\");"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"            recentBooksData \u003d new BookShelf();"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"        } catch (IOException e) {"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty recent list\");"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"            recentBooksData \u003d new BookShelf();"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"        return new ModelManager(initialData, userPrefs, recentBooksData);"},{"lineNumber":126,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"    private void initLogging(Config config) {"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        LogsCenter.init(config);"},{"lineNumber":130,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitID":"-"},"content":""},{"lineNumber":132,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":133,"author":{"gitID":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"},{"lineNumber":134,"author":{"gitID":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"},{"lineNumber":135,"author":{"gitID":"-"},"content":"     * if {@code configFilePath} is null."},{"lineNumber":136,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    protected Config initConfig(String configFilePath) {"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        Config initializedConfig;"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        String configFilePathUsed;"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"},{"lineNumber":142,"author":{"gitID":"-"},"content":""},{"lineNumber":143,"author":{"gitID":"-"},"content":"        if (configFilePath !\u003d null) {"},{"lineNumber":144,"author":{"gitID":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);"},{"lineNumber":145,"author":{"gitID":"-"},"content":"            configFilePathUsed \u003d configFilePath;"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);"},{"lineNumber":149,"author":{"gitID":"-"},"content":""},{"lineNumber":150,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":151,"author":{"gitID":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"},{"lineNumber":152,"author":{"gitID":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());"},{"lineNumber":153,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":154,"author":{"gitID":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""},{"lineNumber":155,"author":{"gitID":"-"},"content":"                    + \"Using default config properties\");"},{"lineNumber":156,"author":{"gitID":"-"},"content":"            initializedConfig \u003d new Config();"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":158,"author":{"gitID":"-"},"content":""},{"lineNumber":159,"author":{"gitID":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields"},{"lineNumber":160,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":161,"author":{"gitID":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"},{"lineNumber":162,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":163,"author":{"gitID":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        return initializedConfig;"},{"lineNumber":166,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitID":"-"},"content":""},{"lineNumber":168,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":169,"author":{"gitID":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"},{"lineNumber":170,"author":{"gitID":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when"},{"lineNumber":171,"author":{"gitID":"-"},"content":"     * reading from the file."},{"lineNumber":172,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":173,"author":{"gitID":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        String prefsFilePath \u003d storage.getUserPrefsFilePath();"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"        UserPrefs initializedPrefs;"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":179,"author":{"gitID":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"},{"lineNumber":180,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":182,"author":{"gitID":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""},{"lineNumber":183,"author":{"gitID":"-"},"content":"                    + \"Using default user prefs\");"},{"lineNumber":184,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d new UserPrefs();"},{"lineNumber":185,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":186,"author":{"gitID":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"},{"lineNumber":187,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d new UserPrefs();"},{"lineNumber":188,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":189,"author":{"gitID":"-"},"content":""},{"lineNumber":190,"author":{"gitID":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields"},{"lineNumber":191,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":192,"author":{"gitID":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":194,"author":{"gitID":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":196,"author":{"gitID":"-"},"content":""},{"lineNumber":197,"author":{"gitID":"-"},"content":"        return initializedPrefs;"},{"lineNumber":198,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitID":"-"},"content":""},{"lineNumber":200,"author":{"gitID":"-"},"content":"    private void initEventsCenter() {"},{"lineNumber":201,"author":{"gitID":"-"},"content":"        EventsCenter.getInstance().registerHandler(this);"},{"lineNumber":202,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitID":"-"},"content":""},{"lineNumber":204,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":205,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":206,"author":{"gitID":"takuyakanbr"},"content":"        logger.info(\"Starting Bibliotek \" + MainApp.VERSION);"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        ui.start(primaryStage);"},{"lineNumber":208,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitID":"-"},"content":""},{"lineNumber":210,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":211,"author":{"gitID":"-"},"content":"    public void stop() {"},{"lineNumber":212,"author":{"gitID":"qiu-siqi"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Bibliotek ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"},{"lineNumber":213,"author":{"gitID":"takuyakanbr"},"content":"        network.stop();"},{"lineNumber":214,"author":{"gitID":"-"},"content":"        ui.stop();"},{"lineNumber":215,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":216,"author":{"gitID":"-"},"content":"            storage.saveUserPrefs(userPrefs);"},{"lineNumber":217,"author":{"gitID":"qiu-siqi"},"content":"            storage.saveRecentBooksList(model.getRecentBooksListAsBookShelf());"},{"lineNumber":218,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":219,"author":{"gitID":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"},{"lineNumber":220,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitID":"-"},"content":"        Platform.exit();"},{"lineNumber":222,"author":{"gitID":"-"},"content":"        System.exit(0);"},{"lineNumber":223,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitID":"-"},"content":""},{"lineNumber":225,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":226,"author":{"gitID":"-"},"content":"    public void handleExitAppRequestEvent(ExitAppRequestEvent event) {"},{"lineNumber":227,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":228,"author":{"gitID":"-"},"content":"        this.stop();"},{"lineNumber":229,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitID":"-"},"content":""},{"lineNumber":231,"author":{"gitID":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":232,"author":{"gitID":"-"},"content":"        launch(args);"},{"lineNumber":233,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":234,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":36,"takuyakanbr":9,"-":189}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.CollectionUtil;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Gid;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Isbn;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.PublicationDate;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Publisher;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":" * Contains utility methods for populating {@code BookShelf} with sample data."},{"lineNumber":21,"author":{"gitID":"-"},"content":" */"},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class SampleDataUtil {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public static Book[] getSampleBooks() {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        return new Book[]{"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"            new Book(new Gid(\"ry3GjwEACAAJ\"), new Isbn(\"9780525572664\"),"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"                Collections.singleton(new Author(\"Andy Weir\")), new Title(\"Artemis\"),"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"                CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\")),"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"This is Artemis.\"), new Publisher(\"\"), new PublicationDate(\"2017-11-14\")),"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"            new Book(new Gid(\"CIj1DAAAQBAJ\"), new Isbn(\"9781405921909\"),"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"                Collections.singleton(new Author(\"Sylvain Neuvel\")), new Title(\"Waking Gods\"),"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\")),"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"This is Waking Gods.\"), new Publisher(\"Penguin UK\"),"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"                new PublicationDate(\"2017-04-06\")),"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"            new Book(new Gid(\"3jsYCwAAQBAJ\"), new Isbn(\"9780316217637\"),"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"                Collections.singleton(new Author(\"James S. A. Corey\")), new Title(\"Babylon\u0027s Ashes\"),"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"                CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\"),"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"                    new Category(\"Space Opera\")),"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"This is Babylon\u0027s Ashes.\"), new Publisher(\"Orbit\"),"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"                new PublicationDate(\"2016-12-06\")),"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"            new Book(new Gid(\"2SoaDAAAQBAJ\"), new Isbn(\"9780765388896\"),"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"                Collections.singleton(new Author(\"John Scalzi\")), new Title(\"The Collapsing Empire\"),"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"                CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\"),"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"                    new Category(\"Space Opera\")),"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"This is The Collapsing Empire.\"), new Publisher(\"Tor Books\"),"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"                new PublicationDate(\"2017-03-21\")),"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"            new Book(new Gid(\"3_bJKlAOecEC\"), new Isbn(\"9780316095839\"),"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"                Collections.singleton(new Author(\"Iain M. Banks\")), new Title(\"Consider Phlebas\"),"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"                CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\"),"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"                    new Category(\"Space Opera\")),"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"                new Description(\"This is Consider Phlebas.\"), new Publisher(\"Orbit\"), new PublicationDate(\"2009-12-01\"))"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        };"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    public static ReadOnlyBookShelf getSampleBookShelf() {"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"            BookShelf sampleBookShelf \u003d new BookShelf();"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"            for (Book sampleBook : getSampleBooks()) {"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"                sampleBookShelf.addBook(sampleBook);"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"            }"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"            return sampleBookShelf;"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        } catch (DuplicateBookException e) {"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"            throw new AssertionError(\"sample data cannot contain duplicate books\", e);"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":22,"takuyakanbr":37,"-":8}},{"path":"src/main/java/seedu/address/model/ReadOnlyBookShelf.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Unmodifiable view of a book shelf"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public interface ReadOnlyBookShelf {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an unmodifiable view of the book list."},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"     * This list will not contain any duplicate books."},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    ObservableList\u003cBook\u003e getBookList();"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":3}},{"path":"src/main/java/seedu/address/model/util/BookDataUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.util;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.util.HashSet;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Set;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":" * Contains utility methods for manipulating book data."},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"public class BookDataUtil {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an author set containing the list of strings given."},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public static Set\u003cAuthor\u003e getAuthorSet(String... strings) {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        HashSet\u003cAuthor\u003e authors \u003d new HashSet\u003c\u003e();"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        for (String s : strings) {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"            authors.add(new Author(s));"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        return authors;"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"     * Returns a category set containing the list of strings given."},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    public static Set\u003cCategory\u003e getCategorySet(String... strings) {"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        HashSet\u003cCategory\u003e categories \u003d new HashSet\u003c\u003e();"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        for (String s : strings) {"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"            categories.add(new Category(s));"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        return categories;"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":38}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Theme;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.WindowSettings;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitID":"-"},"content":" * Represents User\u0027s preferences."},{"lineNumber":10,"author":{"gitID":"-"},"content":" */"},{"lineNumber":11,"author":{"gitID":"-"},"content":"public class UserPrefs {"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    private WindowSettings windowSettings;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    private String bookShelfFilePath \u003d \"data/bookshelf.xml\";"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    private String bookShelfName \u003d \"MyBookShelf\";"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    private Theme appTheme \u003d Theme.DEFAULT_THEME;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public UserPrefs() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        windowSettings \u003d new WindowSettings();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public WindowSettings getWindowSettings() {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        return windowSettings \u003d\u003d null ? new WindowSettings() : windowSettings;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void updateLastUsedGuiSetting(WindowSettings windowSettings) {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        this.windowSettings \u003d windowSettings;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void setGuiSettings(double width, double height, int x, int y) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        windowSettings \u003d new WindowSettings(width, height, x, y);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    public String getBookShelfFilePath() {"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        return bookShelfFilePath;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    public void setBookShelfFilePath(String bookShelfFilePath) {"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        this.bookShelfFilePath \u003d bookShelfFilePath;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"    public String getBookShelfName() {"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        return bookShelfName;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"    public void setBookShelfName(String bookShelfName) {"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        this.bookShelfName \u003d bookShelfName;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public Theme getAppTheme() {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        return appTheme;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public void setAppTheme(Theme appTheme) {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        this.appTheme \u003d appTheme;"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well."},{"lineNumber":64,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"        return Objects.equals(windowSettings, o.windowSettings)"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(bookShelfFilePath, o.bookShelfFilePath)"},{"lineNumber":71,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(bookShelfName, o.bookShelfName)"},{"lineNumber":72,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(appTheme, o.appTheme);"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        return Objects.hash(windowSettings, bookShelfFilePath, bookShelfName);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        sb.append(\"Window Settings : \").append(windowSettings.toString());"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        sb.append(\"\\nLocal data file location : \").append(bookShelfFilePath);"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        sb.append(\"\\nBookShelf name : \").append(bookShelfName);"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        sb.append(\"\\nTheme : \").append(appTheme);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        return sb.toString();"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":11,"-":79}},{"path":"src/main/java/seedu/address/model/ActiveListType.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":" * Represents the type of list that is currently active (i.e. being displayed)."},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"public enum ActiveListType {"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"    BOOK_SHELF, SEARCH_RESULTS, RECENT_BOOKS"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"takuyakanbr":7}},{"path":"src/main/java/seedu/address/model/ModelManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.collections.transformation.FilteredList;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.BookListSelectionChangedEvent;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.ui.SearchResultsSelectionChangedEvent;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.UniqueBookCircularList;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":" * Represents the in-memory model of the book shelf data."},{"lineNumber":27,"author":{"gitID":"-"},"content":" * All changes to any model should be synchronized."},{"lineNumber":28,"author":{"gitID":"-"},"content":" */"},{"lineNumber":29,"author":{"gitID":"-"},"content":"public class ModelManager extends ComponentManager implements Model {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    private ActiveListType activeListType;"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    private final BookShelf bookShelf;"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    private final FilteredList\u003cBook\u003e filteredBooks;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    private final BookShelf searchResults;"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    private final UniqueBookCircularList recentBooks;"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"     * Initializes a ModelManager with the given bookShelf, userPrefs and recentBooksList."},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"    public ModelManager(ReadOnlyBookShelf bookShelf, UserPrefs userPrefs,"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"                        ReadOnlyBookShelf recentBooksList) {"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        super();"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        requireAllNonNull(bookShelf, userPrefs, recentBooksList);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        logger.fine(\"Initializing with book shelf: \" + bookShelf + \" and user prefs \" + userPrefs"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"                + \" and recent books: \" + recentBooksList);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        this.activeListType \u003d ActiveListType.BOOK_SHELF;"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        this.bookShelf \u003d new BookShelf(bookShelf);"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        this.filteredBooks \u003d new FilteredList\u003c\u003e(this.bookShelf.getBookList());"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        this.searchResults \u003d new BookShelf();"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        this.recentBooks \u003d new UniqueBookCircularList();"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBook\u003e list \u003d recentBooksList.getBookList();"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        for (int index \u003d list.size() - 1; index \u003e\u003d 0; index--) {"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"            this.recentBooks.addToFront(list.get(index));"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"    public ModelManager(ReadOnlyBookShelf bookShelf, UserPrefs userPrefs) {"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        this(bookShelf, userPrefs, new BookShelf());"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    public ModelManager() {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        this(new BookShelf(), new UserPrefs());"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    public ActiveListType getActiveListType() {"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        return activeListType;"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    public void setActiveListType(ActiveListType type) {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        this.activeListType \u003d type;"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    public void resetData(ReadOnlyBookShelf newData) {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.resetData(newData);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        indicateBookShelfChanged();"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"    public ReadOnlyBookShelf getBookShelf() {"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelf;"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"    /** Raises an event to indicate the model has changed */"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    private void indicateBookShelfChanged() {"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"        raise(new BookShelfChangedEvent(bookShelf));"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"    public void deleteBook(Book target) throws BookNotFoundException {"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.removeBook(target);"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"        indicateBookShelfChanged();"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"    public void addBook(Book book) throws DuplicateBookException {"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(book);"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"        indicateBookShelfChanged();"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook(Book target, Book editedBook) throws BookNotFoundException, DuplicateBookException {"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(target, editedBook);"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(target, editedBook);"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        indicateBookShelfChanged();"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Book List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an unmodifiable view of the list of {@code Book} backed by the internal list of"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"     * {@code bookShelf}"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {"},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"        return FXCollections.unmodifiableObservableList(filteredBooks);"},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":"    public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        requireNonNull(predicate);"},{"lineNumber":130,"author":{"gitID":"takuyakanbr"},"content":"        filteredBooks.setPredicate(predicate);"},{"lineNumber":131,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":133,"author":{"gitID":"takuyakanbr"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Search Results \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":135,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an unmodifable view of the list of {@code Book} backed by the internal list of {@code searchResults}."},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"     * */"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":139,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cBook\u003e getSearchResultsList() {"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"        return FXCollections.unmodifiableObservableList(searchResults.getBookList());"},{"lineNumber":141,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":143,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":144,"author":{"gitID":"takuyakanbr"},"content":"    public void updateSearchResults(ReadOnlyBookShelf newResults) {"},{"lineNumber":145,"author":{"gitID":"takuyakanbr"},"content":"        searchResults.resetData(newResults);"},{"lineNumber":146,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":148,"author":{"gitID":"qiu-siqi"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Recent books \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":149,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":150,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":151,"author":{"gitID":"qiu-siqi"},"content":"    public ObservableList\u003cBook\u003e getRecentBooksList() {"},{"lineNumber":152,"author":{"gitID":"qiu-siqi"},"content":"        return FXCollections.unmodifiableObservableList(recentBooks.asObservableList());"},{"lineNumber":153,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":154,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":155,"author":{"gitID":"qiu-siqi"},"content":"    public ReadOnlyBookShelf getRecentBooksListAsBookShelf() {"},{"lineNumber":156,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf bookShelf \u003d new BookShelf();"},{"lineNumber":157,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":158,"author":{"gitID":"qiu-siqi"},"content":"            bookShelf.setBooks(getRecentBooksList());"},{"lineNumber":159,"author":{"gitID":"qiu-siqi"},"content":"        } catch (DuplicateBookException e) {"},{"lineNumber":160,"author":{"gitID":"qiu-siqi"},"content":"            logger.warning(\"Should never throw DuplicateBookException\");"},{"lineNumber":161,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":162,"author":{"gitID":"qiu-siqi"},"content":"        return bookShelf;"},{"lineNumber":163,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":164,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":165,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":166,"author":{"gitID":"qiu-siqi"},"content":"    public void addRecentBook(Book newBook) {"},{"lineNumber":167,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(newBook);"},{"lineNumber":168,"author":{"gitID":"qiu-siqi"},"content":"        recentBooks.addToFront(newBook);"},{"lineNumber":169,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":170,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":171,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":172,"author":{"gitID":"-"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":175,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":176,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitID":"-"},"content":""},{"lineNumber":178,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        if (!(obj instanceof ModelManager)) {"},{"lineNumber":180,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":182,"author":{"gitID":"-"},"content":""},{"lineNumber":183,"author":{"gitID":"-"},"content":"        // state check"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;"},{"lineNumber":185,"author":{"gitID":"qiu-siqi"},"content":"        return bookShelf.equals(other.bookShelf)"},{"lineNumber":186,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 filteredBooks.equals(other.filteredBooks)"},{"lineNumber":187,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 searchResults.equals(other.searchResults)"},{"lineNumber":188,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 recentBooks.equals(other.recentBooks);"},{"lineNumber":189,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":190,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":191,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":192,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":193,"author":{"gitID":"takuyakanbr"},"content":"    private void handleSearchResultsSelectionChangedEvent(SearchResultsSelectionChangedEvent event) {"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":195,"author":{"gitID":"qiu-siqi"},"content":"        addRecentBook(event.getNewSelection().book);"},{"lineNumber":196,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":197,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":198,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":199,"author":{"gitID":"takuyakanbr"},"content":"    private void handleBookListSelectionChangedEvent(BookListSelectionChangedEvent event) {"},{"lineNumber":200,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":201,"author":{"gitID":"qiu-siqi"},"content":"        addRecentBook(event.getNewSelection().book);"},{"lineNumber":202,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":203,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":51,"takuyakanbr":106,"-":46}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedBook.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlElement;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Gid;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Isbn;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.PublicationDate;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Publisher;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.book.Rating;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":" * JAXB-friendly version of the Book."},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"public class XmlAdaptedBook {"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Book\u0027s %s field is missing!\";"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    private String gid;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    private String isbn;"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    private String title;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    private String description;"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private Integer rating;"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"    private String publisher;"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"    private String publicationDate;"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    private List\u003cXmlAdaptedAuthor\u003e authors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    private List\u003cXmlAdaptedCategory\u003e categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs an XmlAdaptedBook."},{"lineNumber":51,"author":{"gitID":"-"},"content":"     * This is the no-arg constructor that is required by JAXB."},{"lineNumber":52,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedBook() {}"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs an {@code XmlAdaptedBook} with the given book details."},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"    public XmlAdaptedBook(String gid, String isbn, String title, String description,"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"                           List\u003cXmlAdaptedAuthor\u003e authors, List\u003cXmlAdaptedCategory\u003e categories,"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"                           String publisher, String publicationDate) {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d title;"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d description;"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        this.rating \u003d -1;"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        if (authors !\u003d null) {"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"            this.authors \u003d new ArrayList\u003c\u003e(authors);"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        if (categories !\u003d null) {"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"            this.categories \u003d new ArrayList\u003c\u003e(categories);"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        this.gid \u003d gid;"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        this.isbn \u003d isbn;"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        this.publicationDate \u003d publicationDate;"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        this.publisher \u003d publisher;"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    public XmlAdaptedBook(String gid, String isbn, String title, String description, Integer rate,"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"                          List\u003cXmlAdaptedAuthor\u003e authors, List\u003cXmlAdaptedCategory\u003e categories,"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"                          String publisher, String publicationDate) {"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d title;"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d description;"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        this.rating \u003d -1;"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        if (authors !\u003d null) {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"            this.authors \u003d new ArrayList\u003c\u003e(authors);"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        if (categories !\u003d null) {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"            this.categories \u003d new ArrayList\u003c\u003e(categories);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        this.rating \u003d rate;"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        this.gid \u003d gid;"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        this.isbn \u003d isbn;"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        this.publicationDate \u003d publicationDate;"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"        this.publisher \u003d publisher;"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"     * Converts a given Book into this class for JAXB use."},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"     * @param source future changes to this will not affect the created XmlAdaptedBook."},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedBook(Book source) {"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        gid \u003d source.getGid().gid;"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"        isbn \u003d source.getIsbn().isbn;"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        title \u003d source.getTitle().title;"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        description \u003d source.getDescription().description;"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        rating \u003d source.getRating().rating;"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"        authors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"        for (Author author : source.getAuthors()) {"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"            authors.add(new XmlAdaptedAuthor(author));"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        for (Category category : source.getCategories()) {"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"            categories.add(new XmlAdaptedCategory(category));"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        publisher \u003d source.getPublisher().publisher;"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"        publicationDate \u003d source.getPublicationDate().date;"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"     * Converts this jaxb-friendly adapted book object into the model\u0027s Book object."},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted book."},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":"    public Book toModelType() throws IllegalValueException {"},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"        final List\u003cAuthor\u003e bookAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"        for (XmlAdaptedAuthor author : authors) {"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"            bookAuthors.add(author.toModelType());"},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":"        final List\u003cCategory\u003e bookCategories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":"        for (XmlAdaptedCategory category : categories) {"},{"lineNumber":130,"author":{"gitID":"takuyakanbr"},"content":"            bookCategories.add(category.toModelType());"},{"lineNumber":131,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":132,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":133,"author":{"gitID":"takuyakanbr"},"content":"        if (this.title \u003d\u003d null) {"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":135,"author":{"gitID":"qiu-siqi"},"content":"                    Title.class.getSimpleName()));"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"        final Title title \u003d new Title(this.title);"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":139,"author":{"gitID":"takuyakanbr"},"content":"        if (this.description \u003d\u003d null) {"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":141,"author":{"gitID":"takuyakanbr"},"content":"                    Description.class.getSimpleName()));"},{"lineNumber":142,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":143,"author":{"gitID":"takuyakanbr"},"content":"        final Description description \u003d new Description(this.description);"},{"lineNumber":144,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"        if (this.rating \u003d\u003d null) {"},{"lineNumber":146,"author":{"gitID":"takuyakanbr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":147,"author":{"gitID":"-"},"content":"                    Rating.class.getSimpleName()));"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        final Rating rating \u003d new Rating(this.rating);"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"qiu-siqi"},"content":"        if (this.gid \u003d\u003d null) {"},{"lineNumber":152,"author":{"gitID":"takuyakanbr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":153,"author":{"gitID":"qiu-siqi"},"content":"                    Gid.class.getSimpleName()));"},{"lineNumber":154,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":155,"author":{"gitID":"qiu-siqi"},"content":"        final Gid gid \u003d new Gid(this.gid);"},{"lineNumber":156,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":157,"author":{"gitID":"qiu-siqi"},"content":"        if (this.isbn \u003d\u003d null) {"},{"lineNumber":158,"author":{"gitID":"takuyakanbr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":159,"author":{"gitID":"qiu-siqi"},"content":"                    Isbn.class.getSimpleName()));"},{"lineNumber":160,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":161,"author":{"gitID":"qiu-siqi"},"content":"        final Isbn isbn \u003d new Isbn(this.isbn);"},{"lineNumber":162,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":163,"author":{"gitID":"qiu-siqi"},"content":"        if (this.publisher \u003d\u003d null) {"},{"lineNumber":164,"author":{"gitID":"takuyakanbr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":165,"author":{"gitID":"qiu-siqi"},"content":"                    Publisher.class.getSimpleName()));"},{"lineNumber":166,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":167,"author":{"gitID":"qiu-siqi"},"content":"        final Publisher publisher \u003d new Publisher(this.publisher);"},{"lineNumber":168,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":169,"author":{"gitID":"qiu-siqi"},"content":"        if (this.publicationDate \u003d\u003d null) {"},{"lineNumber":170,"author":{"gitID":"takuyakanbr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":171,"author":{"gitID":"qiu-siqi"},"content":"                    PublicationDate.class.getSimpleName()));"},{"lineNumber":172,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":173,"author":{"gitID":"qiu-siqi"},"content":"        final PublicationDate publicationDate \u003d new PublicationDate(this.publicationDate);"},{"lineNumber":174,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":175,"author":{"gitID":"qiu-siqi"},"content":"        return new Book(gid, isbn, new HashSet\u003c\u003e(bookAuthors), title,"},{"lineNumber":176,"author":{"gitID":"-"},"content":"                new HashSet\u003c\u003e(bookCategories), description, rating, publisher, publicationDate);"},{"lineNumber":177,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitID":"-"},"content":""},{"lineNumber":179,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":180,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":182,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":184,"author":{"gitID":"-"},"content":""},{"lineNumber":185,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof XmlAdaptedBook)) {"},{"lineNumber":186,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":187,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":188,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":189,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook otherBook \u003d (XmlAdaptedBook) other;"},{"lineNumber":190,"author":{"gitID":"takuyakanbr"},"content":"        return Objects.equals(title, otherBook.title)"},{"lineNumber":191,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 Objects.equals(description, otherBook.description)"},{"lineNumber":192,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(rating, otherBook.rating)"},{"lineNumber":193,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 authors.equals(otherBook.authors)"},{"lineNumber":194,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 categories.equals(otherBook.categories)"},{"lineNumber":195,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(gid, otherBook.gid)"},{"lineNumber":196,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(isbn, otherBook.isbn)"},{"lineNumber":197,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(publisher, otherBook.publisher)"},{"lineNumber":198,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(publicationDate, otherBook.publicationDate);"},{"lineNumber":199,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":200,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":53,"takuyakanbr":113,"-":34}},{"path":"src/main/java/seedu/address/model/book/Title.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Represents a book\u0027s title."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class Title {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final String title;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code Title}."},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * @param title A book title."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public Title(String title) {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(title);"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d title;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        return title;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof Title // instanceof handles nulls"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.title.equals(((Title) other).title)); // state check"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public int hashCode() {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        return title.hashCode();"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":34,"-":7}},{"path":"src/main/java/seedu/address/model/book/PublicationDate.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":" * Represents a book\u0027s publication date."},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"public class PublicationDate {"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public final String date;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"     * Constructs a {@code Description}."},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"     * @param date A book\u0027s publication date."},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    public PublicationDate(String date) {"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(date);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        this.date \u003d date;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        return date;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"                || (other instanceof PublicationDate // instanceof handles nulls"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 this.date.equals(((PublicationDate) other).date)); // state check"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    public int hashCode() {"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        return date.hashCode();"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":32,"takuyakanbr":1,"-":7}},{"path":"src/main/java/seedu/address/storage/XmlRecentBooksStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":" * A class to access recently selected books data stored as an xml file on the hard disk."},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"public class XmlRecentBooksStorage implements RecentBooksStorage {"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(XmlRecentBooksStorage.class);"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    private String filePath;"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    public XmlRecentBooksStorage(String filePath) {"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    public String getRecentBooksFilePath() {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        return filePath;"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readRecentBooksList() throws DataConversionException, IOException {"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        return readRecentBooksList(filePath);"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"     * Similar to {@link #readRecentBooksList()}"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * @param filePath location of the data. Cannot be null"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readRecentBooksList(String filePath) throws DataConversionException,"},{"lineNumber":45,"author":{"gitID":"-"},"content":"            FileNotFoundException {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        if (!file.exists()) {"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"            logger.info(\"Recent books file \"  + file + \" not found\");"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"            return Optional.empty();"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        XmlSerializableBookShelf xmlRecentBooksList \u003d XmlFileStorage.loadDataFromSaveFile(new File(filePath));"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"            return Optional.of(xmlRecentBooksList.toModelType());"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"            logger.info(\"Illegal values found in \" + file + \": \" + ive.getMessage());"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            throw new DataConversionException(ive);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"    public void saveRecentBooksList(ReadOnlyBookShelf recentBooksList) throws IOException {"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        saveRecentBooksList(recentBooksList, filePath);"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"     * Similar to {@link #saveRecentBooksList(ReadOnlyBookShelf)}"},{"lineNumber":71,"author":{"gitID":"-"},"content":"     * @param filePath location of the data. Cannot be null"},{"lineNumber":72,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"    public void saveRecentBooksList(ReadOnlyBookShelf recentBooksList, String filePath) throws IOException {"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(recentBooksList);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        FileUtil.createIfMissing(file);"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        XmlFileStorage.saveDataToFile(file, new XmlSerializableBookShelf(recentBooksList));"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":47,"takuyakanbr":3,"-":31}},{"path":"src/main/java/seedu/address/model/UniqueList.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Iterator;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DuplicateDataException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.CollectionUtil;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" * A list of items that enforces no nulls and uniqueness between its elements."},{"lineNumber":17,"author":{"gitID":"-"},"content":" *"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * Supports minimal set of list operations for the app\u0027s features."},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"public class UniqueList\u003cT\u003e implements Iterable\u003cT\u003e {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    protected final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs empty UniqueList."},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public UniqueList() {}"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     * Creates a UniqueList using given set."},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"     * Enforces no nulls."},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public UniqueList(Set\u003cT\u003e items) {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(items);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        internalList.addAll(items);"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     * Returns all items in this list as a Set."},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * This set is mutable and change-insulated against the internal list."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public Set\u003cT\u003e toSet() {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        return new HashSet\u003c\u003e(internalList);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"     * Replaces the items in this list with those in the argument list."},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    public void setItems(Set\u003cT\u003e items) {"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(items);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        internalList.setAll(items);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"     * Ensures every item in the argument list exists in this object."},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    public void mergeFrom(UniqueList\u003cT\u003e from) {"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        final Set\u003cT\u003e alreadyInside \u003d this.toSet();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        from.internalList.stream()"},{"lineNumber":64,"author":{"gitID":"-"},"content":"                .filter(tag -\u003e !alreadyInside.contains(tag))"},{"lineNumber":65,"author":{"gitID":"-"},"content":"                .forEach(internalList::add);"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"     * Returns true if the list contains an equivalent item as the given argument."},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    public boolean contains(T toCheck) {"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        requireNonNull(toCheck);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        return internalList.contains(toCheck);"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"     * Adds an item to the list."},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateItemException if the item to add is a duplicate of an existing item in the list."},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    public void add(T toAdd) throws DuplicateDataException {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(toAdd);"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        if (contains(toAdd)) {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"            throw new DuplicateItemException();"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        internalList.add(toAdd);"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"    public Iterator\u003cT\u003e iterator() {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        return internalList.iterator();"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":100,"author":{"gitID":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}."},{"lineNumber":101,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cT\u003e asObservableList() {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        return FXCollections.unmodifiableObservableList(internalList);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof UniqueList // instanceof handles nulls"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.internalList.equals(((UniqueList) other).internalList));"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitID":"-"},"content":"     * Returns true if the element in this list is equal to the elements in {@code other}."},{"lineNumber":117,"author":{"gitID":"-"},"content":"     * The elements do not have to be in the same order."},{"lineNumber":118,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"    public boolean equalsOrderInsensitive(UniqueList\u003cT\u003e other) {"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(other.internalList);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        return this \u003d\u003d other || new HashSet\u003c\u003e(this.internalList).equals(new HashSet\u003c\u003e(other.internalList));"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":126,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        return internalList.hashCode();"},{"lineNumber":129,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":132,"author":{"gitID":"-"},"content":"     * Signals that an operation would have violated the \u0027no duplicates\u0027 property of the list."},{"lineNumber":133,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"    public static class DuplicateItemException extends DuplicateDataException {"},{"lineNumber":135,"author":{"gitID":"takuyakanbr"},"content":"        protected DuplicateItemException() {"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"            super(\"Operation would result in duplicate items\");"},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":139,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":62,"-":78}},{"path":"src/main/java/seedu/address/model/book/Category.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Represents a single book category."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class Category {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final String category;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code Category}."},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * @param category A book category."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public Category(String category) {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(category);"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this.category \u003d category;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        return category;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof Category // instanceof handles nulls"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.category.equals(((Category) other).category)); // state check"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public int hashCode() {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        return category.hashCode();"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"takuyakanbr":32,"-":7}},{"path":"src/main/java/seedu/address/model/book/exceptions/BookNotFoundException.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book.exceptions;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":" * Signals that the operation is unable to find the specified book."},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"public class BookNotFoundException extends Exception {}"}],"authorContributionMap":{"takuyakanbr":6}},{"path":"src/main/java/seedu/address/model/book/exceptions/InvalidBookException.java","lines":[{"lineNumber":1,"author":{"gitID":"qiu-siqi"},"content":"package seedu.address.model.book.exceptions;"},{"lineNumber":2,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":" * Signals that the Book object found is invalid."},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"public class InvalidBookException extends Exception {"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"    public InvalidBookException(String message) {"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":10}},{"path":"src/main/java/seedu/address/model/book/exceptions/DuplicateBookException.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book.exceptions;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DuplicateDataException;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Signals that the operation will result in duplicate Book objects."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class DuplicateBookException extends DuplicateDataException {"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"    public DuplicateBookException() {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"        super(\"Operation would result in duplicate books\");"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":11,"-":1}},{"path":"src/main/java/seedu/address/model/BookShelf.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collection;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.UniqueBookList;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":" * Wraps all data at the book-shelf level"},{"lineNumber":16,"author":{"gitID":"-"},"content":" * Duplicates are not allowed (by .equals comparison)"},{"lineNumber":17,"author":{"gitID":"-"},"content":" */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"public class BookShelf implements ReadOnlyBookShelf {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private final UniqueBookList books;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    public BookShelf() {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        books \u003d new UniqueBookList();"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"     * Creates a BookShelf using the Books in the {@code toBeCopied}"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    public BookShelf(ReadOnlyBookShelf toBeCopied) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        this();"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        resetData(toBeCopied);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    //// list overwrite operations"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public void setBooks(Collection\u003cBook\u003e books) throws DuplicateBookException {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        this.books.setBooks(books);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     * Resets the existing data of this {@code BookShelf} with {@code newData}."},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public void resetData(ReadOnlyBookShelf newData) {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(newData);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"            setBooks(newData.getBookList());"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        } catch (DuplicateBookException e) {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"            throw new AssertionError(\"BookShelf should not have duplicate books\");"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    //// book-level operations"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"     * Adds a book to the book shelf."},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if an equivalent book already exists."},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    public void addBook(Book book) throws DuplicateBookException {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        books.add(book);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"     * Replaces the given book {@code target} in the list with {@code editedBook}."},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException  if {@code target} could not be found in the list."},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if updating the book\u0027s details causes the book to be equivalent to"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"     *                                another existing book in the list."},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook(Book target, Book editedBook)"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        throws BookNotFoundException, DuplicateBookException {"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(editedBook);"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        books.setBook(target, editedBook);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"     * Removes {@code key} from this {@code BookShelf}."},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException if the {@code key} is not in this {@code BookShelf}."},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    public boolean removeBook(Book key) throws BookNotFoundException {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        if (books.remove(key)) {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"            return true;"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        } else {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"            throw new BookNotFoundException();"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"    //// util methods"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        return books.asObservableList().size() + \" books\";"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        // TODO: refine later"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cBook\u003e getBookList() {"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        return books.asObservableList();"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"            || (other instanceof BookShelf // instanceof handles nulls"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"            \u0026\u0026 this.books.equalsOrderInsensitive(((BookShelf) other).books));"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":111,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        return Objects.hash(books);"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":94,"-":21}},{"path":"src/main/java/seedu/address/model/book/Description.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Represents a book\u0027s description."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class Description {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final String description;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code Description}."},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * @param description A book description."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public Description(String description) {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(description);"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        return description;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof Description // instanceof handles nulls"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.description.equals(((Description) other).description)); // state check"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public int hashCode() {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        return description.hashCode();"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":34,"-":7}},{"path":"src/main/java/seedu/address/model/book/Author.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Represents a single book author."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class Author {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final String fullName;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code Author}."},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * @param fullName An author name."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public Author(String fullName) {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(fullName);"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this.fullName \u003d fullName;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        return fullName;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof Author // instanceof handles nulls"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.fullName.equals(((Author) other).fullName)); // state check"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        return fullName.hashCode();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":22,"-":18}},{"path":"src/main/java/seedu/address/model/book/UniqueBookCircularList.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.UniqueList;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" * A list of items that enforces no nulls and uniqueness between its elements,"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":" * with maximum of a pre-set number of elements."},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":" * When the limit is reached, the earliest added element is removed to add the new element."},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":" *"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":" * Supports a minimal set of operations."},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"public class UniqueBookCircularList extends UniqueList\u003cBook\u003e {"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    private final int size;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    public UniqueBookCircularList() {"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        this.size \u003d 50;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"     * Constructs a list where the maximum number of books in the list is {@code size}."},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    public UniqueBookCircularList(int size) {"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        this.size \u003d size;"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"     * Adds a book to the front of the list."},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"     * Moves the book to the front of the list if it exists in the list."},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"     * Removes the earliest added book if the list is full before adding the new book."},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    public void addToFront(Book toAdd) {"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(toAdd);"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        if (contains(toAdd)) {"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"            internalList.remove(toAdd);"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        if (internalList.size() \u003e\u003d size) {"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"            internalList.remove(size - 1);"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        internalList.add(0, toAdd);"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        assert internalList.size() \u003c\u003d size;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"                || (other instanceof UniqueBookCircularList // instanceof handles nulls"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 this.internalList.equals(((UniqueBookCircularList) other).internalList))"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 this.size \u003d\u003d ((UniqueBookCircularList) other).size;"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":46,"takuyakanbr":1,"-":7}},{"path":"src/main/java/seedu/address/model/book/Book.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.UniqueList;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" * Contains data about a single book."},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable."},{"lineNumber":14,"author":{"gitID":"-"},"content":" */"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"public class Book {"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    private final UniqueList\u003cAuthor\u003e authors;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    private final Title title;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    private final UniqueList\u003cCategory\u003e categories;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private final Description description;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private final Rating rating;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    private final Gid gid;"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    private final Isbn isbn;"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    private final PublicationDate publicationDate;"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    private final Publisher publisher;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"     * Every field must be present and not null."},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    public Book(Gid gid, Isbn isbn, Set\u003cAuthor\u003e authors, Title title, Set\u003cCategory\u003e categories,"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"                Description description, Publisher publisher, PublicationDate publicationDate) {"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        requireAllNonNull(gid, isbn, authors, title, categories, description, publisher, publicationDate);"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        this.gid \u003d gid;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        this.isbn \u003d isbn;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        this.authors \u003d new UniqueList\u003c\u003e(authors);"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d title;"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        this.categories \u003d new UniqueList\u003c\u003e(categories);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d description;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        this.rating \u003d new Rating(-1);"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        this.publicationDate \u003d publicationDate;"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        this.publisher \u003d publisher;"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"    public Book(Gid gid, Isbn isbn, Set\u003cAuthor\u003e authors, Title title, Set\u003cCategory\u003e categories,"},{"lineNumber":45,"author":{"gitID":"-"},"content":"                Description description, Rating rating, Publisher publisher, PublicationDate publicationDate) {"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        requireAllNonNull(gid, isbn, authors, title, categories, description, publisher, publicationDate);"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        this.gid \u003d gid;"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        this.isbn \u003d isbn;"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        this.authors \u003d new UniqueList\u003c\u003e(authors);"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d title;"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        this.categories \u003d new UniqueList\u003c\u003e(categories);"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d description;"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        this.rating \u003d rating;"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        this.publicationDate \u003d publicationDate;"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        this.publisher \u003d publisher;"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an immutable authors set, which throws {@code UnsupportedOperationException}"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"     * if modification is attempted."},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    public Set\u003cAuthor\u003e getAuthors() {"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        return Collections.unmodifiableSet(authors.toSet());"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    public Title getTitle() {"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        return title;"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an immutable categories set, which throws {@code UnsupportedOperationException}"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"     * if modification is attempted."},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    public Set\u003cCategory\u003e getCategories() {"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        return Collections.unmodifiableSet(categories.toSet());"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"    public Description getDescription() {"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        return description;"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"    public Rating getRating() {"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        return rating;"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"    public Gid getGid() {"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"        return gid;"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"    public Isbn getIsbn() {"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        return isbn;"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"    public PublicationDate getPublicationDate() {"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"        return publicationDate;"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"    public Publisher getPublisher() {"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"        return publisher;"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":103,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof Book)) {"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"        Book otherBook \u003d (Book) other;"},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"        return otherBook.getIsbn().equals(this.getIsbn());"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"    public int hashCode() {"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"        return Objects.hash(isbn);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"        builder.append(getTitle())"},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"                .append(\" - Authors: \");"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"        getAuthors().forEach(author -\u003e builder.append(\"[\").append(author).append(\"]\"));"},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":"        return builder.toString();"},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":130,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":35,"takuyakanbr":67,"-":28}},{"path":"src/main/java/seedu/address/model/book/Isbn.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":" * Represents a book\u0027s ISBN."},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"public class Isbn {"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public final String isbn;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"     * Constructs a {@code Description}."},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"     * @param isbn A book\u0027s isbn."},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    public Isbn(String isbn) {"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(isbn);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        this.isbn \u003d isbn;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        return isbn;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"                || (other instanceof Isbn // instanceof handles nulls"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 this.isbn.equals(((Isbn) other).isbn)); // state check"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    public int hashCode() {"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        return isbn.hashCode();"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":32,"takuyakanbr":1,"-":7}},{"path":"src/main/java/seedu/address/model/book/Rating.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"-"},"content":" * Represents a book\u0027s rating."},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class Rating {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public final Integer rating;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"-"},"content":"     * Constructs a {@code Rating}."},{"lineNumber":15,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"-"},"content":"     * @param rating A book rating."},{"lineNumber":17,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public Rating(Integer rating) {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        requireNonNull(rating);"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        this.rating \u003d rating;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        return rating.toString();"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":31,"author":{"gitID":"-"},"content":"                || (other instanceof Rating // instanceof handles nulls"},{"lineNumber":32,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.rating.equals(((Rating) other).rating)); // state check"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        return rating.hashCode();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":1,"-":39}},{"path":"src/main/java/seedu/address/model/Model.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * The API of the Model component."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"-"},"content":"public interface Model {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    /** {@code Predicate} that always evaluate to true */"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    Predicate\u003cBook\u003e PREDICATE_SHOW_ALL_BOOKS \u003d unused -\u003e true;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    /** Returns the type of list that is currently active. */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    ActiveListType getActiveListType();"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    /** Sets the type of list that is currently active. */"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    void setActiveListType(ActiveListType type);"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    /** Clears existing backing model and replaces with the provided new data. */"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    void resetData(ReadOnlyBookShelf newData);"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    /** Returns the BookShelf */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    ReadOnlyBookShelf getBookShelf();"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    /** Deletes the given book. */"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    void deleteBook(Book target) throws BookNotFoundException;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    /** Adds the given book */"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    void addBook(Book book) throws DuplicateBookException;"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"     * Replaces the given book {@code target} with {@code editedBook}."},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException if {@code target} could not be found in the list."},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if updating the book details causes the book to be equivalent to"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     *      another existing book in the list."},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    void updateBook(Book target, Book editedBook)"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"            throws BookNotFoundException, DuplicateBookException;"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    /** Returns an unmodifiable view of the filtered book list */"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"     * Updates the filter of the filtered book list to filter by the given {@code predicate}."},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null."},{"lineNumber":51,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    void updateFilteredBookList(Predicate\u003cBook\u003e predicate);"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    /** Returns an unmodifiable view of the search results. */"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    ObservableList\u003cBook\u003e getSearchResultsList();"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    /** Updates the search results that should be displayed. */"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    void updateSearchResults(ReadOnlyBookShelf newResults);"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    /** Returns an unmodifiable view of the recently selected books. */"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"    ObservableList\u003cBook\u003e getRecentBooksList();"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"    /** Returns the recently selected books as a ReadOnlyBookShelf*/"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"    ReadOnlyBookShelf getRecentBooksListAsBookShelf();"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"    /** Add a recently selected book. */"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"    void addRecentBook(Book newBook);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":9,"takuyakanbr":44,"-":15}},{"path":"src/main/java/seedu/address/model/book/Gid.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":" * Represents a book\u0027s google ID."},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"public class Gid {"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public final String gid;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"     * Constructs a {@code Gid}."},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"     * @param gid A book\u0027s google id."},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    public Gid(String gid) {"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(gid);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        this.gid \u003d gid;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        return gid;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"                || (other instanceof Gid // instanceof handles nulls"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 this.gid.equals(((Gid) other).gid)); // state check"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    public int hashCode() {"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        return gid.hashCode();"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":32,"takuyakanbr":1,"-":7}},{"path":"src/main/java/seedu/address/model/book/Publisher.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":" * Represents a book\u0027s publisher."},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"public class Publisher {"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public final String publisher;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"     * Constructs a {@code Publisher}."},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"     * @param publisher A book\u0027s publisher."},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    public Publisher(String publisher) {"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(publisher);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        this.publisher \u003d publisher;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        return publisher;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"                || (other instanceof Publisher // instanceof handles nulls"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 this.publisher.equals(((Publisher) other).publisher)); // state check"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    public int hashCode() {"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        return publisher.hashCode();"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":32,"takuyakanbr":1,"-":7}},{"path":"src/main/java/seedu/address/model/book/UniqueBookList.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collection;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.UniqueList;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":" * Represents a unique collection of books. Does not allow nulls."},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":" *"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":" * Supports a minimal set of list operations."},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"public class UniqueBookList extends UniqueList\u003cBook\u003e {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"     * Adds a book to the list."},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if the book to add is a duplicate of an existing book in the list."},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public void add(Book toAdd) throws DuplicateBookException {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(toAdd);"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        if (contains(toAdd)) {"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"            throw new DuplicateBookException();"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        internalList.add(toAdd);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     * Replaces the book {@code target} in the list with {@code editedBook}."},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException if {@code target} could not be found in the list."},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if the replacement is equivalent to another existing book in the list."},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook(Book target, Book editedBook)"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"            throws BookNotFoundException, DuplicateBookException {"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(editedBook);"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"        int index \u003d internalList.indexOf(target);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"            throw new BookNotFoundException();"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        if (!target.equals(editedBook) \u0026\u0026 internalList.contains(editedBook)) {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"            throw new DuplicateBookException();"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        internalList.set(index, editedBook);"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"     * Removes the equivalent book from the list."},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException if no such book could be found in the list."},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    public boolean remove(Book toRemove) throws BookNotFoundException {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(toRemove);"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        final boolean bookFoundAndDeleted \u003d internalList.remove(toRemove);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        if (!bookFoundAndDeleted) {"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"            throw new BookNotFoundException();"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        return bookFoundAndDeleted;"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    public void setBooks(Collection\u003cBook\u003e books) throws DuplicateBookException {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(books);"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        final UniqueBookList replacement \u003d new UniqueBookList();"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        for (final Book book : books) {"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"            replacement.add(book);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        internalList.setAll(replacement.asObservableList());"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof UniqueBookList // instanceof handles nulls"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.internalList.equals(((UniqueBookList) other).internalList));"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":72,"-":12}}]
