var resultJson = [{"path":"src/test/java/systemtests/SampleDataTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.util.SampleDataUtil;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TestUtil;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"public class SampleDataTest extends BibliotekSystemTest {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * Returns null to force test app to load data of the file in {@code getDataFileLocation()}."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    protected BookShelf getInitialData() {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        return null;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     * Returns a non-existent file location to force test app to load sample data."},{"lineNumber":27,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    protected String getDataFileLocation() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        String filePath \u003d TestUtil.getFilePathInSandboxFolder(\"SomeFileThatDoesNotExist1234567890.xml\");"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        deleteFileIfExists(filePath);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        return filePath;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * Deletes the file at {@code filePath} if it exists."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private void deleteFileIfExists(String filePath) {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"            Files.deleteIfExists(Paths.get(filePath));"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"            throw new AssertionError(ioe);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    public void bookShelf_dataFileDoesNotExist_loadSampleData() {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        Book[] expectedList \u003d SampleDataUtil.getSampleBooks();"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(getBookListPanel(), expectedList);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"takuyakanbr":1,"-":44}},{"path":"src/test/java/systemtests/HelpCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import guitests.GuiRobot;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import guitests.guihandles.HelpWindowHandle;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HelpCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.ui.BrowserPanel;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.ui.StatusBarFooter;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"-"},"content":" * A system test class for the help window, which contains interaction with other UI components."},{"lineNumber":22,"author":{"gitID":"-"},"content":" */"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"public class HelpCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final String ERROR_MESSAGE \u003d \"ATTENTION!!!! : On some computers, this test may fail when run on \""},{"lineNumber":25,"author":{"gitID":"-"},"content":"            + \"non-headless mode as FxRobot#clickOn(Node, MouseButton...) clicks on the wrong location. We suspect \""},{"lineNumber":26,"author":{"gitID":"-"},"content":"            + \"that this is a bug with TestFX library that we are using. If this test fails, you have to run your \""},{"lineNumber":27,"author":{"gitID":"-"},"content":"            + \"tests on headless mode. See UsingGradle.adoc on how to do so.\";"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private final GuiRobot guiRobot \u003d new GuiRobot();"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void openHelpWindow() {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        //use accelerator"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        getCommandBox().click();"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        getResultDisplay().click();"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        getBookListPanel().click();"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"        getBrowserPanel().click();"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        assertHelpWindowNotOpen();"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        //use menu button"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        getMainMenu().openHelpWindowUsingMenu();"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        //use command box"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertHelpWindowOpen();"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"        // open help window and give it focus"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        getMainWindowHandle().focus();"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        // assert that while the help window is open the UI updates correctly for a command execution"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased());"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertEquals(\"\", getCommandBox().getInput());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        assertNotEquals(HelpCommand.SHOWING_HELP_MESSAGE, getResultDisplay().getText());"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assertNotEquals(BrowserPanel.DEFAULT_PAGE, getBrowserPanel().getLoadedUrl());"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(getBookListPanel(), getModel().getFilteredBookList());"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"        // assert that the status bar too is updated correctly while the help window is open"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        // note: the select command tested above does not update the status bar"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"        executeCommand(DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased());"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        assertNotEquals(StatusBarFooter.SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"-"},"content":"     * Asserts that the help window is open, and closes it after checking."},{"lineNumber":78,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    private void assertHelpWindowOpen() {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        assertTrue(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        new HelpWindowHandle(guiRobot.getStage(HelpWindowHandle.HELP_WINDOW_TITLE)).close();"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        getMainWindowHandle().focus();"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"-"},"content":"     * Asserts that the help window isn\u0027t open."},{"lineNumber":89,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    private void assertHelpWindowNotOpen() {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        assertFalse(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());"},{"lineNumber":92,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"-":88}},{"path":"src/test/java/systemtests/DeleteCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.DeleteCommand.MESSAGE_DELETE_BOOK_SUCCESS;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TestUtil.getBook;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TestUtil.getLastIndex;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.TestUtil.getMidIndex;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"public class DeleteCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final String MESSAGE_INVALID_DELETE_COMMAND_FORMAT \u003d"},{"lineNumber":25,"author":{"gitID":"-"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public void delete() {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        /* ----------------- Performing delete operation while an unfiltered list is being shown -------------------- */"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: delete the first book in the list, command with leading spaces and trailing spaces -\u003e deleted */"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        String command \u003d \"     \" + DeleteCommand.COMMAND_WORD + \"      \" + INDEX_FIRST_BOOK.getOneBased() + \"       \";"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        Book deletedBook \u003d removeBook(expectedModel, INDEX_FIRST_BOOK);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        String expectedResultMessage \u003d String.format(MESSAGE_DELETE_BOOK_SUCCESS, deletedBook);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage);"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: delete the last book in the list -\u003e deleted */"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        Model modelBeforeDeletingLast \u003d getModel();"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        Index lastBookIndex \u003d getLastIndex(modelBeforeDeletingLast);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandSuccess(lastBookIndex);"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: undo deleting the last book in the list -\u003e last book restored */"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, modelBeforeDeletingLast, expectedResultMessage);"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: redo deleting the last book in the list -\u003e last book deleted again */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        removeBook(modelBeforeDeletingLast, lastBookIndex);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, modelBeforeDeletingLast, expectedResultMessage);"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: delete the middle book in the list -\u003e deleted */"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        Index middleBookIndex \u003d getMidIndex(getModel());"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandSuccess(middleBookIndex);"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        /* --------------------- Performing delete operation while a book card is selected ------------------------ */"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: delete the selected book -\u003e book list panel selects the book before the deleted book */"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        showAllBooks();"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        expectedModel \u003d getModel();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        Index selectedIndex \u003d getLastIndex(expectedModel);"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        Index expectedIndex \u003d Index.fromZeroBased(selectedIndex.getZeroBased() - 1);"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"        selectBook(selectedIndex);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + selectedIndex.getOneBased();"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        deletedBook \u003d removeBook(expectedModel, selectedIndex);"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        expectedResultMessage \u003d String.format(MESSAGE_DELETE_BOOK_SUCCESS, deletedBook);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, expectedIndex);"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        /* --------------------------------- Performing invalid delete operation ------------------------------------ */"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" 0\";"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" -1\";"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased("},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"                getModel().getBookShelf().getBookList().size() + 1);"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        command \u003d DeleteCommand.COMMAND_WORD + \" \" + outOfBoundsIndex.getOneBased();"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(command, MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (alphabets) -\u003e rejected */"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        assertCommandFailure(DeleteCommand.COMMAND_WORD + \" abc\", MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (extra argument) -\u003e rejected */"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        assertCommandFailure(DeleteCommand.COMMAND_WORD + \" 1 abc\", MESSAGE_INVALID_DELETE_COMMAND_FORMAT);"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"DelETE 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"     * Removes the {@code Book} at the specified {@code index} in {@code model}\u0027s book shelf."},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"     * @return the removed book."},{"lineNumber":100,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    private Book removeBook(Model model, Index index) {"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"        Book targetBook \u003d getBook(model, index);"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"            model.deleteBook(targetBook);"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"        } catch (BookNotFoundException pnfe) {"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"            throw new AssertionError(\"targetBook is retrieved from model.\");"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"        return targetBook;"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"     * Deletes the book at {@code toDelete} by creating a default {@code DeleteCommand} using {@code toDelete} and"},{"lineNumber":113,"author":{"gitID":"-"},"content":"     * performs the same verification as {@code assertCommandSuccess(String, Model, String)}."},{"lineNumber":114,"author":{"gitID":"-"},"content":"     * @see DeleteCommandSystemTest#assertCommandSuccess(String, Model, String)"},{"lineNumber":115,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(Index toDelete) {"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":"        Book deletedBook \u003d removeBook(expectedModel, toDelete);"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"        String expectedResultMessage \u003d String.format(MESSAGE_DELETE_BOOK_SUCCESS, deletedBook);"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"        assertCommandSuccess("},{"lineNumber":122,"author":{"gitID":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + toDelete.getOneBased(), expectedModel, expectedResultMessage);"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":126,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":127,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays an empty string.\u003cbr\u003e"},{"lineNumber":128,"author":{"gitID":"-"},"content":"     * 2. Asserts that the result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":129,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":130,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url and selected card remains unchanged.\u003cbr\u003e"},{"lineNumber":131,"author":{"gitID":"-"},"content":"     * 5. Asserts that the status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":132,"author":{"gitID":"-"},"content":"     * 6. Asserts that the command box has the default style class.\u003cbr\u003e"},{"lineNumber":133,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":134,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}."},{"lineNumber":135,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":136,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, null);"},{"lineNumber":139,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitID":"-"},"content":""},{"lineNumber":141,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":142,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String)} except that the browser url"},{"lineNumber":143,"author":{"gitID":"-"},"content":"     * and selected card are expected to update accordingly depending on the card at {@code expectedSelectedCardIndex}."},{"lineNumber":144,"author":{"gitID":"-"},"content":"     * @see DeleteCommandSystemTest#assertCommandSuccess(String, Model, String)"},{"lineNumber":145,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertSelectedCardChanged(Index)"},{"lineNumber":146,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":147,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage,"},{"lineNumber":148,"author":{"gitID":"-"},"content":"            Index expectedSelectedCardIndex) {"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":151,"author":{"gitID":"-"},"content":""},{"lineNumber":152,"author":{"gitID":"-"},"content":"        if (expectedSelectedCardIndex !\u003d null) {"},{"lineNumber":153,"author":{"gitID":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":155,"author":{"gitID":"-"},"content":"            assertSelectedCardUnchanged();"},{"lineNumber":156,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":157,"author":{"gitID":"-"},"content":""},{"lineNumber":158,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":160,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":163,"author":{"gitID":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e"},{"lineNumber":164,"author":{"gitID":"-"},"content":"     * 1. Asserts that the command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":165,"author":{"gitID":"-"},"content":"     * 2. Asserts that result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":166,"author":{"gitID":"-"},"content":"     * 3. Asserts that the model related components equal to the current model.\u003cbr\u003e"},{"lineNumber":167,"author":{"gitID":"-"},"content":"     * 4. Asserts that the browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":168,"author":{"gitID":"-"},"content":"     * 5. Asserts that the command box has the error style.\u003cbr\u003e"},{"lineNumber":169,"author":{"gitID":"-"},"content":"     * Verifications 1 to 3 are performed by"},{"lineNumber":170,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":171,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":172,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":173,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":175,"author":{"gitID":"-"},"content":""},{"lineNumber":176,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":177,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":178,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":179,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":180,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":181,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":15,"takuyakanbr":29,"-":138}},{"path":"src/test/java/systemtests/AddCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_ARTEMIS;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_BABYLON;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_ARTEMIS;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_BABYLON;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_ARTEMIS;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BABYLON;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_ARTEMIS;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_BABYLON;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_ARTEMIS;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CATEGORY_ARTEMIS;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ARTEMIS;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.BABYLON_ASHES;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.COLLAPSING_EMPIRE;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.CONSIDER_PHLEBAS;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.BookUtil;"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"public class AddCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public void add() throws Exception {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        executeCommand(\"clear\");"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        Model model \u003d getModel();"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform add operations on the shown unfiltered list ----------------------------- */"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: add a book to a non-empty book shelf, command with leading spaces and trailing spaces -\u003e added"},{"lineNumber":43,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        Book toAdd \u003d ARTEMIS;"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        String command \u003d \"   \" + AddCommand.COMMAND_WORD + \"  \" + TITLE_DESC_ARTEMIS + \"  \" + AUTHOR_DESC_ARTEMIS + \" \""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"                + DESCRIPTION_DESC_ARTEMIS + \"   \" + CATEGORY_DESC_ARTEMIS + \" \";"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: undo adding Artemis to the list -\u003e Artemis deleted */"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: redo adding Artemis to the list -\u003e Artemis added again */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        model.addBook(toAdd);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: add a book with all fields same as another book in the book shelf except title -\u003e added */"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        toAdd \u003d new BookBuilder().withAuthors(VALID_AUTHOR_ARTEMIS).withCategories(VALID_CATEGORY_ARTEMIS)"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"                .withDescription(VALID_DESCRIPTION_ARTEMIS).withTitle(\"Title 1\").build();"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        command \u003d AddCommand.COMMAND_WORD + \" t/Title 1\" + AUTHOR_DESC_ARTEMIS"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"                + DESCRIPTION_DESC_ARTEMIS + CATEGORY_DESC_ARTEMIS;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: add to empty book shelf -\u003e added */"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"        deleteAllBooks();"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandSuccess(COLLAPSING_EMPIRE);"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: add a book, command with parameters in random order -\u003e added */"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        toAdd \u003d BABYLON_ASHES;"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        command \u003d AddCommand.COMMAND_WORD + CATEGORY_DESC_BABYLON + AUTHOR_DESC_BABYLON"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"                + DESCRIPTION_DESC_BABYLON + TITLE_DESC_BABYLON;"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, toAdd);"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        /* ------------------------ Perform add operation while a book card is selected --------------------------- */"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: selects first card in the book list, add a book -\u003e added, card selection remains unchanged */"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        selectBook(Index.fromOneBased(1));"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandSuccess(CONSIDER_PHLEBAS);"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"        /* ----------------------------------- Perform invalid add operations --------------------------------------- */"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: add a duplicate book -\u003e rejected */"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        command \u003d BookUtil.getAddCommand(CONSIDER_PHLEBAS);"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_BOOK);"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: missing title -\u003e rejected */"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        command \u003d AddCommand.COMMAND_WORD + CATEGORY_DESC_BABYLON + AUTHOR_DESC_BABYLON"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"                + DESCRIPTION_DESC_BABYLON;"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        /* Case: invalid keyword -\u003e rejected */"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        command \u003d \"adds \" + BookUtil.getBookDetails(toAdd);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, Messages.MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"-"},"content":"     * Executes the {@code AddCommand} that adds {@code toAdd} to the model and asserts that the,\u003cbr\u003e"},{"lineNumber":102,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":104,"author":{"gitID":"-"},"content":"     * 3. Result display box displays the success message of executing {@code AddCommand} with the details of"},{"lineNumber":105,"author":{"gitID":"-"},"content":"     * {@code toAdd}.\u003cbr\u003e"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"     * 4. {@code Model}, {@code Storage} and {@code BookListPanel} equal to the corresponding components in"},{"lineNumber":107,"author":{"gitID":"-"},"content":"     * the current model added with {@code toAdd}.\u003cbr\u003e"},{"lineNumber":108,"author":{"gitID":"-"},"content":"     * 5. Browser url and selected card remain unchanged.\u003cbr\u003e"},{"lineNumber":109,"author":{"gitID":"-"},"content":"     * 6. Status bar\u0027s sync status changes.\u003cbr\u003e"},{"lineNumber":110,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":113,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"    private void assertCommandSuccess(Book toAdd) {"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandSuccess(BookUtil.getAddCommand(toAdd), toAdd);"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"     * Performs the same verification as {@code assertCommandSuccess(Book)}. Executes {@code command}"},{"lineNumber":120,"author":{"gitID":"-"},"content":"     * instead."},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(Book)"},{"lineNumber":122,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":"    private void assertCommandSuccess(String command, Book toAdd) {"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"            expectedModel.addBook(toAdd);"},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":"        } catch (DuplicateBookException dpe) {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"            throw new IllegalArgumentException(\"toAdd already exists in the model.\");"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, toAdd);"},{"lineNumber":131,"author":{"gitID":"-"},"content":""},{"lineNumber":132,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage);"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Book)} except asserts that"},{"lineNumber":137,"author":{"gitID":"-"},"content":"     * the,\u003cbr\u003e"},{"lineNumber":138,"author":{"gitID":"-"},"content":"     * 1. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":139,"author":{"gitID":"takuyakanbr"},"content":"     * 2. {@code Model}, {@code Storage} and {@code BookListPanel} equal to the corresponding components in"},{"lineNumber":140,"author":{"gitID":"-"},"content":"     * {@code expectedModel}.\u003cbr\u003e"},{"lineNumber":141,"author":{"gitID":"takuyakanbr"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(String, Book)"},{"lineNumber":142,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":143,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":146,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":149,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":152,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":153,"author":{"gitID":"-"},"content":"     * 1. Command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":154,"author":{"gitID":"-"},"content":"     * 2. Command box has the error style class.\u003cbr\u003e"},{"lineNumber":155,"author":{"gitID":"-"},"content":"     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":156,"author":{"gitID":"takuyakanbr"},"content":"     * 4. {@code Model}, {@code Storage} and {@code BookListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":157,"author":{"gitID":"-"},"content":"     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":158,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":159,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":160,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":161,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":162,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":166,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":167,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":169,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":170,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":171,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":8,"takuyakanbr":59,"-":104}},{"path":"src/test/java/systemtests/SystemTestSetupHelper.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.concurrent.TimeoutException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.function.Supplier;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.testfx.api.FxToolkit;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainWindowHandle;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.TestApp;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * Contains helper methods that system tests require."},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class SystemTestSetupHelper {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    private TestApp testApp;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    private MainWindowHandle mainWindowHandle;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitID":"-"},"content":"     * Sets up a new {@code TestApp} and returns it."},{"lineNumber":22,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    public TestApp setupApplication(Supplier\u003cReadOnlyBookShelf\u003e bookShelf, String saveFileLocation) {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"            FxToolkit.registerStage(Stage::new);"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"            FxToolkit.setupApplication(() -\u003e testApp \u003d new TestApp(bookShelf, saveFileLocation));"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        } catch (TimeoutException te) {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Application takes too long to set up.\");"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return testApp;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * Initializes TestFX."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public static void initialize() {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"            FxToolkit.registerPrimaryStage();"},{"lineNumber":40,"author":{"gitID":"-"},"content":"            FxToolkit.hideStage();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        } catch (TimeoutException e) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"            throw new AssertionError(e);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * Encapsulates the primary stage of {@code TestApp} in a {@code MainWindowHandle} and returns it."},{"lineNumber":48,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public MainWindowHandle setupMainWindowHandle() {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            FxToolkit.setupStage((stage) -\u003e {"},{"lineNumber":52,"author":{"gitID":"-"},"content":"                mainWindowHandle \u003d new MainWindowHandle(stage);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"                mainWindowHandle.focus();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            });"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            FxToolkit.showStage();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        } catch (TimeoutException te) {"},{"lineNumber":57,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Stage takes too long to set up.\");"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        return mainWindowHandle;"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":64,"author":{"gitID":"-"},"content":"     * Tears down existing stages."},{"lineNumber":65,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void tearDownStage() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            FxToolkit.cleanupStages();"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        } catch (TimeoutException te) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Stage takes too long to tear down.\");"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"-":70}},{"path":"src/test/java/systemtests/ErrorDialogGuiTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postLater;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.ui.UiManager.FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.ui.UiManager.FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.ui.UiManager.FILE_OPS_ERROR_DIALOG_STAGE_TITLE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import guitests.GuiRobot;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import guitests.guihandles.AlertDialogHandle;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"public class ErrorDialogGuiTest extends BibliotekSystemTest {"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private static final IOException IO_EXCEPTION_STUB \u003d new IOException(\"Stub\");"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private final GuiRobot guiRobot \u003d new GuiRobot();"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public void showErrorDialogs() {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        postLater(new DataSavingExceptionEvent(IO_EXCEPTION_STUB));"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"        guiRobot.waitForEvent(() -\u003e guiRobot.isWindowShown(FILE_OPS_ERROR_DIALOG_STAGE_TITLE));"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"        AlertDialogHandle alertDialog \u003d new AlertDialogHandle(guiRobot.getStage(FILE_OPS_ERROR_DIALOG_STAGE_TITLE));"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        assertEquals(FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE, alertDialog.getHeaderText());"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        assertEquals(FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE + \":\\n\" + IO_EXCEPTION_STUB.toString(),"},{"lineNumber":31,"author":{"gitID":"-"},"content":"                alertDialog.getContentText());"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"-":33}},{"path":"src/test/java/systemtests/ClearCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"public class ClearCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public void clear() {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        final Model defaultModel \u003d getModel();"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: clear non-empty book shelf, command with leading spaces and trailing alphanumeric characters and"},{"lineNumber":21,"author":{"gitID":"-"},"content":"         * spaces -\u003e cleared"},{"lineNumber":22,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        assertCommandSuccess(\"   \" + ClearCommand.COMMAND_WORD + \" ab12   \");"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: undo clearing book shelf -\u003e original book shelf restored */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        String command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command,  expectedResultMessage, defaultModel);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: redo clearing book shelf -\u003e cleared */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, expectedResultMessage, new ModelManager());"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: selects first card in book list and clears book shelf -\u003e cleared and no card selected */"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        executeCommand(UndoCommand.COMMAND_WORD); // restores the original book shelf"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        selectBook(Index.fromOneBased(1));"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        assertCommandSuccess(ClearCommand.COMMAND_WORD);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        assertSelectedCardDeselected();"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: clear empty book shelf -\u003e cleared */"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assertCommandSuccess(ClearCommand.COMMAND_WORD);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"ClEaR\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     * Executes {@code command} and verifies that the command box displays an empty string, the result display"},{"lineNumber":54,"author":{"gitID":"-"},"content":"     * box displays {@code ClearCommand#MESSAGE_SUCCESS} and the model related components equal to an empty model."},{"lineNumber":55,"author":{"gitID":"-"},"content":"     * These verifications are done by"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":57,"author":{"gitID":"-"},"content":"     * Also verifies that the command box has the default style class and the status bar\u0027s sync status changes."},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":59,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, ClearCommand.MESSAGE_SUCCESS, new ModelManager());"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String)} except that the result box displays"},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * {@code expectedResultMessage} and the model related components equal to {@code expectedModel}."},{"lineNumber":67,"author":{"gitID":"-"},"content":"     * @see ClearCommandSystemTest#assertCommandSuccess(String)"},{"lineNumber":68,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, String expectedResultMessage, Model expectedModel) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":77,"author":{"gitID":"-"},"content":"     * Executes {@code command} and verifies that the command box displays {@code command}, the result display"},{"lineNumber":78,"author":{"gitID":"-"},"content":"     * box displays {@code expectedResultMessage} and the model related components equal to the current model."},{"lineNumber":79,"author":{"gitID":"-"},"content":"     * These verifications are done by"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":81,"author":{"gitID":"-"},"content":"     * Also verifies that the browser url, selected card and status bar remain unchanged, and the command box has the"},{"lineNumber":82,"author":{"gitID":"-"},"content":"     * error style."},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":84,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"takuyakanbr":6,"-":82}},{"path":"src/test/java/systemtests/SelectCommandSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.SelectCommand.MESSAGE_SELECT_BOOK_SUCCESS;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"public class SelectCommandSystemTest extends BibliotekSystemTest {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    public void select() {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        /* ------------------------ Perform select operations on the shown unfiltered list -------------------------- */"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: select the first card in the book list, command with leading spaces and trailing spaces"},{"lineNumber":24,"author":{"gitID":"-"},"content":"         * -\u003e selected"},{"lineNumber":25,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        String command \u003d \"   \" + SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased() + \"   \";"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(command, INDEX_FIRST_BOOK);"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: select the last card in the book list -\u003e selected */"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        Index bookCount \u003d Index.fromOneBased(TypicalBooks.getTypicalBooks().size());"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + bookCount.getOneBased();"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        assertCommandSuccess(command, bookCount);"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"        /* Case: undo previous selection -\u003e rejected */"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_FAILURE;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"        /* Case: redo selecting last card in the list -\u003e rejected */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_FAILURE;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        assertCommandFailure(command, expectedResultMessage);"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: select the middle card in the book list -\u003e selected */"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        Index middleIndex \u003d Index.fromOneBased(bookCount.getOneBased() / 2);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        command \u003d SelectCommand.COMMAND_WORD + \" \" + middleIndex.getOneBased();"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, middleIndex);"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        /* Case: select the current selected card -\u003e selected */"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        assertCommandSuccess(command, middleIndex);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        /* ----------------------------------- Perform invalid select operations ------------------------------------ */"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + 0,"},{"lineNumber":56,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + -1,"},{"lineNumber":60,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        int invalidIndex \u003d getModel().getFilteredBookList().size() + 1;"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + invalidIndex, MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (alphabets) -\u003e rejected */"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" abc\","},{"lineNumber":68,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"        /* Case: invalid arguments (extra argument) -\u003e rejected */"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" 1 abc\","},{"lineNumber":72,"author":{"gitID":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"        /* Case: mixed case command word -\u003e rejected */"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        assertCommandFailure(\"SeLeCt 1\", MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        /* Case: select from empty book shelf -\u003e rejected */"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"        deleteAllBooks();"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_BOOK.getOneBased(),"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"                MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":85,"author":{"gitID":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e"},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e"},{"lineNumber":87,"author":{"gitID":"-"},"content":"     * 3. Result display box displays the success message of executing select command with the"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"     * {@code expectedSelectedCardIndex} of the selected book.\u003cbr\u003e"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"     * 4. {@code Model}, {@code Storage} and {@code BookListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":90,"author":{"gitID":"-"},"content":"     * 5. Selected card is at {@code expectedSelectedCardIndex} and the browser url is updated accordingly.\u003cbr\u003e"},{"lineNumber":91,"author":{"gitID":"-"},"content":"     * 6. Status bar remains unchanged.\u003cbr\u003e"},{"lineNumber":92,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertSelectedCardChanged(Index)"},{"lineNumber":96,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String command, Index expectedSelectedCardIndex) {"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        String expectedResultMessage \u003d String.format("},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"                MESSAGE_SELECT_BOOK_SUCCESS, expectedSelectedCardIndex.getOneBased());"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        int preExecutionSelectedCardIndex \u003d getBookListPanel().getSelectedCardIndex();"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);"},{"lineNumber":105,"author":{"gitID":"-"},"content":""},{"lineNumber":106,"author":{"gitID":"-"},"content":"        if (preExecutionSelectedCardIndex \u003d\u003d expectedSelectedCardIndex.getZeroBased()) {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"            assertSelectedCardUnchanged();"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        } else {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsDefaultStyle();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":117,"author":{"gitID":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e"},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * 1. Command box displays {@code command}.\u003cbr\u003e"},{"lineNumber":119,"author":{"gitID":"-"},"content":"     * 2. Command box has the error style class.\u003cbr\u003e"},{"lineNumber":120,"author":{"gitID":"-"},"content":"     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"     * 4. {@code Model}, {@code Storage} and {@code BookListPanel} remain unchanged.\u003cbr\u003e"},{"lineNumber":122,"author":{"gitID":"-"},"content":"     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e"},{"lineNumber":123,"author":{"gitID":"-"},"content":"     * Verifications 1, 3 and 4 are performed by"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"     * {@code BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e"},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"     * @see BibliotekSystemTest#assertApplicationDisplaysExpected(String, String, Model)"},{"lineNumber":126,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":127,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        Model expectedModel \u003d getModel();"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"        executeCommand(command);"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        assertSelectedCardUnchanged();"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        assertCommandBoxShowsErrorStyle();"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        assertStatusBarUnchanged();"},{"lineNumber":135,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":17,"takuyakanbr":13,"-":106}},{"path":"src/test/java/systemtests/ModelHelper.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * Contains helper methods to set up {@code Model} for testing."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class ModelHelper {"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    private static final Predicate\u003cBook\u003e PREDICATE_MATCHING_NO_BOOKS \u003d unused -\u003e false;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * Updates {@code model}\u0027s filtered list to display only {@code toDisplay}."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    public static void setFilteredList(Model model, List\u003cBook\u003e toDisplay) {"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cPredicate\u003cBook\u003e\u003e predicate \u003d"},{"lineNumber":22,"author":{"gitID":"-"},"content":"                toDisplay.stream().map(ModelHelper::getPredicateMatching).reduce(Predicate::or);"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(predicate.orElse(PREDICATE_MATCHING_NO_BOOKS));"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"-"},"content":"     * @see ModelHelper#setFilteredList(Model, List)"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    public static void setFilteredList(Model model, Book... toDisplay) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        setFilteredList(model, Arrays.asList(toDisplay));"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a predicate that evaluates to true if this {@code Book} equals to {@code other}."},{"lineNumber":35,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    private static Predicate\u003cBook\u003e getPredicateMatching(Book other) {"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        return book -\u003e book.equals(other);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":9,"-":30}},{"path":"src/test/java/seedu/address/ui/BookCardTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysBook;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookCardHandle;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"public class BookCardTest extends GuiUnitTest {"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    public void display() {"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"        // no categories"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        Book bookWithNoCategories \u003d new BookBuilder().withCategories(new String[0]).build();"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        BookCard bookCard \u003d new BookCard(bookWithNoCategories, 1);"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"        uiPartRule.setUiPart(bookCard);"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"        assertCardDisplay(bookCard, bookWithNoCategories, 1);"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"        // with tags"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        Book bookWithCategories \u003d new BookBuilder().build();"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"        bookCard \u003d new BookCard(bookWithCategories, 2);"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"        uiPartRule.setUiPart(bookCard);"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        assertCardDisplay(bookCard, bookWithCategories, 2);"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    public void equals() {"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        Book book \u003d new BookBuilder().build();"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        BookCard bookCard \u003d new BookCard(book, 0);"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        // same book, same index -\u003e returns true"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        BookCard copy \u003d new BookCard(book, 0);"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(bookCard.equals(copy));"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        // same object -\u003e returns true"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(bookCard.equals(bookCard));"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        // null -\u003e returns false"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(bookCard \u003d\u003d null);"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        // different types -\u003e returns false"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(bookCard.equals(0));"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"        // different book, same index -\u003e returns false"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        Book differentBook \u003d new BookBuilder().withTitle(\"differentTitle\").build();"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(bookCard.equals(new BookCard(differentBook, 0)));"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        // same book, different index -\u003e returns false"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(bookCard.equals(new BookCard(book, 1)));"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that {@code bookCard} displays the details of {@code expectedBook} correctly and matches"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"     * {@code expectedId}."},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"    private void assertCardDisplay(BookCard bookCard, Book expectedBook, int expectedId) {"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        BookCardHandle bookCardHandle \u003d new BookCardHandle(bookCard.getRoot());"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        // verify id is displayed correctly"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", bookCardHandle.getId());"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        // verify book details are displayed correctly"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        assertCardDisplaysBook(expectedBook, bookCardHandle);"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":67,"-":5}},{"path":"src/test/java/seedu/address/ui/testutil/GuiTestAssert.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookCardHandle;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookListPanelHandle;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * A set of assertion methods useful for writing GUI tests."},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class GuiTestAssert {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * Asserts that {@code actualCard} displays the same values as {@code expectedCard}."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertCardEquals(BookCardHandle expectedCard, BookCardHandle actualCard) {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        assertEquals(expectedCard.getId(), actualCard.getId());"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedCard.getAuthors(), actualCard.getAuthors());"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedCard.getCategories(), actualCard.getCategories());"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedCard.getTitle(), actualCard.getTitle());"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedBook}."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertCardDisplaysBook(Book expectedBook, BookCardHandle actualCard) {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedBook.getTitle().title, actualCard.getTitle());"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedBook.getAuthors().stream().map(author -\u003e author.fullName)"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"                        .collect(Collectors.toList()), actualCard.getAuthors());"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedBook.getCategories().stream().map(category -\u003e category.category)"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"                        .collect(Collectors.toList()), actualCard.getCategories());"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the list in {@code bookListPanelHandle} displays the details of {@code books} correctly and"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     * in the correct order."},{"lineNumber":41,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertListMatching(BookListPanelHandle bookListPanelHandle, Book... books) {"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        for (int i \u003d 0; i \u003c books.length; i++) {"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"            assertCardDisplaysBook(books[i], bookListPanelHandle.getBookCardHandle(i));"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the list in {@code bookListPanelHandle} displays the details of {@code books} correctly and"},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * in the correct order."},{"lineNumber":51,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertListMatching(BookListPanelHandle bookListPanelHandle, List\u003cBook\u003e books) {"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(bookListPanelHandle, books.toArray(new Book[0]));"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts the size of the list in {@code bookListPanelHandle} equals to {@code size}."},{"lineNumber":58,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"    public static void assertListSize(BookListPanelHandle bookListPanelHandle, int size) {"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        int numberOfPeople \u003d bookListPanelHandle.getListSize();"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertEquals(size, numberOfPeople);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * Asserts the message shown in {@code resultDisplayHandle} equals to {@code expected}."},{"lineNumber":66,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    public static void assertResultMessage(ResultDisplayHandle resultDisplayHandle, String expected) {"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        assertEquals(expected, resultDisplayHandle.getText());"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":24,"-":46}},{"path":"src/test/java/seedu/address/ui/BrowserPanelTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static guitests.guihandles.WebViewUtil.waitUntilBrowserLoaded;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postNow;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.ui.BrowserPanel.DEFAULT_PAGE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.ui.UiPart.FXML_FILE_FOLDER;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.net.URL;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import guitests.guihandles.BrowserPanelHandle;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.MainApp;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.BookPanelSelectionChangedEvent;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class BrowserPanelTest extends GuiUnitTest {"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    private BookPanelSelectionChangedEvent selectionChangedEventStub;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private BrowserPanel browserPanel;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private BrowserPanelHandle browserPanelHandle;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"        selectionChangedEventStub \u003d new BookPanelSelectionChangedEvent(new BookCard(ARTEMIS, 0));"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"        guiRobot.interact(() -\u003e browserPanel \u003d new BrowserPanel());"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(browserPanel);"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"        browserPanelHandle \u003d new BrowserPanelHandle(browserPanel.getRoot());"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public void display() throws Exception {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        // default web page"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        URL expectedDefaultPageUrl \u003d MainApp.class.getResource(FXML_FILE_FOLDER + DEFAULT_PAGE);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertEquals(expectedDefaultPageUrl, browserPanelHandle.getLoadedUrl());"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"        // associated web page of a person"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        postNow(selectionChangedEventStub);"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        URL expectedPersonUrl \u003d new URL(BrowserPanel.SEARCH_PAGE_URL + ARTEMIS.getTitle().title.replaceAll(\" \", \"%20\"));"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"        waitUntilBrowserLoaded(browserPanelHandle);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertEquals(expectedPersonUrl, browserPanelHandle.getLoadedUrl());"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":5,"-":43}},{"path":"src/test/java/seedu/address/TestApp.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.function.Supplier;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.stage.Screen;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.GuiSettings;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.XmlUtil;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.storage.UserPrefsStorage;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.storage.XmlSerializableBookShelf;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TestUtil;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import systemtests.ModelHelper;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * This class is meant to override some properties of MainApp so that it will be suited for"},{"lineNumber":26,"author":{"gitID":"-"},"content":" * testing"},{"lineNumber":27,"author":{"gitID":"-"},"content":" */"},{"lineNumber":28,"author":{"gitID":"-"},"content":"public class TestApp extends MainApp {"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static final String SAVE_LOCATION_FOR_TESTING \u003d TestUtil.getFilePathInSandboxFolder(\"sampleData.xml\");"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public static final String APP_TITLE \u003d \"Test App\";"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    protected static final String DEFAULT_PREF_FILE_LOCATION_FOR_TESTING \u003d"},{"lineNumber":34,"author":{"gitID":"-"},"content":"            TestUtil.getFilePathInSandboxFolder(\"pref_testing.json\");"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    protected static final String BOOK_SHELF_NAME \u003d \"Test\";"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    protected Supplier\u003cReadOnlyBookShelf\u003e initialDataSupplier \u003d () -\u003e null;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    protected String saveFileLocation \u003d SAVE_LOCATION_FOR_TESTING;"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public TestApp() {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"    public TestApp(Supplier\u003cReadOnlyBookShelf\u003e initialDataSupplier, String saveFileLocation) {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        this.initialDataSupplier \u003d initialDataSupplier;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        this.saveFileLocation \u003d saveFileLocation;"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        // If some initial local data has been provided, write those to the file"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        if (initialDataSupplier.get() !\u003d null) {"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"            createDataFileWithData(new XmlSerializableBookShelf(this.initialDataSupplier.get()),"},{"lineNumber":50,"author":{"gitID":"-"},"content":"                    this.saveFileLocation);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    protected Config initConfig(String configFilePath) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        Config config \u003d super.initConfig(configFilePath);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        config.setAppTitle(APP_TITLE);"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        config.setUserPrefsFilePath(DEFAULT_PREF_FILE_LOCATION_FOR_TESTING);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        return config;"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d super.initPrefs(storage);"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        double x \u003d Screen.getPrimary().getVisualBounds().getMinX();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        double y \u003d Screen.getPrimary().getVisualBounds().getMinY();"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        userPrefs.updateLastUsedGuiSetting(new GuiSettings(600.0, 600.0, (int) x, (int) y));"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"        userPrefs.setBookShelfFilePath(saveFileLocation);"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        userPrefs.setBookShelfName(BOOK_SHELF_NAME);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        return userPrefs;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a defensive copy of the book shelf data stored inside the storage file."},{"lineNumber":75,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelf readStorageBookShelf() {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"            return new BookShelf(storage.readBookShelf().get());"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        } catch (DataConversionException dce) {"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"            throw new AssertionError(\"Data is not in the BookShelf format.\");"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Storage file cannot be found.\");"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":87,"author":{"gitID":"-"},"content":"     * Returns the file path of the storage file."},{"lineNumber":88,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    public String getStorageSaveLocation() {"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        return storage.getBookShelfFilePath();"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":94,"author":{"gitID":"-"},"content":"     * Returns a defensive copy of the model."},{"lineNumber":95,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    public Model getModel() {"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"        Model copy \u003d new ModelManager((model.getBookShelf()), new UserPrefs());"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"        ModelHelper.setFilteredList(copy, model.getFilteredBookList());"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        return copy;"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":103,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        ui.start(primaryStage);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        launch(args);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":112,"author":{"gitID":"-"},"content":"     * Creates an XML file at the {@code filePath} with the {@code data}."},{"lineNumber":113,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    private \u003cT\u003e void createDataFileWithData(T data, String filePath) {"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":116,"author":{"gitID":"-"},"content":"            File saveFileForTesting \u003d new File(filePath);"},{"lineNumber":117,"author":{"gitID":"-"},"content":"            FileUtil.createIfMissing(saveFileForTesting);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"            XmlUtil.saveDataToFile(saveFileForTesting, data);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":120,"author":{"gitID":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":16,"-":107}},{"path":"src/test/java/seedu/address/ui/StatusBarFooterTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postNow;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_INITIAL;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_UPDATED;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.time.Clock;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.time.Instant;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.AfterClass;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import guitests.guihandles.StatusBarFooterHandle;"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class StatusBarFooterTest extends GuiUnitTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final String STUB_SAVE_LOCATION \u003d \"Stub\";"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final String RELATIVE_PATH \u003d \"./\";"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    private static final BookShelfChangedEvent EVENT_STUB \u003d new BookShelfChangedEvent(new BookShelf());"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private static final Clock originalClock \u003d StatusBarFooter.getClock();"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final Clock injectedClock \u003d Clock.fixed(Instant.now(), ZoneId.systemDefault());"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private StatusBarFooterHandle statusBarFooterHandle;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @BeforeClass"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public static void setUpBeforeClass() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        // inject fixed clock"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        StatusBarFooter.setClock(injectedClock);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @AfterClass"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public static void tearDownAfterClass() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        // restore original clock"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        StatusBarFooter.setClock(originalClock);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(STUB_SAVE_LOCATION);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        uiPartRule.setUiPart(statusBarFooter);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        statusBarFooterHandle \u003d new StatusBarFooterHandle(statusBarFooter.getRoot());"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public void display() {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        // initial state"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        assertStatusBarContent(RELATIVE_PATH + STUB_SAVE_LOCATION, SYNC_STATUS_INITIAL);"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        // after book shelf is updated"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        postNow(EVENT_STUB);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertStatusBarContent(RELATIVE_PATH + STUB_SAVE_LOCATION,"},{"lineNumber":62,"author":{"gitID":"-"},"content":"                String.format(SYNC_STATUS_UPDATED, new Date(injectedClock.millis()).toString()));"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * Asserts that the save location matches that of {@code expectedSaveLocation}, and the"},{"lineNumber":67,"author":{"gitID":"-"},"content":"     * sync status matches that of {@code expectedSyncStatus}."},{"lineNumber":68,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    private void assertStatusBarContent(String expectedSaveLocation, String expectedSyncStatus) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        assertEquals(expectedSaveLocation, statusBarFooterHandle.getSaveLocation());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertEquals(expectedSyncStatus, statusBarFooterHandle.getSyncStatus());"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"-":71}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"public class ConfigTest {"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public void toString_defaultObject_stringReturned() {"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"        String defaultConfigAsString \u003d \"App title : Bibliotek\\n\""},{"lineNumber":18,"author":{"gitID":"-"},"content":"                + \"Current log level : INFO\\n\""},{"lineNumber":19,"author":{"gitID":"-"},"content":"                + \"Preference file Location : preferences.json\";"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public void equalsMethod() {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        Config defaultConfig \u003d new Config();"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        assertNotNull(defaultConfig);"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":1,"-":31}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class AppUtilTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public void getImage_exitingImage() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertNotNull(AppUtil.getImage(\"/images/book_flat_32.png\"));"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        AppUtil.getImage(null);"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void checkArgument_true_nothingHappens() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(true);"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(true, \"\");"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalArgumentException.class);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(false);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        String errorMessage \u003d \"error message\";"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalArgumentException.class);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        thrown.expectMessage(errorMessage);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        AppUtil.checkArgument(false,  errorMessage);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":1,"-":46}},{"path":"src/test/java/seedu/address/commons/util/XmlUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javax.xml.bind.JAXBException;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.storage.XmlAdaptedAuthor;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.storage.XmlAdaptedBook;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.storage.XmlAdaptedCategory;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.storage.XmlSerializableBookShelf;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.BookShelfBuilder;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.testutil.TestUtil;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"public class XmlUtilTest {"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"src/test/data/XmlUtilTest/\");"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private static final File EMPTY_FILE \u003d new File(TEST_DATA_FOLDER + \"empty.xml\");"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final File MISSING_FILE \u003d new File(TEST_DATA_FOLDER + \"missing.xml\");"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    private static final File VALID_FILE \u003d new File(TEST_DATA_FOLDER + \"validBookShelf.xml\");"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    private static final File MISSING_BOOK_FIELD_FILE \u003d new File(TEST_DATA_FOLDER + \"missingBookField.xml\");"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    private static final File VALID_BOOK_FILE \u003d new File(TEST_DATA_FOLDER + \"validBook.xml\");"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    private static final File TEMP_FILE \u003d new File(TestUtil.getFilePathInSandboxFolder(\"tempBookShelf.xml\"));"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_TITLE \u003d \"Artemis\";"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_DESCRIPTION \u003d \"This is Artemis.\";"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    private static final List\u003cXmlAdaptedAuthor\u003e VALID_AUTHORS \u003d"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"            Collections.singletonList(new XmlAdaptedAuthor(\"Andy Weir\"));"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    private static final List\u003cXmlAdaptedCategory\u003e VALID_CATEGORIES \u003d"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"            Collections.singletonList(new XmlAdaptedCategory(\"Fiction\"));"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public void getDataFromFile_nullFile_throwsNullPointerException() throws Exception {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.getDataFromFile(null, BookShelf.class);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    public void getDataFromFile_nullClass_throwsNullPointerException() throws Exception {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        XmlUtil.getDataFromFile(VALID_FILE, null);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    public void getDataFromFile_missingFile_fileNotFoundException() throws Exception {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        thrown.expect(FileNotFoundException.class);"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.getDataFromFile(MISSING_FILE, BookShelf.class);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    public void getDataFromFile_emptyFile_dataFormatMismatchException() throws Exception {"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        thrown.expect(JAXBException.class);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.getDataFromFile(EMPTY_FILE, BookShelf.class);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public void getDataFromFile_validFile_validResult() throws Exception {"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf dataFromFile \u003d XmlUtil.getDataFromFile(VALID_FILE, XmlSerializableBookShelf.class).toModelType();"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(4, dataFromFile.getBookList().size());"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    public void xmlAdaptedBookFromFile_fileWithMissingBookField_validResult() throws Exception {"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook actualBook \u003d XmlUtil.getDataFromFile("},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"                MISSING_BOOK_FIELD_FILE, XmlAdaptedBookWithRootElement.class);"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook expectedBook \u003d new XmlAdaptedBook(null, VALID_DESCRIPTION, VALID_AUTHORS, VALID_CATEGORIES);"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedBook, actualBook);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    public void xmlAdaptedBookFromFile_fileWithValidBook_validResult() throws Exception {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook actualBook \u003d XmlUtil.getDataFromFile("},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"                VALID_BOOK_FILE, XmlAdaptedBookWithRootElement.class);"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook expectedBook \u003d new XmlAdaptedBook("},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"                VALID_TITLE, VALID_DESCRIPTION, VALID_AUTHORS, VALID_CATEGORIES);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedBook, actualBook);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    public void saveDataToFile_nullFile_throwsNullPointerException() throws Exception {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.saveDataToFile(null, new BookShelf());"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    public void saveDataToFile_nullClass_throwsNullPointerException() throws Exception {"},{"lineNumber":101,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(VALID_FILE, null);"},{"lineNumber":103,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    public void saveDataToFile_missingFile_fileNotFoundException() throws Exception {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        thrown.expect(FileNotFoundException.class);"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"        XmlUtil.saveDataToFile(MISSING_FILE, new BookShelf());"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":112,"author":{"gitID":"-"},"content":"    public void saveDataToFile_validFile_dataSaved() throws Exception {"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        TEMP_FILE.createNewFile();"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf dataToWrite \u003d new XmlSerializableBookShelf(new BookShelf());"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableBookShelf.class);"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);"},{"lineNumber":118,"author":{"gitID":"-"},"content":""},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"        BookShelfBuilder builder \u003d new BookShelfBuilder(new BookShelf());"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"        dataToWrite \u003d new XmlSerializableBookShelf(builder.withBook(new BookBuilder().build()).build());"},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":"        dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableBookShelf.class);"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitID":"-"},"content":""},{"lineNumber":127,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":"     * Test class annotated with {@code XmlRootElement} to allow unmarshalling of .xml data to {@code XmlAdaptedBook}"},{"lineNumber":129,"author":{"gitID":"-"},"content":"     * objects."},{"lineNumber":130,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":131,"author":{"gitID":"takuyakanbr"},"content":"    @XmlRootElement(name \u003d \"book\")"},{"lineNumber":132,"author":{"gitID":"takuyakanbr"},"content":"    private static class XmlAdaptedBookWithRootElement extends XmlAdaptedBook {}"},{"lineNumber":133,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":44,"-":89}},{"path":"src/test/java/seedu/address/ui/BookListPanelTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.testutil.EventsUtil.postNow;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBooks;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysBook;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardEquals;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookCardHandle;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookListPanelHandle;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"public class BookListPanelTest extends GuiUnitTest {"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    private static final ObservableList\u003cBook\u003e TYPICAL_BOOKS \u003d"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"            FXCollections.observableList(getTypicalBooks());"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    private static final JumpToListRequestEvent JUMP_TO_SECOND_EVENT \u003d new JumpToListRequestEvent(INDEX_SECOND_BOOK);"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    private BookListPanelHandle bookListPanelHandle;"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    @Before"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    public void setUp() {"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        BookListPanel bookListPanel \u003d new BookListPanel(TYPICAL_BOOKS);"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        uiPartRule.setUiPart(bookListPanel);"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        bookListPanelHandle \u003d new BookListPanelHandle(getChildNode(bookListPanel.getRoot(),"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"                BookListPanelHandle.BOOK_LIST_VIEW_ID));"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    @Test"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    public void display() {"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        for (int i \u003d 0; i \u003c TYPICAL_BOOKS.size(); i++) {"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"            bookListPanelHandle.navigateToCard(TYPICAL_BOOKS.get(i));"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"            Book expectedBook \u003d TYPICAL_BOOKS.get(i);"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"            BookCardHandle actualCard \u003d bookListPanelHandle.getBookCardHandle(i);"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"            assertCardDisplaysBook(expectedBook, actualCard);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"            assertEquals(Integer.toString(i + 1) + \". \", actualCard.getId());"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public void handleJumpToListRequestEvent() {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        postNow(JUMP_TO_SECOND_EVENT);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        BookCardHandle expectedCard \u003d bookListPanelHandle.getBookCardHandle(INDEX_SECOND_BOOK.getZeroBased());"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        BookCardHandle selectedCard \u003d bookListPanelHandle.getHandleToSelectedCard();"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertCardEquals(expectedCard, selectedCard);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":34,"-":24}},{"path":"src/test/java/seedu/address/network/api/google/JsonDeserializerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletionException;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"public class JsonDeserializerTest {"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    private JsonDeserializer deserializer \u003d new JsonDeserializer();"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBook_validResponse_success() throws Exception {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(BookDeserializerTest.VALID_RESPONSE_FILE);"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        Book book \u003d deserializer.convertJsonStringToBook(json);"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book.getTitle().title);"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book.getDescription().description);"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBook_validResponseNoDesc_success() throws Exception {"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(BookDeserializerTest.VALID_RESPONSE_NO_DESC_FILE);"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        Book book \u003d deserializer.convertJsonStringToBook(json);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book.getTitle().title);"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"\", book.getDescription().description);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBook_invalidResponseWrongType_throwsCompletionException() throws Exception {"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(BookDeserializerTest.INVALID_RESPONSE_WRONG_TYPE_FILE);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        deserializer.convertJsonStringToBook(json);"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBook_errorResponse_throwsCompletionException() throws Exception {"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(BookDeserializerTest.ERROR_RESPONSE_FILE);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        deserializer.convertJsonStringToBook(json);"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBookShelf_validResponse_success() throws Exception {"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(BookShelfDeserializerTest.VALID_RESPONSE_FILE);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf bookShelf \u003d deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book1.getTitle().title);"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book1.getDescription().description);"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBookShelf_validResponseNoId_success() throws Exception {"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(BookShelfDeserializerTest.VALID_RESPONSE_NO_ID_FILE);"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf bookShelf \u003d deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book1.getTitle().title);"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"\", book1.getDescription().description);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        Book book2 \u003d bookShelf.getBookList().get(1);"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title 2\", book2.getTitle().title);"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"\", book2.getDescription().description);"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBookShelf_invalidResponseWrongType_throwsCompletionException() throws Exception {"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(BookShelfDeserializerTest.INVALID_RESPONSE_WRONG_TYPE_FILE);"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    public void convertJsonStringToBookShelf_errorResponse_throwsCompletionException() throws Exception {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(BookShelfDeserializerTest.ERROR_RESPONSE_FILE);"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        deserializer.convertJsonStringToBookShelf(json);"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":79,"-":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"public class LogicManagerTest {"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private Model model \u003d new ModelManager();"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private Logic logic \u003d new LogicManager(model);"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        assertHistoryCorrect(invalidCommand);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        String deleteCommand \u003d \"delete 9\";"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertHistoryCorrect(deleteCommand);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public void execute_validCommand_success() {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertHistoryCorrect(listCommand);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"    public void getFilteredBookList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        logic.getFilteredBookList().remove(0);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that no exceptions are thrown and that the result message is correct."},{"lineNumber":57,"author":{"gitID":"-"},"content":"     * Also confirms that {@code expectedModel} is as specified."},{"lineNumber":58,"author":{"gitID":"-"},"content":"     * @see #assertCommandBehavior(Class, String, String, Model)"},{"lineNumber":59,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage, Model expectedModel) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        assertCommandBehavior(null, inputCommand, expectedMessage, expectedModel);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct."},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * @see #assertCommandBehavior(Class, String, String, Model)"},{"lineNumber":67,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct."},{"lineNumber":74,"author":{"gitID":"-"},"content":"     * @see #assertCommandBehavior(Class, String, String, Model)"},{"lineNumber":75,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct."},{"lineNumber":82,"author":{"gitID":"-"},"content":"     * @see #assertCommandBehavior(Class, String, String, Model)"},{"lineNumber":83,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c?\u003e expectedException, String expectedMessage) {"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        Model expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertCommandBehavior(expectedException, inputCommand, expectedMessage, expectedModel);"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":90,"author":{"gitID":"-"},"content":"     * Executes the command, confirms that the result message is correct and that the expected exception is thrown,"},{"lineNumber":91,"author":{"gitID":"-"},"content":"     * and also confirms that the following two parts of the LogicManager object\u0027s state are as expected:\u003cbr\u003e"},{"lineNumber":92,"author":{"gitID":"-"},"content":"     *      - the internal model manager data are same as those in the {@code expectedModel} \u003cbr\u003e"},{"lineNumber":93,"author":{"gitID":"-"},"content":"     *      - {@code expectedModel}\u0027s address book was saved to the storage file."},{"lineNumber":94,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    private void assertCommandBehavior(Class\u003c?\u003e expectedException, String inputCommand,"},{"lineNumber":96,"author":{"gitID":"-"},"content":"                                           String expectedMessage, Model expectedModel) {"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":99,"author":{"gitID":"-"},"content":"            CommandResult result \u003d logic.execute(inputCommand);"},{"lineNumber":100,"author":{"gitID":"-"},"content":"            assertEquals(expectedException, null);"},{"lineNumber":101,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, result.feedbackToUser);"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        } catch (CommandException | ParseException e) {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"            assertEquals(expectedException, e.getClass());"},{"lineNumber":104,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, e.getMessage());"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":111,"author":{"gitID":"-"},"content":"     * Asserts that the result display shows all the {@code expectedCommands} upon the execution of"},{"lineNumber":112,"author":{"gitID":"-"},"content":"     * {@code HistoryCommand}."},{"lineNumber":113,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":114,"author":{"gitID":"-"},"content":"    private void assertHistoryCorrect(String... expectedCommands) {"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":116,"author":{"gitID":"-"},"content":"            CommandResult result \u003d logic.execute(HistoryCommand.COMMAND_WORD);"},{"lineNumber":117,"author":{"gitID":"-"},"content":"            String expectedMessage \u003d String.format("},{"lineNumber":118,"author":{"gitID":"-"},"content":"                    HistoryCommand.MESSAGE_SUCCESS, String.join(\"\\n\", expectedCommands));"},{"lineNumber":119,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, result.feedbackToUser);"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        } catch (ParseException | CommandException e) {"},{"lineNumber":121,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Parsing and execution of HistoryCommand.COMMAND_WORD should succeed.\", e);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"takuyakanbr":1,"-":119}},{"path":"src/test/java/systemtests/BibliotekSystemTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package systemtests;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static guitests.guihandles.WebViewUtil.waitUntilBrowserLoaded;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.ui.BrowserPanel.DEFAULT_PAGE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_INITIAL;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_UPDATED;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.ui.UiPart.FXML_FILE_FOLDER;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.net.MalformedURLException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import java.net.URL;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"import org.junit.After;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import org.junit.BeforeClass;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import org.junit.ClassRule;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"import guitests.guihandles.BookListPanelHandle;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import guitests.guihandles.BrowserPanelHandle;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import guitests.guihandles.CommandBoxHandle;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainMenuHandle;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import guitests.guihandles.MainWindowHandle;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"import guitests.guihandles.StatusBarFooterHandle;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.MainApp;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.address.TestApp;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"import seedu.address.ui.BrowserPanel;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"import seedu.address.ui.CommandBox;"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":" * A system test class for Bibliotek, which provides access to handles of GUI components and helper methods"},{"lineNumber":46,"author":{"gitID":"-"},"content":" * for test verification."},{"lineNumber":47,"author":{"gitID":"-"},"content":" */"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"public abstract class BibliotekSystemTest {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    @ClassRule"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public static ClockRule clockRule \u003d new ClockRule();"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_DEFAULT_STYLE \u003d Arrays.asList(\"text-input\", \"text-field\");"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_ERROR_STYLE \u003d"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            Arrays.asList(\"text-input\", \"text-field\", CommandBox.ERROR_STYLE_CLASS);"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    private MainWindowHandle mainWindowHandle;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    private TestApp testApp;"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    private SystemTestSetupHelper setupHelper;"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @BeforeClass"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public static void setupBeforeClass() {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        SystemTestSetupHelper.initialize();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        setupHelper \u003d new SystemTestSetupHelper();"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        testApp \u003d setupHelper.setupApplication(this::getInitialData, getDataFileLocation());"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        mainWindowHandle \u003d setupHelper.setupMainWindowHandle();"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        waitUntilBrowserLoaded(getBrowserPanel());"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        assertApplicationStartingStateIsCorrect();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    @After"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    public void tearDown() throws Exception {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        setupHelper.tearDownStage();"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        EventsCenter.clearSubscribers();"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":82,"author":{"gitID":"-"},"content":"     * Returns the data to be loaded into the file in {@link #getDataFileLocation()}."},{"lineNumber":83,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"    protected BookShelf getInitialData() {"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        return TypicalBooks.getTypicalBookShelf();"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":89,"author":{"gitID":"-"},"content":"     * Returns the directory of the data file."},{"lineNumber":90,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    protected String getDataFileLocation() {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        return TestApp.SAVE_LOCATION_FOR_TESTING;"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"    public MainWindowHandle getMainWindowHandle() {"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        return mainWindowHandle;"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"    public CommandBoxHandle getCommandBox() {"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getCommandBox();"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"    public BookListPanelHandle getBookListPanel() {"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"        return mainWindowHandle.getBookListPanel();"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    public MainMenuHandle getMainMenu() {"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getMainMenu();"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    public BrowserPanelHandle getBrowserPanel() {"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getBrowserPanel();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getStatusBarFooter();"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"-"},"content":""},{"lineNumber":119,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        return mainWindowHandle.getResultDisplay();"},{"lineNumber":121,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":124,"author":{"gitID":"-"},"content":"     * Executes {@code command} in the application\u0027s {@code CommandBox}."},{"lineNumber":125,"author":{"gitID":"-"},"content":"     * Method returns after UI components have been updated."},{"lineNumber":126,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":127,"author":{"gitID":"-"},"content":"    protected void executeCommand(String command) {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        rememberStates();"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        // Injects a fixed clock before executing a command so that the time stamp shown in the status bar"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        // after each command is predictable and also different from the previous command."},{"lineNumber":131,"author":{"gitID":"-"},"content":"        clockRule.setInjectedClockToCurrentTime();"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"        mainWindowHandle.getCommandBox().run(command);"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"        waitUntilBrowserLoaded(getBrowserPanel());"},{"lineNumber":136,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"-"},"content":""},{"lineNumber":138,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":139,"author":{"gitID":"qiu-siqi"},"content":"     * Displays all books in the book shelf."},{"lineNumber":140,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":141,"author":{"gitID":"qiu-siqi"},"content":"    protected void showAllBooks() {"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        executeCommand(ListCommand.COMMAND_WORD);"},{"lineNumber":143,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(getModel().getBookShelf().getBookList().size(), getModel().getFilteredBookList().size());"},{"lineNumber":144,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitID":"-"},"content":""},{"lineNumber":146,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":147,"author":{"gitID":"qiu-siqi"},"content":"     * Selects the book at {@code index} of the displayed list."},{"lineNumber":148,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitID":"qiu-siqi"},"content":"    protected void selectBook(Index index) {"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + index.getOneBased());"},{"lineNumber":151,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(index.getZeroBased(), getBookListPanel().getSelectedCardIndex());"},{"lineNumber":152,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"-"},"content":""},{"lineNumber":154,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":155,"author":{"gitID":"qiu-siqi"},"content":"     * Deletes all books in the book shelf."},{"lineNumber":156,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":157,"author":{"gitID":"qiu-siqi"},"content":"    protected void deleteAllBooks() {"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        executeCommand(ClearCommand.COMMAND_WORD);"},{"lineNumber":159,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(0, getModel().getBookShelf().getBookList().size());"},{"lineNumber":160,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitID":"-"},"content":""},{"lineNumber":162,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":163,"author":{"gitID":"-"},"content":"     * Asserts that the {@code CommandBox} displays {@code expectedCommandInput}, the {@code ResultDisplay} displays"},{"lineNumber":164,"author":{"gitID":"qiu-siqi"},"content":"     * {@code expectedResultMessage}, the model and storage contains the same book objects as {@code expectedModel}"},{"lineNumber":165,"author":{"gitID":"qiu-siqi"},"content":"     * and the book list panel displays the books in the model correctly."},{"lineNumber":166,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":167,"author":{"gitID":"-"},"content":"    protected void assertApplicationDisplaysExpected(String expectedCommandInput, String expectedResultMessage,"},{"lineNumber":168,"author":{"gitID":"-"},"content":"            Model expectedModel) {"},{"lineNumber":169,"author":{"gitID":"-"},"content":"        assertEquals(expectedCommandInput, getCommandBox().getInput());"},{"lineNumber":170,"author":{"gitID":"-"},"content":"        assertEquals(expectedResultMessage, getResultDisplay().getText());"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, getModel());"},{"lineNumber":172,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedModel.getBookShelf(), testApp.readStorageBookShelf());"},{"lineNumber":173,"author":{"gitID":"qiu-siqi"},"content":"        assertListMatching(getBookListPanel(), expectedModel.getFilteredBookList());"},{"lineNumber":174,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitID":"-"},"content":""},{"lineNumber":176,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":177,"author":{"gitID":"qiu-siqi"},"content":"     * Calls {@code BrowserPanelHandle}, {@code BookListPanelHandle} and {@code StatusBarFooterHandle} to remember"},{"lineNumber":178,"author":{"gitID":"-"},"content":"     * their current state."},{"lineNumber":179,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":180,"author":{"gitID":"-"},"content":"    private void rememberStates() {"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        StatusBarFooterHandle statusBarFooterHandle \u003d getStatusBarFooter();"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        getBrowserPanel().rememberUrl();"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        statusBarFooterHandle.rememberSaveLocation();"},{"lineNumber":184,"author":{"gitID":"-"},"content":"        statusBarFooterHandle.rememberSyncStatus();"},{"lineNumber":185,"author":{"gitID":"qiu-siqi"},"content":"        getBookListPanel().rememberSelectedBookCard();"},{"lineNumber":186,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitID":"-"},"content":""},{"lineNumber":188,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":189,"author":{"gitID":"-"},"content":"     * Asserts that the previously selected card is now deselected and the browser\u0027s url remains displaying the details"},{"lineNumber":190,"author":{"gitID":"qiu-siqi"},"content":"     * of the previously selected book."},{"lineNumber":191,"author":{"gitID":"-"},"content":"     * @see BrowserPanelHandle#isUrlChanged()"},{"lineNumber":192,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":193,"author":{"gitID":"-"},"content":"    protected void assertSelectedCardDeselected() {"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        assertFalse(getBrowserPanel().isUrlChanged());"},{"lineNumber":195,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(getBookListPanel().isAnyCardSelected());"},{"lineNumber":196,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitID":"-"},"content":""},{"lineNumber":198,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":199,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the browser\u0027s url is changed to display the details of the book in the book list panel at"},{"lineNumber":200,"author":{"gitID":"-"},"content":"     * {@code expectedSelectedCardIndex}, and only the card at {@code expectedSelectedCardIndex} is selected."},{"lineNumber":201,"author":{"gitID":"-"},"content":"     * @see BrowserPanelHandle#isUrlChanged()"},{"lineNumber":202,"author":{"gitID":"qiu-siqi"},"content":"     * @see BookListPanelHandle#isSelectedBookCardChanged()"},{"lineNumber":203,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":204,"author":{"gitID":"-"},"content":"    protected void assertSelectedCardChanged(Index expectedSelectedCardIndex) {"},{"lineNumber":205,"author":{"gitID":"qiu-siqi"},"content":"        String selectedCardTitle \u003d getBookListPanel().getHandleToSelectedCard().getTitle();"},{"lineNumber":206,"author":{"gitID":"-"},"content":"        URL expectedUrl;"},{"lineNumber":207,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":208,"author":{"gitID":"takuyakanbr"},"content":"            expectedUrl \u003d new URL(BrowserPanel.SEARCH_PAGE_URL"},{"lineNumber":209,"author":{"gitID":"takuyakanbr"},"content":"                    + StringUtil.urlEncode(selectedCardTitle).replaceAll(\"\\\\+\", \"%20\"));"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        } catch (MalformedURLException mue) {"},{"lineNumber":211,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"URL expected to be valid.\");"},{"lineNumber":212,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":213,"author":{"gitID":"-"},"content":"        assertEquals(expectedUrl, getBrowserPanel().getLoadedUrl());"},{"lineNumber":214,"author":{"gitID":"-"},"content":""},{"lineNumber":215,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(expectedSelectedCardIndex.getZeroBased(), getBookListPanel().getSelectedCardIndex());"},{"lineNumber":216,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitID":"-"},"content":""},{"lineNumber":218,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":219,"author":{"gitID":"qiu-siqi"},"content":"     * Asserts that the browser\u0027s url and the selected card in the book list panel remain unchanged."},{"lineNumber":220,"author":{"gitID":"-"},"content":"     * @see BrowserPanelHandle#isUrlChanged()"},{"lineNumber":221,"author":{"gitID":"qiu-siqi"},"content":"     * @see BookListPanelHandle#isSelectedBookCardChanged()"},{"lineNumber":222,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":223,"author":{"gitID":"-"},"content":"    protected void assertSelectedCardUnchanged() {"},{"lineNumber":224,"author":{"gitID":"-"},"content":"        assertFalse(getBrowserPanel().isUrlChanged());"},{"lineNumber":225,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(getBookListPanel().isSelectedBookCardChanged());"},{"lineNumber":226,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":227,"author":{"gitID":"-"},"content":""},{"lineNumber":228,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":229,"author":{"gitID":"-"},"content":"     * Asserts that the command box\u0027s shows the default style."},{"lineNumber":230,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":231,"author":{"gitID":"-"},"content":"    protected void assertCommandBoxShowsDefaultStyle() {"},{"lineNumber":232,"author":{"gitID":"-"},"content":"        assertEquals(COMMAND_BOX_DEFAULT_STYLE, getCommandBox().getStyleClass());"},{"lineNumber":233,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":234,"author":{"gitID":"-"},"content":""},{"lineNumber":235,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":236,"author":{"gitID":"-"},"content":"     * Asserts that the command box\u0027s shows the error style."},{"lineNumber":237,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":238,"author":{"gitID":"-"},"content":"    protected void assertCommandBoxShowsErrorStyle() {"},{"lineNumber":239,"author":{"gitID":"-"},"content":"        assertEquals(COMMAND_BOX_ERROR_STYLE, getCommandBox().getStyleClass());"},{"lineNumber":240,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitID":"-"},"content":""},{"lineNumber":242,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":243,"author":{"gitID":"-"},"content":"     * Asserts that the entire status bar remains the same."},{"lineNumber":244,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":245,"author":{"gitID":"-"},"content":"    protected void assertStatusBarUnchanged() {"},{"lineNumber":246,"author":{"gitID":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();"},{"lineNumber":247,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());"},{"lineNumber":248,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSyncStatusChanged());"},{"lineNumber":249,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitID":"-"},"content":""},{"lineNumber":251,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":252,"author":{"gitID":"-"},"content":"     * Asserts that only the sync status in the status bar was changed to the timing of"},{"lineNumber":253,"author":{"gitID":"-"},"content":"     * {@code ClockRule#getInjectedClock()}, while the save location remains the same."},{"lineNumber":254,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":255,"author":{"gitID":"-"},"content":"    protected void assertStatusBarUnchangedExceptSyncStatus() {"},{"lineNumber":256,"author":{"gitID":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();"},{"lineNumber":257,"author":{"gitID":"-"},"content":"        String timestamp \u003d new Date(clockRule.getInjectedClock().millis()).toString();"},{"lineNumber":258,"author":{"gitID":"-"},"content":"        String expectedSyncStatus \u003d String.format(SYNC_STATUS_UPDATED, timestamp);"},{"lineNumber":259,"author":{"gitID":"-"},"content":"        assertEquals(expectedSyncStatus, handle.getSyncStatus());"},{"lineNumber":260,"author":{"gitID":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());"},{"lineNumber":261,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitID":"-"},"content":""},{"lineNumber":263,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":264,"author":{"gitID":"-"},"content":"     * Asserts that the starting state of the application is correct."},{"lineNumber":265,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":266,"author":{"gitID":"-"},"content":"    private void assertApplicationStartingStateIsCorrect() {"},{"lineNumber":267,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":268,"author":{"gitID":"-"},"content":"            assertEquals(\"\", getCommandBox().getInput());"},{"lineNumber":269,"author":{"gitID":"-"},"content":"            assertEquals(\"\", getResultDisplay().getText());"},{"lineNumber":270,"author":{"gitID":"qiu-siqi"},"content":"            assertListMatching(getBookListPanel(), getModel().getFilteredBookList());"},{"lineNumber":271,"author":{"gitID":"-"},"content":"            assertEquals(MainApp.class.getResource(FXML_FILE_FOLDER + DEFAULT_PAGE), getBrowserPanel().getLoadedUrl());"},{"lineNumber":272,"author":{"gitID":"-"},"content":"            assertEquals(\"./\" + testApp.getStorageSaveLocation(), getStatusBarFooter().getSaveLocation());"},{"lineNumber":273,"author":{"gitID":"-"},"content":"            assertEquals(SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());"},{"lineNumber":274,"author":{"gitID":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":275,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Starting state is wrong.\", e);"},{"lineNumber":276,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":277,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":278,"author":{"gitID":"-"},"content":""},{"lineNumber":279,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":280,"author":{"gitID":"-"},"content":"     * Returns a defensive copy of the current model."},{"lineNumber":281,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":282,"author":{"gitID":"-"},"content":"    protected Model getModel() {"},{"lineNumber":283,"author":{"gitID":"-"},"content":"        return testApp.getModel();"},{"lineNumber":284,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":285,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":34,"takuyakanbr":3,"-":248}},{"path":"src/test/java/seedu/address/network/api/google/BookDeserializerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import com.fasterxml.jackson.databind.JsonMappingException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"public class BookDeserializerTest {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"src/test/data/BookDeserializerTest/\");"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    public static final File VALID_RESPONSE_FILE \u003d new File(TEST_DATA_FOLDER + \"ValidResponse.json\");"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public static final File VALID_RESPONSE_NO_DESC_FILE \u003d new File(TEST_DATA_FOLDER + \"ValidResponseNoDesc.json\");"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    public static final File INVALID_RESPONSE_WRONG_TYPE_FILE \u003d"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"            new File(TEST_DATA_FOLDER + \"InvalidResponseWrongType.json\");"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public static final File ERROR_RESPONSE_FILE \u003d new File(TEST_DATA_FOLDER + \"ErrorResponse.json\");"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    private ObjectMapper mapper;"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    @Before"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public void setUp() {"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        mapper \u003d new ObjectMapper().configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        SimpleModule module \u003d new SimpleModule();"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        module.addDeserializer(Book.class, new BookDeserializer());"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        mapper.registerModule(module);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public void deserialize_validResponse_success() throws Exception {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(VALID_RESPONSE_FILE);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        Book book \u003d mapper.readValue(json, Book.class);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book.getTitle().title);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book.getDescription().description);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    public void deserialize_validResponseNoDesc_success() throws Exception {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(VALID_RESPONSE_NO_DESC_FILE);"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        Book book \u003d mapper.readValue(json, Book.class);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book.getTitle().title);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"\", book.getDescription().description);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    public void deserialize_invalidResponseWrongType_throwsJsonMappingException() throws Exception {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(JsonMappingException.class);"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(INVALID_RESPONSE_WRONG_TYPE_FILE);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        mapper.readValue(json, Book.class);"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    public void deserialize_errorResponse_throwsJsonMappingException() throws Exception {"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(JsonMappingException.class);"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(ERROR_RESPONSE_FILE);"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        mapper.readValue(json, Book.class);"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":57,"-":15}},{"path":"src/test/java/seedu/address/logic/parser/SelectCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Test scope: similar to {@code DeleteCommandParserTest}."},{"lineNumber":14,"author":{"gitID":"-"},"content":" * @see DeleteCommandParserTest"},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class SelectCommandParserTest {"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    private SelectCommandParser parser \u003d new SelectCommandParser();"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public void parse_validArgs_returnsSelectCommand() {"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"        assertParseSuccess(parser, \"1\", new SelectCommand(INDEX_FIRST_BOOK));"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class ParserUtilTest {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_TITLE \u003d \"Valid Title\";"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_DESCRIPTION \u003d \"Valid Description\";"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_AUTHOR_1 \u003d \"Author A\";"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_AUTHOR_2 \u003d \"Author B\";"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_CATEGORY_1 \u003d \"Category A\";"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_CATEGORY_2 \u003d \"Category B\";"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public final ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public void parseIndex_invalidInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        ParserUtil.parseIndex(\"10 a\");"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsIllegalValueException() throws Exception {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        thrown.expectMessage(MESSAGE_INVALID_INDEX);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1));"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        // No whitespaces"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(INDEX_FIRST_BOOK, ParserUtil.parseIndex(\"1\"));"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        // Leading and trailing whitespaces"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(INDEX_FIRST_BOOK, ParserUtil.parseIndex(\"  1  \"));"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    public void parseTitle_null_throwsNullPointerException() {"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle((String) null));"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle((Optional\u003cString\u003e) null));"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    public void parseTitle_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(ParserUtil.parseTitle(Optional.empty()).isPresent());"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    public void parseTitle_validValueWithoutWhitespace_returnsTitle() throws Exception {"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(VALID_TITLE));"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Optional.of(expectedTitle), ParserUtil.parseTitle(Optional.of(VALID_TITLE)));"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTrimmedTitle() throws Exception {"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        String titleWithWhitespace \u003d WHITESPACE + VALID_TITLE + WHITESPACE;"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(titleWithWhitespace));"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Optional.of(expectedTitle), ParserUtil.parseTitle(Optional.of(titleWithWhitespace)));"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    public void parseDescription_null_throwsNullPointerException() {"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((Optional\u003cString\u003e) null));"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"    public void parseDescription_optionalEmpty_returnsOptionalEmpty() throws Exception {"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(ParserUtil.parseDescription(Optional.empty()).isPresent());"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Optional.of(expectedDescription), ParserUtil.parseDescription(Optional.of(VALID_DESCRIPTION)));"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"        String descWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descWithWhitespace));"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Optional.of(expectedDescription), ParserUtil.parseDescription(Optional.of(descWithWhitespace)));"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"    public void parseAuthor_null_throwsNullPointerException() throws Exception {"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        ParserUtil.parseAuthor(null);"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"    public void parseAuthor_validValueWithoutWhitespace_returnsAuthor() throws Exception {"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"        Author expectedAuthor \u003d new Author(VALID_AUTHOR_1);"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedAuthor, ParserUtil.parseAuthor(VALID_AUTHOR_1));"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"    public void parseAuthors_collectionWithValidAuthors_returnsAuthorSet() throws Exception {"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cAuthor\u003e actualAuthorSet \u003d ParserUtil.parseAuthors(Arrays.asList(VALID_AUTHOR_1, VALID_AUTHOR_2));"},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cAuthor\u003e expectedAuthorSet \u003d"},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Author(VALID_AUTHOR_1), new Author(VALID_AUTHOR_2)));"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedAuthorSet, actualAuthorSet);"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"    public void parseCategory_null_throwsNullPointerException() throws Exception {"},{"lineNumber":135,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"        ParserUtil.parseCategory(null);"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"    public void parseCategory_validValueWithoutWhitespace_returnsCategory() throws Exception {"},{"lineNumber":141,"author":{"gitID":"takuyakanbr"},"content":"        Category expectedCategory \u003d new Category(VALID_CATEGORY_1);"},{"lineNumber":142,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedCategory, ParserUtil.parseCategory(VALID_CATEGORY_1));"},{"lineNumber":143,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":146,"author":{"gitID":"takuyakanbr"},"content":"    public void parseCategorys_collectionWithValidCategorys_returnsCategorySet() throws Exception {"},{"lineNumber":147,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cCategory\u003e actualCategorySet \u003d ParserUtil.parseCategories(Arrays.asList(VALID_CATEGORY_1, VALID_CATEGORY_2));"},{"lineNumber":148,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cCategory\u003e expectedCategorySet \u003d"},{"lineNumber":149,"author":{"gitID":"takuyakanbr"},"content":"                new HashSet\u003c\u003e(Arrays.asList(new Category(VALID_CATEGORY_1), new Category(VALID_CATEGORY_2)));"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(expectedCategorySet, actualCategorySet);"},{"lineNumber":152,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"takuyakanbr":59,"-":91}},{"path":"src/test/java/seedu/address/network/api/google/GoogleBooksApiTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletionException;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.HttpClient;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.HttpResponse;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"public class GoogleBooksApiTest {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_SEARCH_BOOKS_OK \u003d String.format(GoogleBooksApi.URL_SEARCH_BOOKS, \"123\");"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_BOOK_DETAILS_OK \u003d String.format(GoogleBooksApi.URL_BOOK_DETAILS, \"123\");"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_SEARCH_BOOKS_FAIL \u003d String.format(GoogleBooksApi.URL_SEARCH_BOOKS, \"\");"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private static final String URL_BOOK_DETAILS_FAIL \u003d String.format(GoogleBooksApi.URL_BOOK_DETAILS, \"\");"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    private GoogleBooksApi googleBooksApi;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    @Before"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public void setUp() {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi \u003d new GoogleBooksApi(new HttpClientStub());"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public void searchBooks_validParam_success() {"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf bookShelf \u003d googleBooksApi.searchBooks(\"123\").join();"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book1.getTitle().title);"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book1.getDescription().description);"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    public void searchBooks_invalidParam_throwsCompletionException() {"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.searchBooks(\"\").join();"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    public void getBookDetails_validId_success() {"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        Book book \u003d googleBooksApi.getBookDetails(\"123\").join();"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book.getTitle().title);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book.getDescription().description);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    public void getBookDetails_invalidId_throwsCompletionException() {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(CompletionException.class);"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.getBookDetails(\"\").join();"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    /** A stub HttpClient that returns preset responses when given certain urls, and null for other urls. */"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    private static class HttpClientStub extends HttpClient {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        public HttpClientStub() {"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"            super(null);"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        @Override"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        public CompletableFuture\u003cHttpResponse\u003e makeGetRequest(String url) {"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"            try {"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"                if (url.equals(URL_SEARCH_BOOKS_OK)) {"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"                    return CompletableFuture.completedFuture(makeResponse(200,"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"                            FileUtil.readFromFile(BookShelfDeserializerTest.VALID_RESPONSE_FILE)));"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"                } else if (url.equals(URL_BOOK_DETAILS_OK)) {"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"                    return CompletableFuture.completedFuture(makeResponse(200,"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"                            FileUtil.readFromFile(BookDeserializerTest.VALID_RESPONSE_FILE)));"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"                } else if (url.equals(URL_SEARCH_BOOKS_FAIL) || url.equals(URL_BOOK_DETAILS_FAIL)) {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"                    return CompletableFuture.completedFuture(makeResponse(503, \"{ \\\"error\\\": { \\\"code\\\": 503 } }\"));"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"                }"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"            } catch (IOException e) {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"                e.printStackTrace();"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"            }"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"            return null;"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        private HttpResponse makeResponse(int code, String body) {"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"            return new HttpResponse(code, \"application/json;\", body);"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":86,"-":7}},{"path":"src/test/java/seedu/address/network/api/google/BookShelfDeserializerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import com.fasterxml.jackson.databind.JsonMappingException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"public class BookShelfDeserializerTest {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"src/test/data/BookShelfDeserializerTest/\");"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public static final File VALID_RESPONSE_FILE \u003d new File(TEST_DATA_FOLDER + \"ValidResponse.json\");"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    public static final File VALID_RESPONSE_NO_ID_FILE \u003d new File(TEST_DATA_FOLDER + \"ValidResponseNoDesc.json\");"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    public static final File INVALID_RESPONSE_WRONG_TYPE_FILE \u003d"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"            new File(TEST_DATA_FOLDER + \"InvalidResponseWrongType.json\");"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    public static final File ERROR_RESPONSE_FILE \u003d new File(TEST_DATA_FOLDER + \"ErrorResponse.json\");"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    private ObjectMapper mapper;"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    @Before"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public void setUp() {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        mapper \u003d new ObjectMapper().configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        SimpleModule module \u003d new SimpleModule();"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        module.addDeserializer(BookShelf.class, new BookShelfDeserializer());"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        mapper.registerModule(module);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public void deserialize_validResponse_success() throws Exception {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(VALID_RESPONSE_FILE);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d mapper.readValue(json, BookShelf.class);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book1.getTitle().title);"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"This is a valid description.\", book1.getDescription().description);"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    public void deserialize_validResponseNoId_success() throws Exception {"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(VALID_RESPONSE_NO_ID_FILE);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d mapper.readValue(json, BookShelf.class);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        Book book1 \u003d bookShelf.getBookList().get(0);"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title\", book1.getTitle().title);"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"\", book1.getDescription().description);"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        Book book2 \u003d bookShelf.getBookList().get(1);"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"The Book Without a Title 2\", book2.getTitle().title);"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(\"\", book2.getDescription().description);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    public void deserialize_invalidResponseWrongType_throwsJsonMappingException() throws Exception {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(JsonMappingException.class);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(INVALID_RESPONSE_WRONG_TYPE_FILE);"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        mapper.readValue(json, BookShelf.class);"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    public void deserialize_errorResponse_throwsJsonMappingException() throws Exception {"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(JsonMappingException.class);"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        String json \u003d FileUtil.readFromFile(ERROR_RESPONSE_FILE);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        mapper.readValue(json, BookShelf.class);"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":63,"-":15}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the"},{"lineNumber":15,"author":{"gitID":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them."},{"lineNumber":16,"author":{"gitID":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and"},{"lineNumber":17,"author":{"gitID":"-"},"content":" * therefore should be covered by the ParserUtilTest."},{"lineNumber":18,"author":{"gitID":"-"},"content":" */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class DeleteCommandParserTest {"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_BOOK));"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_ARTEMIS;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AUTHOR_DESC_BABYLON;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_ARTEMIS;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_BABYLON;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_ARTEMIS;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BABYLON;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_ARTEMIS;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_BABYLON;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_ARTEMIS;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AUTHOR_BABYLON;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CATEGORY_ARTEMIS;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CATEGORY_BABYLON;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ARTEMIS;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_ARTEMIS;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"public class AddCommandParserTest {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void parse_allFieldsPresent_success() {"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        Book expectedBook \u003d new BookBuilder().withTitle(VALID_TITLE_ARTEMIS)"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthors(VALID_AUTHOR_ARTEMIS)"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"                .withCategories(VALID_CATEGORY_ARTEMIS)"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"                .withDescription(VALID_DESCRIPTION_ARTEMIS).build();"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        // whitespace only preamble"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TITLE_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"                + CATEGORY_DESC_ARTEMIS + DESCRIPTION_DESC_ARTEMIS, new AddCommand(expectedBook));"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        // multiple titles - last title accepted"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, TITLE_DESC_BABYLON + TITLE_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"                + CATEGORY_DESC_ARTEMIS + DESCRIPTION_DESC_ARTEMIS, new AddCommand(expectedBook));"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        // multiple descriptions - last description accepted"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, TITLE_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS + CATEGORY_DESC_ARTEMIS"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"                + DESCRIPTION_DESC_BABYLON + DESCRIPTION_DESC_ARTEMIS, new AddCommand(expectedBook));"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        // multiple authors"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        Book expectedBookMultipleAuthors \u003d new BookBuilder().withTitle(VALID_TITLE_ARTEMIS)"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthors(VALID_AUTHOR_ARTEMIS, VALID_AUTHOR_BABYLON)"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"                .withCategories(VALID_CATEGORY_ARTEMIS)"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"                .withDescription(VALID_DESCRIPTION_ARTEMIS).build();"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, TITLE_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS + AUTHOR_DESC_BABYLON"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"                + CATEGORY_DESC_ARTEMIS + DESCRIPTION_DESC_ARTEMIS, new AddCommand(expectedBookMultipleAuthors));"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        // multiple categories"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        Book expectedBookMultipleCategories \u003d new BookBuilder().withTitle(VALID_TITLE_ARTEMIS)"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"                .withAuthors(VALID_AUTHOR_ARTEMIS, VALID_AUTHOR_BABYLON)"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"                .withCategories(VALID_CATEGORY_ARTEMIS, VALID_CATEGORY_BABYLON)"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"                .withDescription(VALID_DESCRIPTION_ARTEMIS).build();"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        assertParseSuccess(parser, TITLE_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS + CATEGORY_DESC_BABYLON"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"                + CATEGORY_DESC_ARTEMIS + DESCRIPTION_DESC_ARTEMIS, new AddCommand(expectedBookMultipleCategories));"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        // missing title prefix"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        assertParseFailure(parser, VALID_TITLE_ARTEMIS + AUTHOR_DESC_ARTEMIS"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"                + CATEGORY_DESC_ARTEMIS + DESCRIPTION_DESC_ARTEMIS, expectedMessage);"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"        // missing description prefix"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        assertParseFailure(parser, TITLE_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"                + CATEGORY_DESC_ARTEMIS + VALID_DESCRIPTION_ARTEMIS, expectedMessage);"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        // missing author prefix"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        assertParseFailure(parser, TITLE_DESC_ARTEMIS + VALID_AUTHOR_ARTEMIS"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"                + CATEGORY_DESC_ARTEMIS + DESCRIPTION_DESC_ARTEMIS, expectedMessage);"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"        // missing category prefix"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        assertParseFailure(parser, TITLE_DESC_ARTEMIS + AUTHOR_DESC_ARTEMIS"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"                + VALID_CATEGORY_ARTEMIS + DESCRIPTION_DESC_ARTEMIS, expectedMessage);"},{"lineNumber":86,"author":{"gitID":"-"},"content":""},{"lineNumber":87,"author":{"gitID":"-"},"content":"        // all prefixes missing"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        assertParseFailure(parser, VALID_TITLE_ARTEMIS + VALID_AUTHOR_ARTEMIS"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"                + VALID_CATEGORY_ARTEMIS + VALID_DESCRIPTION_ARTEMIS, expectedMessage);"},{"lineNumber":90,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":14,"takuyakanbr":46,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class ListCommandTest {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private Model expectedModel;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private ListCommand listCommand;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        listCommand \u003d new ListCommand();"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        listCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        assertCommandSuccess(listCommand, model, ListCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        assertCommandSuccess(listCommand, model, ListCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertNotEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareRedoCommand;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareUndoCommand;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitID":"-"},"content":" * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for"},{"lineNumber":28,"author":{"gitID":"-"},"content":" * {@code DeleteCommand}."},{"lineNumber":29,"author":{"gitID":"-"},"content":" */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"public class DeleteCommandTest {"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    private Model model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public void execute_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.deleteBook(bookToDelete);"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() throws Exception {"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    public void execute_validIndexFilteredList_success() throws Exception {"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.deleteBook(bookToDelete);"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        showNoBook(expectedModel);"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"        // ensures that outOfBoundIndex is still in bounds of book shelf list"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getBookShelf().getBookList().size());"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":85,"author":{"gitID":"-"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"        // delete -\u003e first book deleted"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        deleteCommand.execute();"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        undoRedoStack.push(deleteCommand);"},{"lineNumber":96,"author":{"gitID":"-"},"content":""},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"        // undo -\u003e reverts bookshelf back to previous state and filtered book list to show all books"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"        // redo -\u003e same first book deleted again"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.deleteBook(bookToDelete);"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":103,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(outOfBoundIndex);"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"-"},"content":"        // execution failed -\u003e deleteCommand not pushed into undoRedoStack"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":115,"author":{"gitID":"-"},"content":""},{"lineNumber":116,"author":{"gitID":"-"},"content":"        // no commands in undoRedoStack -\u003e undoCommand and redoCommand fail"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"     * 1. Deletes a {@code Book} from a filtered book."},{"lineNumber":123,"author":{"gitID":"-"},"content":"     * 2. Undo the deletion."},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"     * 3. The unfiltered list should be shown now. Verify that the index of the previously deleted book in the"},{"lineNumber":125,"author":{"gitID":"-"},"content":"     * unfiltered list is different from the index at the filtered list."},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"     * 4. Redo the deletion. This ensures {@code RedoCommand} deletes the book object regardless of indexing."},{"lineNumber":127,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":128,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":129,"author":{"gitID":"-"},"content":"    public void executeUndoRedo_validIndexFilteredList_samePersonDeleted() throws Exception {"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);"},{"lineNumber":133,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":134,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":135,"author":{"gitID":"-"},"content":""},{"lineNumber":136,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_SECOND_BOOK);"},{"lineNumber":137,"author":{"gitID":"qiu-siqi"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());"},{"lineNumber":138,"author":{"gitID":"qiu-siqi"},"content":"        // delete -\u003e deletes second book in unfiltered book list / first book in filtered book list"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        deleteCommand.execute();"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        undoRedoStack.push(deleteCommand);"},{"lineNumber":141,"author":{"gitID":"-"},"content":""},{"lineNumber":142,"author":{"gitID":"qiu-siqi"},"content":"        // undo -\u003e reverts book shelf back to previous state and filtered book list to show all books"},{"lineNumber":143,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":144,"author":{"gitID":"-"},"content":""},{"lineNumber":145,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.deleteBook(bookToDelete);"},{"lineNumber":146,"author":{"gitID":"qiu-siqi"},"content":"        assertNotEquals(bookToDelete, model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased()));"},{"lineNumber":147,"author":{"gitID":"qiu-siqi"},"content":"        // redo -\u003e deletes same second book in unfiltered book list"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":149,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitID":"-"},"content":""},{"lineNumber":151,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":152,"author":{"gitID":"-"},"content":"    public void equals() throws Exception {"},{"lineNumber":153,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteFirstCommand \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":154,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteSecondCommand \u003d prepareCommand(INDEX_SECOND_BOOK);"},{"lineNumber":155,"author":{"gitID":"-"},"content":""},{"lineNumber":156,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":157,"author":{"gitID":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"},{"lineNumber":158,"author":{"gitID":"-"},"content":""},{"lineNumber":159,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":160,"author":{"gitID":"qiu-siqi"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d prepareCommand(INDEX_FIRST_BOOK);"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"        // one command preprocessed when previously equal -\u003e returns false"},{"lineNumber":164,"author":{"gitID":"-"},"content":"        deleteFirstCommandCopy.preprocessUndoableCommand();"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteFirstCommandCopy));"},{"lineNumber":166,"author":{"gitID":"-"},"content":""},{"lineNumber":167,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));"},{"lineNumber":169,"author":{"gitID":"-"},"content":""},{"lineNumber":170,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));"},{"lineNumber":172,"author":{"gitID":"-"},"content":""},{"lineNumber":173,"author":{"gitID":"qiu-siqi"},"content":"        // different book -\u003e returns false"},{"lineNumber":174,"author":{"gitID":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"},{"lineNumber":175,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":178,"author":{"gitID":"-"},"content":"     * Returns a {@code DeleteCommand} with the parameter {@code index}."},{"lineNumber":179,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":180,"author":{"gitID":"-"},"content":"    private DeleteCommand prepareCommand(Index index) {"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(index);"},{"lineNumber":182,"author":{"gitID":"-"},"content":"        deleteCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":183,"author":{"gitID":"-"},"content":"        return deleteCommand;"},{"lineNumber":184,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitID":"-"},"content":""},{"lineNumber":186,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitID":"qiu-siqi"},"content":"     * Updates {@code model}\u0027s filtered list to show no book."},{"lineNumber":188,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":189,"author":{"gitID":"qiu-siqi"},"content":"    private void showNoBook(Model model) {"},{"lineNumber":190,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(p -\u003e false);"},{"lineNumber":191,"author":{"gitID":"-"},"content":""},{"lineNumber":192,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(model.getFilteredBookList().isEmpty());"},{"lineNumber":193,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":54,"-":140}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}."},{"lineNumber":20,"author":{"gitID":"-"},"content":" */"},{"lineNumber":21,"author":{"gitID":"-"},"content":"public class AddCommandIntegrationTest {"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_newBook_success() throws Exception {"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        Book validBook \u003d new BookBuilder().withTitle(\"Unique title that no book will have\").build();"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(model.getBookShelf(), new UserPrefs());"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel.addBook(validBook);"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandSuccess(prepareCommand(validBook, model), model,"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validBook), expectedModel);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_duplicateBook_throwsCommandException() {"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        Book bookInList \u003d model.getBookShelf().getBookList().get(0);"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        assertCommandFailure(prepareCommand(bookInList, model), model, AddCommand.MESSAGE_DUPLICATE_BOOK);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"     * Generates a new {@code AddCommand} which upon execution, adds {@code book} into the {@code model}."},{"lineNumber":49,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"    private AddCommand prepareCommand(Book book, Model model) {"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand command \u003d new AddCommand(book);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        return command;"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":16,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class ClearCommandTest {"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public void execute_emptyAddressBook_success() {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        Model model \u003d new ModelManager();"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        assertCommandSuccess(prepareCommand(model), model, ClearCommand.MESSAGE_SUCCESS, model);"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"        Model model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        assertCommandSuccess(prepareCommand(model), model, ClearCommand.MESSAGE_SUCCESS, model);"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"-"},"content":"     * Generates a new {@code ClearCommand} which upon execution, clears the contents in {@code model}."},{"lineNumber":30,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private ClearCommand prepareCommand(Model model) {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        ClearCommand command \u003d new ClearCommand();"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        return command;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.UndoRedoStackUtil.prepareStack;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstBook;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class UndoCommandTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private static final CommandHistory EMPTY_COMMAND_HISTORY \u003d new CommandHistory();"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final UndoRedoStack EMPTY_STACK \u003d new UndoRedoStack();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    private final Model model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    private final DeleteCommand deleteCommandOne \u003d new DeleteCommand(INDEX_FIRST_BOOK);"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    private final DeleteCommand deleteCommandTwo \u003d new DeleteCommand(INDEX_FIRST_BOOK);"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        deleteCommandOne.setData(model, EMPTY_COMMAND_HISTORY, EMPTY_STACK);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        deleteCommandTwo.setData(model, EMPTY_COMMAND_HISTORY, EMPTY_STACK);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public void execute() throws Exception {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        UndoRedoStack undoRedoStack \u003d prepareStack("},{"lineNumber":39,"author":{"gitID":"-"},"content":"                Arrays.asList(deleteCommandOne, deleteCommandTwo), Collections.emptyList());"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        undoCommand.setData(model, EMPTY_COMMAND_HISTORY, undoRedoStack);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        deleteCommandOne.execute();"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        deleteCommandTwo.execute();"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"        // multiple commands in undoStack"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        deleteFirstBook(expectedModel);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        // single command in undoStack"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        // no command in undoStack"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":9,"-":48}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitID":"-"},"content":" * Contains helper methods for testing commands."},{"lineNumber":25,"author":{"gitID":"-"},"content":" */"},{"lineNumber":26,"author":{"gitID":"-"},"content":"public class CommandTestUtil {"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_TITLE_ARTEMIS \u003d \"Artemis\";"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_TITLE_BABYLON \u003d \"Babylon\u0027s Ashes\";"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_AUTHOR_ARTEMIS \u003d \"Andy Weir\";"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_AUTHOR_BABYLON \u003d \"James S. A. Corey\";"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_CATEGORY_ARTEMIS \u003d \"Fiction\";"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_CATEGORY_BABYLON \u003d \"Fiction\";"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_DESCRIPTION_ARTEMIS \u003d \"This is Artemis.\";"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public static final String VALID_DESCRIPTION_BABYLON \u003d \"This is Babylon\u0027s Ashes.\";"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public static final String TITLE_DESC_ARTEMIS \u003d \" \" + PREFIX_TITLE + VALID_TITLE_ARTEMIS;"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public static final String TITLE_DESC_BABYLON \u003d \" \" + PREFIX_TITLE + VALID_TITLE_BABYLON;"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    public static final String AUTHOR_DESC_ARTEMIS \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_ARTEMIS;"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    public static final String AUTHOR_DESC_BABYLON \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_BABYLON;"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    public static final String CATEGORY_DESC_ARTEMIS \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_ARTEMIS;"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    public static final String CATEGORY_DESC_BABYLON \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_BABYLON;"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DESCRIPTION_DESC_ARTEMIS \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_ARTEMIS;"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DESCRIPTION_DESC_BABYLON \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BABYLON;"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e"},{"lineNumber":51,"author":{"gitID":"-"},"content":"     * - the result message matches {@code expectedMessage} \u003cbr\u003e"},{"lineNumber":52,"author":{"gitID":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"},{"lineNumber":55,"author":{"gitID":"-"},"content":"                                            Model expectedModel) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":57,"author":{"gitID":"-"},"content":"            CommandResult result \u003d command.execute();"},{"lineNumber":58,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, result.feedbackToUser);"},{"lineNumber":59,"author":{"gitID":"-"},"content":"            assertEquals(expectedModel, actualModel);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        } catch (CommandException ce) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e"},{"lineNumber":67,"author":{"gitID":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e"},{"lineNumber":68,"author":{"gitID":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"     * - the book shelf and the filtered book list in the {@code actualModel} remain unchanged"},{"lineNumber":70,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        // only do so by copying its components."},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf expectedBookShelf \u003d new BookShelf(actualModel.getBookShelf());"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBook\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredBookList());"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"            command.execute();"},{"lineNumber":79,"author":{"gitID":"-"},"content":"            fail(\"The expected CommandException was not thrown.\");"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        } catch (CommandException e) {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, e.getMessage());"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"            assertEquals(expectedBookShelf, actualModel.getBookShelf());"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"            assertEquals(expectedFilteredList, actualModel.getFilteredBookList());"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"     * Updates {@code model}\u0027s filtered list to show only the book at the given {@code targetIndex} in the"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"     * {@code model}\u0027s book shelf."},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"    public static void showBookAtIndex(Model model, Index targetIndex) {"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredBookList().size());"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"        Book book \u003d model.getFilteredBookList().get(targetIndex.getZeroBased());"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(thisBook -\u003e thisBook.equals(book));"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(1, model.getFilteredBookList().size());"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"     * Deletes the first book in {@code model}\u0027s filtered list from {@code model}\u0027s book shelf."},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"    public static void deleteFirstBook(Model model) {"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"        Book firstBook \u003d model.getFilteredBookList().get(0);"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"            model.deleteBook(firstBook);"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"        } catch (BookNotFoundException pnfe) {"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"            throw new AssertionError(\"Book in filtered list must exist in model.\", pnfe);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":113,"author":{"gitID":"-"},"content":"     * Returns an {@code UndoCommand} with the given {@code model} and {@code undoRedoStack} set."},{"lineNumber":114,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    public static UndoCommand prepareUndoCommand(Model model, UndoRedoStack undoRedoStack) {"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        undoCommand.setData(model, new CommandHistory(), undoRedoStack);"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        return undoCommand;"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":122,"author":{"gitID":"-"},"content":"     * Returns a {@code RedoCommand} with the given {@code model} and {@code undoRedoStack} set."},{"lineNumber":123,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":124,"author":{"gitID":"-"},"content":"    public static RedoCommand prepareRedoCommand(Model model, UndoRedoStack undoRedoStack) {"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        redoCommand.setData(model, new CommandHistory(), undoRedoStack);"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        return redoCommand;"},{"lineNumber":128,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":39,"takuyakanbr":16,"-":74}},{"path":"src/test/java/seedu/address/logic/parser/BookShelfParserTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ExitCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HelpCommand;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookUtil;"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"public class BookShelfParserTest {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    private final BookShelfParser parser \u003d new BookShelfParser();"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    public void parseCommand_add() throws Exception {"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        Book book \u003d new BookBuilder().build();"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(BookUtil.getAddCommand(book));"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(new AddCommand(book), command);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public void parseCommand_exit() throws Exception {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public void parseCommand_help() throws Exception {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    public void parseCommand_history() throws Exception {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD) instanceof HistoryCommand);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD + \" 3\") instanceof HistoryCommand);"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            parser.parseCommand(\"histories\");"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            fail(\"The expected ParseException was not thrown.\");"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        } catch (ParseException pe) {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"            assertEquals(MESSAGE_UNKNOWN_COMMAND, pe.getMessage());"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    public void parseCommand_redoCommandWord_returnsRedoCommand() throws Exception {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(\"redo 1\") instanceof RedoCommand);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    public void parseCommand_undoCommandWord_returnsUndoCommand() throws Exception {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertTrue(parser.parseCommand(\"undo 3\") instanceof UndoCommand);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() throws Exception {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        thrown.expect(ParseException.class);"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        thrown.expectMessage(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        parser.parseCommand(\"\");"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() throws Exception {"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        thrown.expect(ParseException.class);"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        thrown.expectMessage(MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":85,"author":{"gitID":"-"},"content":"        parser.parseCommand(\"unknownCommand\");"},{"lineNumber":86,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":9,"-":78}},{"path":"src/test/java/seedu/address/logic/commands/UndoableCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstBook;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class UndoableCommandTest {"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    private final Model model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private final DummyCommand dummyCommand \u003d new DummyCommand(model);"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public void executeUndo() throws Exception {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        dummyCommand.execute();"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        deleteFirstBook(expectedModel);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        // undo() should cause the model\u0027s filtered list to show all books"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        dummyCommand.undo();"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        expectedModel \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public void redo() {"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        // redo() should cause the model\u0027s filtered list to show all books"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        dummyCommand.redo();"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        deleteFirstBook(expectedModel);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        assertEquals(expectedModel, model);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * Deletes the first person in the model\u0027s filtered list."},{"lineNumber":51,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    class DummyCommand extends UndoableCommand {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        DummyCommand(Model model) {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            this.model \u003d model;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"            Book bookToDelete \u003d model.getFilteredBookList().get(0);"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            try {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"                model.deleteBook(bookToDelete);"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"            } catch (BookNotFoundException pnfe) {"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"                fail(\"Impossible: bookToDelete was retrieved from model.\");"},{"lineNumber":64,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":65,"author":{"gitID":"-"},"content":"            return new CommandResult(\"\");"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":19,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookBuilder;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"public class AddCommandTest {"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    public void constructor_nullBook_throwsNullPointerException() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        new AddCommand(null);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_bookAcceptedByModel_addSuccessful() throws Exception {"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        ModelStubAcceptingBookAdded modelStub \u003d new ModelStubAcceptingBookAdded();"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        Book validBook \u003d new BookBuilder().build();"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        CommandResult commandResult \u003d getAddCommandForBook(validBook, modelStub).execute();"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validBook), commandResult.feedbackToUser);"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        assertEquals(Arrays.asList(validBook), modelStub.booksAdded);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"    public void execute_duplicateBook_throwsCommandException() throws Exception {"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        ModelStub modelStub \u003d new ModelStubThrowingDuplicateBookException();"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        Book validBook \u003d new BookBuilder().build();"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"        thrown.expect(CommandException.class);"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"        thrown.expectMessage(AddCommand.MESSAGE_DUPLICATE_BOOK);"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        getAddCommandForBook(validBook, modelStub).execute();"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        Book one \u003d new BookBuilder().withTitle(\"One\").build();"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"        Book two \u003d new BookBuilder().withTitle(\"Two\").build();"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addOneCommand \u003d new AddCommand(one);"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addTwoCommand \u003d new AddCommand(two);"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(addOneCommand.equals(addOneCommand));"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand addOneCommandCopy \u003d new AddCommand(one);"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(addOneCommand.equals(addOneCommandCopy));"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(addOneCommand.equals(1));"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(addOneCommand.equals(null));"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"        // different book -\u003e returns false"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(addOneCommand.equals(addTwoCommand));"},{"lineNumber":84,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"-"},"content":""},{"lineNumber":86,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"     * Generates a new AddCommand with the details of the given book."},{"lineNumber":88,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"    private AddCommand getAddCommandForBook(Book book, Model model) {"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        AddCommand command \u003d new AddCommand(book);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        return command;"},{"lineNumber":93,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitID":"-"},"content":""},{"lineNumber":95,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitID":"-"},"content":"     * A default model stub that have all of the methods failing."},{"lineNumber":97,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    private class ModelStub implements Model {"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        public void resetData(ReadOnlyBookShelf newData) {"},{"lineNumber":101,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":103,"author":{"gitID":"-"},"content":""},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        @Override"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"        public ReadOnlyBookShelf getBookShelf() {"},{"lineNumber":106,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":107,"author":{"gitID":"-"},"content":"            return null;"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        public void deleteBook(Book target) throws BookNotFoundException {"},{"lineNumber":112,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"        public void addBook(Book book) throws DuplicateBookException {"},{"lineNumber":117,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"        public void updateBook(Book target, Book editedBook) throws BookNotFoundException, DuplicateBookException {"},{"lineNumber":122,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":123,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"        public ObservableList\u003cBook\u003e getFilteredBookList() {"},{"lineNumber":127,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":128,"author":{"gitID":"-"},"content":"            return null;"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":132,"author":{"gitID":"takuyakanbr"},"content":"        public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {"},{"lineNumber":133,"author":{"gitID":"-"},"content":"            fail(\"This method should not be called.\");"},{"lineNumber":134,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":135,"author":{"gitID":"-"},"content":""},{"lineNumber":136,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":137,"author":{"gitID":"-"},"content":""},{"lineNumber":138,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":139,"author":{"gitID":"qiu-siqi"},"content":"     * A Model stub that always throw a DuplicateBookException when trying to add a book."},{"lineNumber":140,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":141,"author":{"gitID":"qiu-siqi"},"content":"    private class ModelStubThrowingDuplicateBookException extends ModelStub {"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":143,"author":{"gitID":"takuyakanbr"},"content":"        public void addBook(Book book) throws DuplicateBookException {"},{"lineNumber":144,"author":{"gitID":"qiu-siqi"},"content":"            throw new DuplicateBookException();"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":146,"author":{"gitID":"-"},"content":""},{"lineNumber":147,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":148,"author":{"gitID":"takuyakanbr"},"content":"        public ReadOnlyBookShelf getBookShelf() {"},{"lineNumber":149,"author":{"gitID":"qiu-siqi"},"content":"            return new BookShelf();"},{"lineNumber":150,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":151,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitID":"-"},"content":""},{"lineNumber":153,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":154,"author":{"gitID":"qiu-siqi"},"content":"     * A Model stub that always accept the book being added."},{"lineNumber":155,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":156,"author":{"gitID":"qiu-siqi"},"content":"    private class ModelStubAcceptingBookAdded extends ModelStub {"},{"lineNumber":157,"author":{"gitID":"qiu-siqi"},"content":"        final ArrayList\u003cBook\u003e booksAdded \u003d new ArrayList\u003c\u003e();"},{"lineNumber":158,"author":{"gitID":"-"},"content":""},{"lineNumber":159,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":160,"author":{"gitID":"takuyakanbr"},"content":"        public void addBook(Book book) throws DuplicateBookException {"},{"lineNumber":161,"author":{"gitID":"qiu-siqi"},"content":"            requireNonNull(book);"},{"lineNumber":162,"author":{"gitID":"qiu-siqi"},"content":"            booksAdded.add(book);"},{"lineNumber":163,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":164,"author":{"gitID":"-"},"content":""},{"lineNumber":165,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":166,"author":{"gitID":"takuyakanbr"},"content":"        public ReadOnlyBookShelf getBookShelf() {"},{"lineNumber":167,"author":{"gitID":"qiu-siqi"},"content":"            return new BookShelf();"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitID":"-"},"content":""},{"lineNumber":171,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":38,"takuyakanbr":16,"-":117}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.logic.UndoRedoStackUtil.prepareStack;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deleteFirstBook;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"public class RedoCommandTest {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final CommandHistory EMPTY_COMMAND_HISTORY \u003d new CommandHistory();"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final UndoRedoStack EMPTY_STACK \u003d new UndoRedoStack();"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    private final Model model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    private final DeleteCommand deleteCommandOne \u003d new DeleteCommand(INDEX_FIRST_BOOK);"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    private final DeleteCommand deleteCommandTwo \u003d new DeleteCommand(INDEX_SECOND_BOOK);"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void setUp() throws Exception {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        deleteCommandOne.setData(model, EMPTY_COMMAND_HISTORY, EMPTY_STACK);"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        deleteCommandTwo.setData(model, EMPTY_COMMAND_HISTORY, EMPTY_STACK);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        deleteCommandOne.preprocessUndoableCommand();"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        deleteCommandTwo.preprocessUndoableCommand();"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public void execute() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        UndoRedoStack undoRedoStack \u003d prepareStack("},{"lineNumber":42,"author":{"gitID":"-"},"content":"                Collections.emptyList(), Arrays.asList(deleteCommandTwo, deleteCommandOne));"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        redoCommand.setData(model, EMPTY_COMMAND_HISTORY, undoRedoStack);"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        // multiple commands in redoStack"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        deleteFirstBook(expectedModel);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        // single command in redoStack"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        deleteFirstBook(expectedModel);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"        // no command in redoStack"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":10,"-":48}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class JsonUserPrefsStorageTest {"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"./src/test/data/JsonUserPrefsStorageTest/\");"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() throws DataConversionException {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        readUserPrefs(null);"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        String prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() throws DataConversionException {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        readUserPrefs(\"NotJsonFormatUserPrefs.json\");"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        /* IMPORTANT: Any code below an exception-throwing line (like the one above) will be ignored."},{"lineNumber":51,"author":{"gitID":"-"},"content":"         * That means you should not have more than one exception test in one method"},{"lineNumber":52,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    private String addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null"},{"lineNumber":57,"author":{"gitID":"-"},"content":"                ? TEST_DATA_FOLDER + userPrefsFileInTestDataFolder"},{"lineNumber":58,"author":{"gitID":"-"},"content":"                : null;"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"-"},"content":""},{"lineNumber":61,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        assertEquals(expected, actual);"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        assertEquals(new UserPrefs(), actual);"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();"},{"lineNumber":78,"author":{"gitID":"-"},"content":""},{"lineNumber":79,"author":{"gitID":"-"},"content":"        assertEquals(expected, actual);"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":""},{"lineNumber":82,"author":{"gitID":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {"},{"lineNumber":83,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        userPrefs.setGuiSettings(1000, 500, 300, 100);"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        userPrefs.setBookShelfFilePath(\"bookshelf.xml\");"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"        userPrefs.setBookShelfName(\"TypicalBookShelfName\");"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        return userPrefs;"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        saveUserPrefs(null, \"SomeFile.json\");"},{"lineNumber":94,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"-"},"content":""},{"lineNumber":96,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":99,"author":{"gitID":"-"},"content":"        saveUserPrefs(new UserPrefs(), null);"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath."},{"lineNumber":104,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":107,"author":{"gitID":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))"},{"lineNumber":108,"author":{"gitID":"-"},"content":"                    .saveUserPrefs(userPrefs);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":110,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":112,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"        UserPrefs original \u003d new UserPrefs();"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        original.setGuiSettings(1200, 200, 0, 2);"},{"lineNumber":119,"author":{"gitID":"-"},"content":""},{"lineNumber":120,"author":{"gitID":"-"},"content":"        String pefsFilePath \u003d testFolder.getRoot() + File.separator + \"TempPrefs.json\";"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"        //Try writing when the file doesn\u0027t exist"},{"lineNumber":124,"author":{"gitID":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        assertEquals(original, readBack);"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        //Try saving when the file exists"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        original.setGuiSettings(5, 5, 5, 5);"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);"},{"lineNumber":131,"author":{"gitID":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        assertEquals(original, readBack);"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":133}},{"path":"src/test/java/seedu/address/logic/commands/SelectCommandTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import static org.junit.Assert.fail;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showBookAtIndex;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_BOOK;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_BOOK;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_BOOK;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":29,"author":{"gitID":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code SelectCommand}."},{"lineNumber":30,"author":{"gitID":"-"},"content":" */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"public class SelectCommandTest {"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private Model model;"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        model \u003d new ModelManager(getTypicalBookShelf(), new UserPrefs());"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        Index lastBookIndex \u003d Index.fromOneBased(model.getFilteredBookList().size());"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(INDEX_FIRST_BOOK);"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(INDEX_THIRD_BOOK);"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(lastBookIndex);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundsIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);"},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionFailure(outOfBoundsIndex, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    public void execute_validIndexFilteredList_success() {"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionSuccess(INDEX_FIRST_BOOK);"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void execute_invalidIndexFilteredList_failure() {"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        Index outOfBoundsIndex \u003d INDEX_SECOND_BOOK;"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        // ensures that outOfBoundIndex is still in bounds of book shelf list"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(outOfBoundsIndex.getZeroBased() \u003c model.getBookShelf().getBookList().size());"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        assertExecutionFailure(outOfBoundsIndex, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":74,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"-"},"content":""},{"lineNumber":76,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"        SelectCommand selectFirstCommand \u003d new SelectCommand(INDEX_FIRST_BOOK);"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        SelectCommand selectSecondCommand \u003d new SelectCommand(INDEX_SECOND_BOOK);"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommand));"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        SelectCommand selectFirstCommandCopy \u003d new SelectCommand(INDEX_FIRST_BOOK);"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommandCopy));"},{"lineNumber":87,"author":{"gitID":"-"},"content":""},{"lineNumber":88,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":89,"author":{"gitID":"-"},"content":"        assertFalse(selectFirstCommand.equals(1));"},{"lineNumber":90,"author":{"gitID":"-"},"content":""},{"lineNumber":91,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        assertFalse(selectFirstCommand.equals(null));"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"        // different book -\u003e returns false"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        assertFalse(selectFirstCommand.equals(selectSecondCommand));"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"-"},"content":""},{"lineNumber":98,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":99,"author":{"gitID":"-"},"content":"     * Executes a {@code SelectCommand} with the given {@code index}, and checks that {@code JumpToListRequestEvent}"},{"lineNumber":100,"author":{"gitID":"-"},"content":"     * is raised with the correct index."},{"lineNumber":101,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":102,"author":{"gitID":"-"},"content":"    private void assertExecutionSuccess(Index index) {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        SelectCommand selectCommand \u003d prepareCommand(index);"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":106,"author":{"gitID":"-"},"content":"            CommandResult commandResult \u003d selectCommand.execute();"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"            assertEquals(String.format(SelectCommand.MESSAGE_SELECT_BOOK_SUCCESS, index.getOneBased()),"},{"lineNumber":108,"author":{"gitID":"-"},"content":"                    commandResult.feedbackToUser);"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        } catch (CommandException ce) {"},{"lineNumber":110,"author":{"gitID":"-"},"content":"            throw new IllegalArgumentException(\"Execution of command should not fail.\", ce);"},{"lineNumber":111,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":112,"author":{"gitID":"-"},"content":""},{"lineNumber":113,"author":{"gitID":"-"},"content":"        JumpToListRequestEvent lastEvent \u003d (JumpToListRequestEvent) eventsCollectorRule.eventsCollector.getMostRecent();"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        assertEquals(index, Index.fromZeroBased(lastEvent.targetIndex));"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * Executes a {@code SelectCommand} with the given {@code index}, and checks that a {@code CommandException}"},{"lineNumber":119,"author":{"gitID":"-"},"content":"     * is thrown with the {@code expectedMessage}."},{"lineNumber":120,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":121,"author":{"gitID":"-"},"content":"    private void assertExecutionFailure(Index index, String expectedMessage) {"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        SelectCommand selectCommand \u003d prepareCommand(index);"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":125,"author":{"gitID":"-"},"content":"            selectCommand.execute();"},{"lineNumber":126,"author":{"gitID":"-"},"content":"            fail(\"The expected CommandException was not thrown.\");"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        } catch (CommandException ce) {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"            assertEquals(expectedMessage, ce.getMessage());"},{"lineNumber":129,"author":{"gitID":"-"},"content":"            assertTrue(eventsCollectorRule.eventsCollector.isEmpty());"},{"lineNumber":130,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitID":"-"},"content":""},{"lineNumber":133,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":134,"author":{"gitID":"-"},"content":"     * Returns a {@code SelectCommand} with parameters {@code index}."},{"lineNumber":135,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":136,"author":{"gitID":"-"},"content":"    private SelectCommand prepareCommand(Index index) {"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(index);"},{"lineNumber":138,"author":{"gitID":"-"},"content":"        selectCommand.setData(model, new CommandHistory(), new UndoRedoStack());"},{"lineNumber":139,"author":{"gitID":"-"},"content":"        return selectCommand;"},{"lineNumber":140,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":24,"-":117}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static junit.framework.TestCase.assertNotNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Before;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.ui.testutil.EventsCollectorRule;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"public class StorageManagerTest {"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public final EventsCollectorRule eventsCollectorRule \u003d new EventsCollectorRule();"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private StorageManager storageManager;"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @Before"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public void setUp() {"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        XmlBookShelfStorage bookShelfStorage \u003d new XmlBookShelfStorage(getTempFilePath(\"biblio\"));"},{"lineNumber":34,"author":{"gitID":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        storageManager \u003d new StorageManager(bookShelfStorage, userPrefsStorage);"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private String getTempFilePath(String fileName) {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        return testFolder.getRoot().getPath() + fileName;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public void prefsReadSave() throws Exception {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":46,"author":{"gitID":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the"},{"lineNumber":47,"author":{"gitID":"-"},"content":"         * {@link JsonUserPrefsStorage} class."},{"lineNumber":48,"author":{"gitID":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class."},{"lineNumber":49,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        UserPrefs original \u003d new UserPrefs();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        original.setGuiSettings(300, 600, 4, 6);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        storageManager.saveUserPrefs(original);"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        assertEquals(original, retrieved);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    public void bookShelfReadSave() throws Exception {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":60,"author":{"gitID":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"         * {@link XmlBookShelfStorage} class."},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link XmlBookShelfStorageTest} class."},{"lineNumber":63,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf original \u003d getTypicalBookShelf();"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        storageManager.saveBookShelf(original);"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf retrieved \u003d storageManager.readBookShelf().get();"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(retrieved));"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    public void getBookShelfFilePath() {"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        assertNotNull(storageManager.getBookShelfFilePath());"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    public void handleBookShelfChangedEvent_exceptionThrown_eventRaised() {"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        // Create a StorageManager while injecting a stub that  throws an exception when the save method is called"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        Storage storage \u003d new StorageManager(new XmlBookShelfStorageExceptionThrowingStub(\"dummy\"),"},{"lineNumber":79,"author":{"gitID":"-"},"content":"                                             new JsonUserPrefsStorage(\"dummy\"));"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        storage.handleBookShelfChangedEvent(new BookShelfChangedEvent(new BookShelf()));"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        assertTrue(eventsCollectorRule.eventsCollector.getMostRecent() instanceof DataSavingExceptionEvent);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"-"},"content":""},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * A Stub class to throw an exception when the save method is called"},{"lineNumber":87,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    class XmlBookShelfStorageExceptionThrowingStub extends XmlBookShelfStorage {"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        public XmlBookShelfStorageExceptionThrowingStub(String filePath) {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"            super(filePath);"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitID":"-"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"        @Override"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        public void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) throws IOException {"},{"lineNumber":96,"author":{"gitID":"-"},"content":"            throw new IOException(\"dummy exception\");"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":21,"-":79}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.testutil.TypicalBooks.BABYLON_ASHES;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.testutil.BookShelfBuilder;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"public class ModelManagerTest {"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    public void getFilteredBookList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        ModelManager modelManager \u003d new ModelManager();"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        modelManager.getFilteredBookList().remove(0);"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public void equals() {"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf bookShelf \u003d new BookShelfBuilder().withBook(ARTEMIS).withBook(BABYLON_ASHES).build();"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"        BookShelf differentBookShelf \u003d new BookShelf();"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"        // same values -\u003e returns true"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        ModelManager modelManager \u003d new ModelManager(bookShelf, userPrefs);"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(bookShelf, userPrefs);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        // same object -\u003e returns true"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        assertTrue(modelManager.equals(modelManager));"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        // null -\u003e returns false"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(modelManager \u003d\u003d null);"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"        // different types -\u003e returns false"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        assertFalse(modelManager.equals(5));"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        // different bookShelf -\u003e returns false"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentBookShelf, userPrefs)));"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"        // resets modelManager to initial state for upcoming tests"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        modelManager.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"        // different userPrefs -\u003e returns true"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        differentUserPrefs.setBookShelfName(\"differentName\");"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"        assertTrue(modelManager.equals(new ModelManager(bookShelf, differentUserPrefs)));"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":16,"-":41}},{"path":"src/test/java/seedu/address/storage/XmlAdaptedBookTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.storage.XmlAdaptedBook.MISSING_FIELD_MESSAGE_FORMAT;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"public class XmlAdaptedBookTest {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_TITLE \u003d ARTEMIS.getTitle().toString();"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private static final String VALID_DESCRIPTION \u003d ARTEMIS.getDescription().toString();"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    private static final List\u003cXmlAdaptedAuthor\u003e VALID_AUTHORS \u003d ARTEMIS.getAuthors().stream()"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            .map(XmlAdaptedAuthor::new).collect(Collectors.toList());"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private static final List\u003cXmlAdaptedCategory\u003e VALID_CATEGORIES \u003d ARTEMIS.getCategories().stream()"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"            .map(XmlAdaptedCategory::new).collect(Collectors.toList());"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_validBookDetails_returnsBook() throws Exception {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(ARTEMIS);"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(ARTEMIS, book.toModelType());"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(null, VALID_DESCRIPTION, VALID_AUTHORS, VALID_CATEGORIES);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook book \u003d new XmlAdaptedBook(VALID_TITLE, null, VALID_AUTHORS, VALID_CATEGORIES);"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, book::toModelType);"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":37,"-":9}},{"path":"src/test/java/seedu/address/model/book/AuthorTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class AuthorTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Author(null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Author(\"Author 1\").hashCode(), new Author(\"Author 1\").hashCode());"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Author(\"Author x\").hashCode(), new Author(\"Author x\").hashCode());"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":7}},{"path":"src/test/java/seedu/address/storage/XmlSerializableBookShelfTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.XmlUtil;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"public class XmlSerializableBookShelfTest {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"src/test/data/XmlSerializableBookShelfTest/\");"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private static final File TYPICAL_BOOKS_FILE \u003d new File(TEST_DATA_FOLDER + \"typicalBooksBookShelf.xml\");"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    private static final File INVALID_BOOK_FILE \u003d new File(TEST_DATA_FOLDER + \"invalidBookBookShelf.xml\");"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_typicalBooksFile_success() throws Exception {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf dataFromFile \u003d XmlUtil.getDataFromFile(TYPICAL_BOOKS_FILE,"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"                XmlSerializableBookShelf.class);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf addressBookFromFile \u003d dataFromFile.toModelType();"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf typicalBookShelf \u003d TypicalBooks.getTypicalBookShelf();"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(addressBookFromFile, typicalBookShelf);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public void toModelType_invalidBookFile_throwsIllegalValueException() throws Exception {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf dataFromFile \u003d XmlUtil.getDataFromFile(INVALID_BOOK_FILE,"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"                XmlSerializableBookShelf.class);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        thrown.expect(IllegalValueException.class);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        dataFromFile.toModelType();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":21,"-":22}},{"path":"src/test/java/seedu/address/model/book/BookTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class BookTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(null, null, null, null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(null, new Title(\"\"),"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"                Collections.emptySet(), new Description(\"\")));"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(Collections.emptySet(), null,"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"                Collections.emptySet(), new Description(\"\")));"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(Collections.emptySet(), new Title(\"\"),"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"                null, new Description(\"\")));"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Book(Collections.emptySet(), new Title(\"\"),"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"                Collections.emptySet(), null));"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":16,"-":8}},{"path":"src/test/java/seedu/address/model/book/DescriptionTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class DescriptionTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Description(null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Description(\"Desc 1\").hashCode(), new Description(\"Desc 1\").hashCode());"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Description(\"Desc x\").hashCode(), new Description(\"Desc x\").hashCode());"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":7}},{"path":"src/test/java/seedu/address/model/book/CategoryTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class CategoryTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Category(null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Category(\"Category 1\").hashCode(), new Category(\"Category 1\").hashCode());"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Category(\"Category x\").hashCode(), new Category(\"Category x\").hashCode());"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":7}},{"path":"src/test/java/seedu/address/model/book/TitleTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.testutil.Assert;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class TitleTest {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Title(null));"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Title(\"Title 1\").hashCode(), new Title(\"Title 1\").hashCode());"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(new Title(\"Title x\").hashCode(), new Title(\"Title x\").hashCode());"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":7}},{"path":"src/test/java/seedu/address/model/book/UniqueBookListTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.testutil.TypicalBooks;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"public class UniqueBookListTest {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_validTargetAndReplacement_success() throws Exception {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(TypicalBooks.ARTEMIS, TypicalBooks.BABYLON_ASHES);"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(false, uniqueBookList.contains(TypicalBooks.ARTEMIS));"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueBookList.contains(TypicalBooks.BABYLON_ASHES));"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_nonMatchingTarget_throwsBookNotFoundException() throws Exception {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(TypicalBooks.BABYLON_ASHES, TypicalBooks.WAKING_GODS);"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_nullTarget_throwsBookNotFoundException() throws Exception {"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(null, TypicalBooks.WAKING_GODS);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_nullReplacement_throwsNullPointerException() throws Exception {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(TypicalBooks.ARTEMIS, null);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook_duplicateReplacement_throwsDuplicateBookException() throws Exception {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(DuplicateBookException.class);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.setBook(TypicalBooks.BABYLON_ASHES, TypicalBooks.ARTEMIS);"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    public void remove_validBook_success() throws Exception {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.remove(TypicalBooks.ARTEMIS);"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(0, uniqueBookList.toSet().size());"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    public void remove_nonMatchingBook_throwsBookNotFoundException() throws Exception {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.remove(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.asObservableList().remove(0);"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    public void equals_sameContent_returnsTrue() throws Exception {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList \u003d new UniqueBookList();"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.ARTEMIS);"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList.add(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        UniqueBookList uniqueBookList2 \u003d new UniqueBookList();"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList2.add(TypicalBooks.ARTEMIS);"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        uniqueBookList2.add(TypicalBooks.BABYLON_ASHES);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueBookList.equals(uniqueBookList2));"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":84,"-":9}},{"path":"src/test/java/seedu/address/model/UniqueListTest.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.exceptions.DuplicateDataException;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"public class UniqueListTest {"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public void add_validItem_success() throws Exception {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 2\"));"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 3\"));"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(3, uniqueList.toSet().size());"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    public void add_duplicateItem_throwsDuplicateDataException() throws Exception {"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 2\"));"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(DuplicateDataException.class);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public void add_null_throwsNullPointerException() throws Exception {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(null);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public void toSet_modifyList_doesNotMutateList() throws Exception {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        Set\u003cCategory\u003e set \u003d uniqueList.toSet();"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        set.add(new Category(\"Cat 2\"));"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(1, uniqueList.toSet().size());"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        set.remove(new Category(\"Cat 1\"));"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(1, uniqueList.toSet().size());"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    public void setItems_modifyList_success() throws Exception {"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e replacement \u003d new UniqueList\u003c\u003e();"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        replacement.add(new Category(\"Cat 2\"));"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        replacement.add(new Category(\"Cat 3\"));"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.setItems(replacement.toSet());"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(2, uniqueList.toSet().size());"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueList.contains(new Category(\"Cat 2\")));"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(false, uniqueList.contains(new Category(\"Cat 1\")));"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    public void setItems_null_throwsNullPointerException() {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.setItems(null);"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    public void mergeFrom_modifyList_success() throws Exception {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e toMerge \u003d new UniqueList\u003c\u003e();"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        toMerge.add(new Category(\"Cat 2\"));"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        toMerge.add(new Category(\"Cat 3\"));"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.mergeFrom(toMerge);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(3, uniqueList.toSet().size());"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueList.contains(new Category(\"Cat 2\")));"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueList.contains(new Category(\"Cat 1\")));"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    public void mergeFrom_null_throwsNullPointerException() {"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.mergeFrom(null);"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":94,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":95,"author":{"gitID":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.asObservableList().remove(0);"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"    public void equals_sameContent_returnsTrue() throws Exception {"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList2 \u003d new UniqueList\u003c\u003e();"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList2.add(new Category(\"Cat 1\"));"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, uniqueList.equals(uniqueList2));"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"    public void hashCode_sameContent_returnsSameValue() throws Exception {"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList \u003d new UniqueList\u003c\u003e();"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList.add(new Category(\"Cat 1\"));"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"        UniqueList\u003cCategory\u003e uniqueList2 \u003d new UniqueList\u003c\u003e();"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        uniqueList2.add(new Category(\"Cat 1\"));"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(uniqueList.hashCode(), uniqueList2.hashCode());"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":110,"-":9}},{"path":"src/test/java/seedu/address/testutil/BookUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"qiu-siqi"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":" * A utility class for Book."},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"public class BookUtil {"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"     * Returns an add command string for adding the {@code book}."},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"    public static String getAddCommand(Book book) {"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getBookDetails(book);"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the part of command string for the given {@code book}\u0027s details."},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    public static String getBookDetails(Book book) {"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        sb.append(PREFIX_TITLE + book.getTitle().title + \" \");"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"        book.getAuthors().stream().forEach("},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"            s -\u003e sb.append(PREFIX_AUTHOR + s.fullName + \" \")"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        );"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        book.getCategories().stream().forEach("},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"            s -\u003e sb.append(PREFIX_CATEGORY + s.category + \" \")"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        );"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        sb.append(PREFIX_DESCRIPTION + book.getDescription().description + \" \");"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        return sb.toString();"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":36,"-":2}},{"path":"src/test/java/seedu/address/storage/XmlBookShelfStorageTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.BABYLON_ASHES;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import org.junit.rules.TemporaryFolder;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"public class XmlBookShelfStorageTest {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"./src/test/data/XmlBookShelfStorageTest/\");"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public void readBookShelf_nullFilePath_throwsNullPointerException() throws Exception {"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        readBookShelf(null);"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    private java.util.Optional\u003cReadOnlyBookShelf\u003e readBookShelf(String filePath) throws Exception {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        return new XmlBookShelfStorage(filePath).readBookShelf(addToTestDataPathIfNotNull(filePath));"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private String addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null"},{"lineNumber":42,"author":{"gitID":"-"},"content":"                ? TEST_DATA_FOLDER + prefsFileInTestDataFolder"},{"lineNumber":43,"author":{"gitID":"-"},"content":"                : null;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        assertFalse(readBookShelf(\"NonExistentFile.xml\").isPresent());"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    public void read_notXmlFormat_exceptionThrown() throws Exception {"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        readBookShelf(\"NotXmlFormatBookShelf.xml\");"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        /* IMPORTANT: Any code below an exception-throwing line (like the one above) will be ignored."},{"lineNumber":58,"author":{"gitID":"-"},"content":"         * That means you should not have more than one exception test in one method"},{"lineNumber":59,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    public void readBookShelf_invalidBookBookShelf_throwDataConversionException() throws Exception {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        readBookShelf(\"invalidBookBookShelf.xml\");"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"    public void readBookShelf_invalidAndValidBookBookShelf_throwDataConversionException() throws Exception {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        thrown.expect(DataConversionException.class);"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        readBookShelf(\"invalidAndValidBookBookShelf.xml\");"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    public void readAndSaveBookShelf_allInOrder_success() throws Exception {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        String filePath \u003d testFolder.getRoot().getPath() + \"TempBookShelf.xml\";"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf original \u003d getTypicalBookShelf();"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        XmlBookShelfStorage xmlBookShelfStorage \u003d new XmlBookShelfStorage(filePath);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        //Save in new file and read back"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        xmlBookShelfStorage.saveBookShelf(original, filePath);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf readBack \u003d xmlBookShelfStorage.readBookShelf(filePath).get();"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(readBack));"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"        //Modify data, overwrite exiting file, and read back"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        original.removeBook(ARTEMIS);"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        original.addBook(ARTEMIS);"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        original.removeBook(BABYLON_ASHES);"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        xmlBookShelfStorage.saveBookShelf(original, filePath);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        readBack \u003d xmlBookShelfStorage.readBookShelf(filePath).get();"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(readBack));"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"        //Save and read without specifying file path"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        original.addBook(BABYLON_ASHES);"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        xmlBookShelfStorage.saveBookShelf(original); //file path not specified"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        readBack \u003d xmlBookShelfStorage.readBookShelf().get(); //file path not specified"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(original, new BookShelf(readBack));"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf_nullBookShelf_throwsNullPointerException() {"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        saveBookShelf(null, \"SomeFile.xml\");"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"     * Saves {@code bookShelf} at the specified {@code filePath}."},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"    private void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) {"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"            new XmlBookShelfStorage(filePath).saveBookShelf(bookShelf, addToTestDataPathIfNotNull(filePath));"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":114,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);"},{"lineNumber":115,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":116,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"-"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf_nullFilePath_throwsNullPointerException() throws IOException {"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"        saveBookShelf(new BookShelf(), null);"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":70,"-":55}},{"path":"src/test/java/seedu/address/testutil/BookShelfBuilder.java","lines":[{"lineNumber":1,"author":{"gitID":"qiu-siqi"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" * A utility class to help with building BookShelf objects."},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":" * Example usage: \u003cbr\u003e"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":" *     {@code BookShelf bs \u003d new BookShelfBuilder().withBook(new Book(...)).build();}"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"public class BookShelfBuilder {"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    private BookShelf bookShelf;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelfBuilder() {"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"        bookShelf \u003d new BookShelf();"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelfBuilder(BookShelf bookShelf) {"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"        this.bookShelf \u003d bookShelf;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"     * Adds a new {@code Book} to the {@code BookShelf} that we are building."},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelfBuilder withBook(Book book) {"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        try {"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"            bookShelf.addBook(book);"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        } catch (DuplicateBookException dpe) {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"            throw new IllegalArgumentException(\"book is expected to be unique.\");"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        return this;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    public BookShelf build() {"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        return bookShelf;"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":34,"takuyakanbr":5}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests."},{"lineNumber":7,"author":{"gitID":"-"},"content":" */"},{"lineNumber":8,"author":{"gitID":"-"},"content":"public class TypicalIndexes {"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"    public static final Index INDEX_FIRST_BOOK \u003d Index.fromOneBased(1);"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"    public static final Index INDEX_SECOND_BOOK \u003d Index.fromOneBased(2);"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public static final Index INDEX_THIRD_BOOK \u003d Index.fromOneBased(3);"},{"lineNumber":12,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * A utility class for test cases."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class TestUtil {"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    private static final String SANDBOX_FOLDER \u003d FileUtil.getPath(\"./src/test/data/sandbox/\");"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting string."},{"lineNumber":23,"author":{"gitID":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    public static String getFilePathInSandboxFolder(String fileName) {"},{"lineNumber":26,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"            FileUtil.createDirs(new File(SANDBOX_FOLDER));"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return SANDBOX_FOLDER + fileName;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the middle index of the book in the {@code model}\u0027s book list."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public static Index getMidIndex(Model model) {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        return Index.fromOneBased(model.getBookShelf().getBookList().size() / 2);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the last index of the book in the {@code model}\u0027s book list."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public static Index getLastIndex(Model model) {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        return Index.fromOneBased(model.getBookShelf().getBookList().size());"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the book in the {@code model}\u0027s book list at {@code index}."},{"lineNumber":50,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    public static Book getBook(Model model, Index index) {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        return model.getBookShelf().getBookList().get(index.getZeroBased());"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":8,"-":46}},{"path":"src/test/java/seedu/address/testutil/BookBuilder.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.util.BookDataUtil;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":" * A utility class to help with building Book objects."},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"public class BookBuilder {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DEFAULT_AUTHOR \u003d \"Andy Weir\";"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DEFAULT_TITLE \u003d \"Artemis\";"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DEFAULT_CATEGORY \u003d \"Science Fiction\";"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"This is a description for Artemis.\";"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private Set\u003cAuthor\u003e authors;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private Title title;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    private Set\u003cCategory\u003e categories;"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private Description description;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder() {"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        authors \u003d Collections.singleton(new Author(DEFAULT_AUTHOR));"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        title \u003d new Title(DEFAULT_TITLE);"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        categories \u003d Collections.singleton(new Category(DEFAULT_CATEGORY));"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     * Initializes the BookBuilder with the data of {@code bookToCopy}."},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder(Book bookToCopy) {"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        authors \u003d new HashSet\u003c\u003e(bookToCopy.getAuthors());"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        title \u003d bookToCopy.getTitle();"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        categories \u003d new HashSet\u003c\u003e(bookToCopy.getCategories());"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        description \u003d bookToCopy.getDescription();"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"     * Parses the {@code authors} into a {@code Set\u003cAuthor\u003e} and set it to the {@code Book} that we are building."},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder withAuthors(String... authors) {"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        this.authors \u003d BookDataUtil.getAuthorSet(authors);"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"     * Sets the {@code Title} of the {@code Book} that we are building."},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder withTitle(String title) {"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d new Title(title);"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"     * Parses the {@code categories} into a {@code Set\u003cCategory\u003e} and set it to the {@code Book} that we are building."},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder withCategories(String... categories) {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        this.categories \u003d BookDataUtil.getCategorySet(categories);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"     * Sets the {@code Description} of the {@code Book} that we are building."},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    public BookBuilder withDescription(String description) {"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d new Description(description);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        return this;"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"    public Book build() {"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        return new Book(authors, title, categories, description);"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":80,"-":2}},{"path":"src/test/java/guitests/guihandles/MainWindowHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"-"},"content":" * Provides a handle for {@code MainWindow}."},{"lineNumber":7,"author":{"gitID":"-"},"content":" */"},{"lineNumber":8,"author":{"gitID":"-"},"content":"public class MainWindowHandle extends StageHandle {"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"    private final BookListPanelHandle bookListPanel;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"    private final ResultDisplayHandle resultDisplay;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"    private final CommandBoxHandle commandBox;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    private final StatusBarFooterHandle statusBarFooter;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    private final MainMenuHandle mainMenu;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private final BrowserPanelHandle browserPanel;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public MainWindowHandle(Stage stage) {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        super(stage);"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"        bookListPanel \u003d new BookListPanelHandle(getChildNode(BookListPanelHandle.BOOK_LIST_VIEW_ID));"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        resultDisplay \u003d new ResultDisplayHandle(getChildNode(ResultDisplayHandle.RESULT_DISPLAY_ID));"},{"lineNumber":22,"author":{"gitID":"-"},"content":"        commandBox \u003d new CommandBoxHandle(getChildNode(CommandBoxHandle.COMMAND_INPUT_FIELD_ID));"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        statusBarFooter \u003d new StatusBarFooterHandle(getChildNode(StatusBarFooterHandle.STATUS_BAR_PLACEHOLDER));"},{"lineNumber":24,"author":{"gitID":"-"},"content":"        mainMenu \u003d new MainMenuHandle(getChildNode(MainMenuHandle.MENU_BAR_ID));"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        browserPanel \u003d new BrowserPanelHandle(getChildNode(BrowserPanelHandle.BROWSER_ID));"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    public BookListPanelHandle getBookListPanel() {"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"        return bookListPanel;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        return resultDisplay;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public CommandBoxHandle getCommandBox() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        return commandBox;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return statusBarFooter;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    public MainMenuHandle getMainMenu() {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        return mainMenu;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public BrowserPanelHandle getBrowserPanel() {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        return browserPanel;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalBooks.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" * A utility class containing a list of {@code Book} objects to be used in tests."},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"public class TypicalBooks {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book ARTEMIS \u003d new BookBuilder().withAuthors(\"Andy Weir\").withTitle(\"Artemis\")"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"            .withCategories(\"Fiction\").withDescription(\"This is Artemis.\").build();"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book BABYLON_ASHES \u003d new BookBuilder().withAuthors(\"James S. A. Corey\")"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"            .withTitle(\"Babylon\u0027s Ashes\").withCategories(\"Fiction\").withDescription(\"This is Babylon\u0027s Ashes.\").build();"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book COLLAPSING_EMPIRE \u003d new BookBuilder().withAuthors(\"John Scalzi\")"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"            .withTitle(\"The Collapsing Empire\").withCategories(\"Fiction\")"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            .withDescription(\"This is The Collapsing Empire.\").build();"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book CONSIDER_PHLEBAS \u003d new BookBuilder().withAuthors(\"Iain M. Banks\")"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"            .withTitle(\"Consider Phlebas\").withCategories(\"Fiction\", \"Science Fiction\")"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"            .withDescription(\"This is Consider Phlebas.\").build();"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    public static final Book WAKING_GODS \u003d new BookBuilder().withAuthors(\"Sylvain Neuvel\").withTitle(\"Waking Gods\")"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"            .withCategories(\"Fiction\", \"Science Fiction\").withDescription(\"This is Waking Gods.\").build();"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private TypicalBooks() {} // prevents instantiation"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an {@code BookShelf} with all the typical books."},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    public static BookShelf getTypicalBookShelf() {"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d new BookShelf();"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        for (Book book : getTypicalBooks()) {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"            try {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"                bookShelf.addBook(book);"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"            } catch (DuplicateBookException e) {"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"                throw new AssertionError(\"not possible\");"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"            }"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelf;"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    public static List\u003cBook\u003e getTypicalBooks() {"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ARTEMIS, BABYLON_ASHES,"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"                COLLAPSING_EMPIRE, CONSIDER_PHLEBAS, WAKING_GODS));"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":46,"-":4}},{"path":"src/main/java/seedu/address/ui/BrowserPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.net.URL;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.event.Event;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.web.WebView;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.MainApp;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.BookPanelSelectionChangedEvent;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"-"},"content":" * The Browser Panel of the App."},{"lineNumber":20,"author":{"gitID":"-"},"content":" */"},{"lineNumber":21,"author":{"gitID":"-"},"content":"public class BrowserPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public static final String DEFAULT_PAGE \u003d \"default.html\";"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public static final String SEARCH_PAGE_URL \u003d"},{"lineNumber":25,"author":{"gitID":"-"},"content":"            \"https://se-edu.github.io/addressbook-level4/DummySearchPage.html?name\u003d\";"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"BrowserPanel.fxml\";"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private WebView browser;"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public BrowserPanel() {"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        // To prevent triggering events for typing inside the loaded Web page."},{"lineNumber":38,"author":{"gitID":"-"},"content":"        getRoot().setOnKeyPressed(Event::consume);"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"        loadDefaultPage();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"    private void loadBookPage(Book book) {"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        loadPage(SEARCH_PAGE_URL + book.getTitle().title);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void loadPage(String url) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e browser.getEngine().load(url));"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     * Loads a default HTML file with a background that matches the general theme."},{"lineNumber":54,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    private void loadDefaultPage() {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        URL defaultPage \u003d MainApp.class.getResource(FXML_FILE_FOLDER + DEFAULT_PAGE);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        loadPage(defaultPage.toExternalForm());"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":61,"author":{"gitID":"-"},"content":"     * Frees resources allocated to the browser."},{"lineNumber":62,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    public void freeResources() {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        browser \u003d null;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"    private void handleBookPanelSelectionChangedEvent(BookPanelSelectionChangedEvent event) {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        loadBookPage(event.getNewSelection().book);"},{"lineNumber":71,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":6,"-":66}},{"path":"src/test/java/seedu/address/model/BookShelfTest.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.ARTEMIS;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.BABYLON_ASHES;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.WAKING_GODS;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import static seedu.address.testutil.TypicalBooks.getTypicalBookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import org.junit.Before;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import org.junit.Rule;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import org.junit.Test;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import org.junit.rules.ExpectedException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"public class BookShelfTest {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    @Rule"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private BookShelf bookShelf;"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    @Before"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    public void setUp() {"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf \u003d new BookShelf();"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public void constructor() {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(Collections.emptyList(), bookShelf.getBookList());"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public void resetData_null_throwsNullPointerException() {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.resetData(null);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    public void resetData_withValidReadOnlyBookShelf_replacesData() {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        ReadOnlyBookShelf newData \u003d getTypicalBookShelf();"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.resetData(newData);"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(newData, bookShelf);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @Test"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public void resetData_withDuplicatePersons_throwsAssertionError() {"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        // Repeat ARTEMIS twice"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        List\u003cBook\u003e newBooks \u003d Arrays.asList(ARTEMIS, ARTEMIS);"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        BookShelfStub newData \u003d new BookShelfStub(newBooks);"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(AssertionError.class);"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.resetData(newData);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook_validTargetAndReplacement_success() throws Exception {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(ARTEMIS, BABYLON_ASHES);"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(false, bookShelf.getBookList().contains(ARTEMIS));"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(true, bookShelf.getBookList().contains(BABYLON_ASHES));"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook_nonMatchingTarget_throwsBookNotFoundException() throws Exception {"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(BABYLON_ASHES, WAKING_GODS);"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook_nullTarget_throwsBookNotFoundException() throws Exception {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(null, WAKING_GODS);"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook_nullReplacement_throwsNullPointerException() throws Exception {"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(NullPointerException.class);"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(ARTEMIS, null);"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"    public void removeBook_validBook_success() throws Exception {"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.removeBook(ARTEMIS);"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        assertEquals(0, bookShelf.getBookList().size());"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"    public void removeBook_nonMatchingBook_throwsBookNotFoundException() throws Exception {"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(ARTEMIS);"},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        thrown.expect(BookNotFoundException.class);"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.removeBook(BABYLON_ASHES);"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"    @Test"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"    public void getBookList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        thrown.expect(UnsupportedOperationException.class);"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.getBookList().remove(0);"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"     * A stub ReadOnlyBookShelf whose book list can violate interface constraints."},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"    private static class BookShelfStub implements ReadOnlyBookShelf {"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"        private final ObservableList\u003cBook\u003e books \u003d FXCollections.observableArrayList();"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"        BookShelfStub(Collection\u003cBook\u003e books) {"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"            this.books.setAll(books);"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":"        @Override"},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"        public ObservableList\u003cBook\u003e getBookList() {"},{"lineNumber":125,"author":{"gitID":"takuyakanbr"},"content":"            return books;"},{"lineNumber":126,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":128,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":129,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":101,"-":28}},{"path":"src/main/java/seedu/address/ui/UiManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.control.Alert;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.scene.control.Alert.AlertType;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.MainApp;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitID":"-"},"content":" * The manager of the UI component."},{"lineNumber":23,"author":{"gitID":"-"},"content":" */"},{"lineNumber":24,"author":{"gitID":"-"},"content":"public class UiManager extends ComponentManager implements Ui {"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_STAGE_TITLE \u003d \"File Op Error\";"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE \u003d \"Could not save data\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE \u003d \"Could not save data to file\";"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/book_flat_32.png\";"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private Logic logic;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    private Config config;"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private UserPrefs prefs;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    private MainWindow mainWindow;"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public UiManager(Logic logic, Config config, UserPrefs prefs) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        super();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        this.config \u003d config;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        this.prefs \u003d prefs;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        logger.info(\"Starting UI...\");"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        //Set the application icon."},{"lineNumber":52,"author":{"gitID":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, config, prefs, logic);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts"},{"lineNumber":57,"author":{"gitID":"-"},"content":"            mainWindow.fillInnerParts();"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        } catch (Throwable e) {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            logger.severe(StringUtil.getDetails(e));"},{"lineNumber":61,"author":{"gitID":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    public void stop() {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        prefs.updateLastUsedGuiSetting(mainWindow.getCurrentGuiSetting());"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        mainWindow.hide();"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        mainWindow.releaseResources();"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"    private void showFileOperationAlertAndWait(String description, String details, Throwable cause) {"},{"lineNumber":73,"author":{"gitID":"-"},"content":"        final String content \u003d details + \":\\n\" + cause.toString();"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(AlertType.ERROR, FILE_OPS_ERROR_DIALOG_STAGE_TITLE, description, content);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"    private Image getImage(String imagePath) {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters."},{"lineNumber":87,"author":{"gitID":"-"},"content":"     * This method only returns after the user has closed the alert dialog."},{"lineNumber":88,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"},{"lineNumber":90,"author":{"gitID":"-"},"content":"                                               String contentText) {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        final Alert alert \u003d new Alert(type);"},{"lineNumber":92,"author":{"gitID":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"},{"lineNumber":93,"author":{"gitID":"-"},"content":"        alert.initOwner(owner);"},{"lineNumber":94,"author":{"gitID":"-"},"content":"        alert.setTitle(title);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        alert.setHeaderText(headerText);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        alert.setContentText(contentText);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"        alert.showAndWait();"},{"lineNumber":99,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitID":"-"},"content":""},{"lineNumber":101,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":102,"author":{"gitID":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},"},{"lineNumber":103,"author":{"gitID":"-"},"content":"     * and exits the application after the user has closed the alert dialog."},{"lineNumber":104,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        Platform.exit();"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        System.exit(1);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event Handling Code \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":113,"author":{"gitID":"-"},"content":""},{"lineNumber":114,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    private void handleDataSavingExceptionEvent(DataSavingExceptionEvent event) {"},{"lineNumber":116,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":117,"author":{"gitID":"-"},"content":"        showFileOperationAlertAndWait(FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE, FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE,"},{"lineNumber":118,"author":{"gitID":"-"},"content":"                event.exception);"},{"lineNumber":119,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":1,"-":119}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.event.ActionEvent;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.scene.control.MenuItem;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.scene.control.TextInputControl;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyCombination;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.input.KeyEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.layout.StackPane;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.GuiSettings;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ShowHelpRequestEvent;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitID":"-"},"content":" * The Main Window. Provides the basic application layout containing"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed."},{"lineNumber":26,"author":{"gitID":"-"},"content":" */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private Stage primaryStage;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    private Logic logic;"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":"    // Independent Ui parts residing in this Ui container"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private BrowserPanel browserPanel;"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"    private BookListPanel bookListPanel;"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    private Config config;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private UserPrefs prefs;"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    private StackPane browserPlaceholder;"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    private StackPane commandBoxPlaceholder;"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    private MenuItem helpMenuItem;"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"    private StackPane bookListPanelPlaceholder;"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    private StackPane resultDisplayPlaceholder;"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    private StackPane statusbarPlaceholder;"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public MainWindow(Stage primaryStage, Config config, UserPrefs prefs, Logic logic) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        super(FXML, primaryStage);"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"        // Set dependencies"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        this.primaryStage \u003d primaryStage;"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        this.config \u003d config;"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        this.prefs \u003d prefs;"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"        // Configure the UI"},{"lineNumber":70,"author":{"gitID":"-"},"content":"        setTitle(config.getAppTitle());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        setWindowDefaultSize(prefs);"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        setAccelerators();"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"    public Stage getPrimaryStage() {"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        return primaryStage;"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitID":"-"},"content":""},{"lineNumber":81,"author":{"gitID":"-"},"content":"    private void setAccelerators() {"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * Sets the accelerator of a MenuItem."},{"lineNumber":87,"author":{"gitID":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator"},{"lineNumber":88,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        menuItem.setAccelerator(keyCombination);"},{"lineNumber":91,"author":{"gitID":"-"},"content":""},{"lineNumber":92,"author":{"gitID":"-"},"content":"        /*"},{"lineNumber":93,"author":{"gitID":"-"},"content":"         * TODO: the code below can be removed once the bug reported here"},{"lineNumber":94,"author":{"gitID":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666"},{"lineNumber":95,"author":{"gitID":"-"},"content":"         * is fixed in later version of SDK."},{"lineNumber":96,"author":{"gitID":"-"},"content":"         *"},{"lineNumber":97,"author":{"gitID":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will"},{"lineNumber":98,"author":{"gitID":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and"},{"lineNumber":99,"author":{"gitID":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"},{"lineNumber":100,"author":{"gitID":"-"},"content":"         * not work when the focus is in them because the key event is consumed by"},{"lineNumber":101,"author":{"gitID":"-"},"content":"         * the TextInputControl(s)."},{"lineNumber":102,"author":{"gitID":"-"},"content":"         *"},{"lineNumber":103,"author":{"gitID":"-"},"content":"         * For now, we add following event filter to capture such key events and open"},{"lineNumber":104,"author":{"gitID":"-"},"content":"         * help window purposely so to support accelerators even when focus is"},{"lineNumber":105,"author":{"gitID":"-"},"content":"         * in CommandBox or ResultDisplay."},{"lineNumber":106,"author":{"gitID":"-"},"content":"         */"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"},{"lineNumber":108,"author":{"gitID":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());"},{"lineNumber":110,"author":{"gitID":"-"},"content":"                event.consume();"},{"lineNumber":111,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitID":"-"},"content":"     * Fills up all the placeholders of this window."},{"lineNumber":117,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitID":"-"},"content":"    void fillInnerParts() {"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        browserPanel \u003d new BrowserPanel();"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        browserPlaceholder.getChildren().add(browserPanel.getRoot());"},{"lineNumber":121,"author":{"gitID":"-"},"content":""},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"        bookListPanel \u003d new BookListPanel(logic.getFilteredBookList());"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"        bookListPanelPlaceholder.getChildren().add(bookListPanel.getRoot());"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"        ResultDisplay resultDisplay \u003d new ResultDisplay();"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"qiu-siqi"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(prefs.getBookShelfFilePath());"},{"lineNumber":129,"author":{"gitID":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());"},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(logic);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":""},{"lineNumber":135,"author":{"gitID":"-"},"content":"    void hide() {"},{"lineNumber":136,"author":{"gitID":"-"},"content":"        primaryStage.hide();"},{"lineNumber":137,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"    private void setTitle(String appTitle) {"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        primaryStage.setTitle(appTitle);"},{"lineNumber":141,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitID":"-"},"content":""},{"lineNumber":143,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":144,"author":{"gitID":"-"},"content":"     * Sets the default size based on user preferences."},{"lineNumber":145,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    private void setWindowDefaultSize(UserPrefs prefs) {"},{"lineNumber":147,"author":{"gitID":"-"},"content":"        primaryStage.setHeight(prefs.getGuiSettings().getWindowHeight());"},{"lineNumber":148,"author":{"gitID":"-"},"content":"        primaryStage.setWidth(prefs.getGuiSettings().getWindowWidth());"},{"lineNumber":149,"author":{"gitID":"-"},"content":"        if (prefs.getGuiSettings().getWindowCoordinates() !\u003d null) {"},{"lineNumber":150,"author":{"gitID":"-"},"content":"            primaryStage.setX(prefs.getGuiSettings().getWindowCoordinates().getX());"},{"lineNumber":151,"author":{"gitID":"-"},"content":"            primaryStage.setY(prefs.getGuiSettings().getWindowCoordinates().getY());"},{"lineNumber":152,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":153,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitID":"-"},"content":""},{"lineNumber":155,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitID":"-"},"content":"     * Returns the current size and the position of the main Window."},{"lineNumber":157,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitID":"-"},"content":"    GuiSettings getCurrentGuiSetting() {"},{"lineNumber":159,"author":{"gitID":"-"},"content":"        return new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"},{"lineNumber":160,"author":{"gitID":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());"},{"lineNumber":161,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitID":"-"},"content":""},{"lineNumber":163,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":164,"author":{"gitID":"-"},"content":"     * Opens the help window."},{"lineNumber":165,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":166,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":167,"author":{"gitID":"-"},"content":"    public void handleHelp() {"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        HelpWindow helpWindow \u003d new HelpWindow();"},{"lineNumber":169,"author":{"gitID":"-"},"content":"        helpWindow.show();"},{"lineNumber":170,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":171,"author":{"gitID":"-"},"content":""},{"lineNumber":172,"author":{"gitID":"-"},"content":"    void show() {"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        primaryStage.show();"},{"lineNumber":174,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitID":"-"},"content":""},{"lineNumber":176,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":177,"author":{"gitID":"-"},"content":"     * Closes the application."},{"lineNumber":178,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":179,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":180,"author":{"gitID":"-"},"content":"    private void handleExit() {"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        raise(new ExitAppRequestEvent());"},{"lineNumber":182,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitID":"-"},"content":""},{"lineNumber":184,"author":{"gitID":"qiu-siqi"},"content":"    public BookListPanel getBookListPanel() {"},{"lineNumber":185,"author":{"gitID":"qiu-siqi"},"content":"        return this.bookListPanel;"},{"lineNumber":186,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitID":"-"},"content":""},{"lineNumber":188,"author":{"gitID":"-"},"content":"    void releaseResources() {"},{"lineNumber":189,"author":{"gitID":"-"},"content":"        browserPanel.freeResources();"},{"lineNumber":190,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitID":"-"},"content":""},{"lineNumber":192,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":193,"author":{"gitID":"-"},"content":"    private void handleShowHelpEvent(ShowHelpRequestEvent event) {"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":195,"author":{"gitID":"-"},"content":"        handleHelp();"},{"lineNumber":196,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":7,"-":190}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.time.Clock;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import org.controlsfx.control.StatusBar;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public static final String SYNC_STATUS_INITIAL \u003d \"Not updated yet in this session\";"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    public static final String SYNC_STATUS_UPDATED \u003d \"Last Updated: %s\";"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     * Used to generate time stamps."},{"lineNumber":27,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * TODO: change clock to an instance variable."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     * We leave it as a static variable because manual dependency injection"},{"lineNumber":30,"author":{"gitID":"-"},"content":"     * will require passing down the clock reference all the way from MainApp,"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * but it should be easier once we have factories/DI frameworks."},{"lineNumber":32,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    private static Clock clock \u003d Clock.systemDefaultZone();"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StatusBarFooter.class);"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    private StatusBar syncStatus;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    private StatusBar saveLocationStatus;"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public StatusBarFooter(String saveLocation) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        super(FXML);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        setSyncStatus(SYNC_STATUS_INITIAL);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        setSaveLocation(\"./\" + saveLocation);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":53,"author":{"gitID":"-"},"content":"     * Sets the clock used to determine the current time."},{"lineNumber":54,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    public static void setClock(Clock clock) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"        StatusBarFooter.clock \u003d clock;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":60,"author":{"gitID":"-"},"content":"     * Returns the clock currently in use."},{"lineNumber":61,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    public static Clock getClock() {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        return clock;"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"    private void setSaveLocation(String location) {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e this.saveLocationStatus.setText(location));"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    private void setSyncStatus(String status) {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e this.syncStatus.setText(status));"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"-"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"    public void handleBookShelfChangedEvent(BookShelfChangedEvent bsce) {"},{"lineNumber":76,"author":{"gitID":"-"},"content":"        long now \u003d clock.millis();"},{"lineNumber":77,"author":{"gitID":"-"},"content":"        String lastUpdated \u003d new Date(now).toString();"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(bsce, \"Setting last updated status to \" + lastUpdated));"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        setSyncStatus(String.format(SYNC_STATUS_UPDATED, lastUpdated));"},{"lineNumber":80,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"-":78}},{"path":"src/main/java/seedu/address/ui/BookCard.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.scene.layout.FlowPane;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":" * An UI component that displays information of a {@code Book}."},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"public class BookCard extends UiPart\u003cRegion\u003e {"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    private static final String FXML \u003d \"BookListCard.fxml\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"},{"lineNumber":19,"author":{"gitID":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime."},{"lineNumber":20,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":21,"author":{"gitID":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    public final Book book;"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    private Label title;"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"    private Label id;"},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"    private FlowPane authors;"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"    private FlowPane categories;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    public BookCard(Book book, int displayedIndex) {"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"        super(FXML);"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        this.book \u003d book;"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        id.setText(displayedIndex + \". \");"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        title.setText(book.getTitle().title);"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        book.getAuthors().forEach(author -\u003e authors.getChildren()"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"                .add(new Label(author.fullName)));"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        book.getCategories().forEach(category -\u003e categories.getChildren()"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"                .add(new Label(category.toString())));"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        if (!(other instanceof BookCard)) {"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"            return false;"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"        // state check"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"        BookCard card \u003d (BookCard) other;"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        return id.getText().equals(card.id.getText())"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 book.equals(card.book);"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":39,"-":24}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"-"},"content":" * Container for user visible messages."},{"lineNumber":5,"author":{"gitID":"-"},"content":" */"},{"lineNumber":6,"author":{"gitID":"-"},"content":"public class Messages {"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"},{"lineNumber":9,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_INVALID_BOOK_DISPLAYED_INDEX \u003d \"The book index provided is invalid\";"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_BOOKS_LISTED_OVERVIEW \u003d \"%1$d books listed!\";"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"-":11}},{"path":"src/main/java/seedu/address/commons/core/Config.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Config values used by the app"},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class Config {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public static final String DEFAULT_CONFIG_FILE \u003d \"config.json\";"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    // Config values customizable through config file"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    private String appTitle \u003d \"Bibliotek\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    private Level logLevel \u003d Level.INFO;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    private String userPrefsFilePath \u003d \"preferences.json\";"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String getAppTitle() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return appTitle;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public void setAppTitle(String appTitle) {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        this.appTitle \u003d appTitle;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    public Level getLogLevel() {"},{"lineNumber":27,"author":{"gitID":"-"},"content":"        return logLevel;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public void setLogLevel(Level logLevel) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        this.logLevel \u003d logLevel;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    public String getUserPrefsFilePath() {"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        return userPrefsFilePath;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public void setUserPrefsFilePath(String userPrefsFilePath) {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitID":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well."},{"lineNumber":48,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        Config o \u003d (Config) other;"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        return Objects.equals(appTitle, o.appTitle)"},{"lineNumber":54,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(logLevel, o.logLevel)"},{"lineNumber":55,"author":{"gitID":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":""},{"lineNumber":58,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":59,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        return Objects.hash(appTitle, logLevel, userPrefsFilePath);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":""},{"lineNumber":63,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        sb.append(\"App title : \" + appTitle);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"        sb.append(\"\\nCurrent log level : \" + logLevel);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        return sb.toString();"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"-"},"content":""},{"lineNumber":72,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":1,"-":71}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.logging.ConsoleHandler;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.FileHandler;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.logging.Handler;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.logging.SimpleFormatter;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * Configures and manages loggers and handlers, including their logging level"},{"lineNumber":15,"author":{"gitID":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e"},{"lineNumber":16,"author":{"gitID":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,"},{"lineNumber":17,"author":{"gitID":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log"},{"lineNumber":18,"author":{"gitID":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e"},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class LogsCenter {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private static final String LOG_FILE \u003d \"bibliotek.log\";"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private static FileHandler fileHandler;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    private static ConsoleHandler consoleHandler;"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e"},{"lineNumber":32,"author":{"gitID":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name"},{"lineNumber":33,"author":{"gitID":"-"},"content":"     * is requested again from the LogsCenter."},{"lineNumber":34,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public static void init(Config config) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * Creates a logger with the given name."},{"lineNumber":42,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public static Logger getLogger(String name) {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        logger.setUseParentHandlers(false);"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"        removeHandlers(logger);"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        addConsoleHandler(logger);"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        addFileHandler(logger);"},{"lineNumber":50,"author":{"gitID":"-"},"content":""},{"lineNumber":51,"author":{"gitID":"-"},"content":"        return Logger.getLogger(name);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"-"},"content":"     * Creates a Logger for the given class name."},{"lineNumber":56,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        if (clazz \u003d\u003d null) {"},{"lineNumber":59,"author":{"gitID":"-"},"content":"            return Logger.getLogger(\"\");"},{"lineNumber":60,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        return getLogger(clazz.getSimpleName());"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e"},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * Creates the {@code consoleHandler} if it is null."},{"lineNumber":67,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    private static void addConsoleHandler(Logger logger) {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        if (consoleHandler \u003d\u003d null) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            consoleHandler \u003d createConsoleHandler();"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        logger.addHandler(consoleHandler);"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"-"},"content":"     * Remove all the handlers from {@code logger}."},{"lineNumber":77,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    private static void removeHandlers(Logger logger) {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        Handler[] handlers \u003d logger.getHandlers();"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        for (Handler handler : handlers) {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"            logger.removeHandler(handler);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e"},{"lineNumber":87,"author":{"gitID":"-"},"content":"     * Creates {@code fileHandler} if it is null."},{"lineNumber":88,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitID":"-"},"content":"    private static void addFileHandler(Logger logger) {"},{"lineNumber":90,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":91,"author":{"gitID":"-"},"content":"            if (fileHandler \u003d\u003d null) {"},{"lineNumber":92,"author":{"gitID":"-"},"content":"                fileHandler \u003d createFileHandler();"},{"lineNumber":93,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":94,"author":{"gitID":"-"},"content":"            logger.addHandler(fileHandler);"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":96,"author":{"gitID":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"-"},"content":"     * Creates a {@code FileHandler} for the log file."},{"lineNumber":102,"author":{"gitID":"-"},"content":"     * @throws IOException if there are problems opening the file."},{"lineNumber":103,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());"},{"lineNumber":107,"author":{"gitID":"-"},"content":"        fileHandler.setLevel(currentLogLevel);"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        return fileHandler;"},{"lineNumber":109,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitID":"-"},"content":""},{"lineNumber":111,"author":{"gitID":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);"},{"lineNumber":114,"author":{"gitID":"-"},"content":"        return consoleHandler;"},{"lineNumber":115,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitID":"-"},"content":""},{"lineNumber":117,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":118,"author":{"gitID":"-"},"content":"     * Decorates the given string to create a log message suitable for logging event handling methods."},{"lineNumber":119,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":120,"author":{"gitID":"-"},"content":"    public static String getEventHandlingLogMessage(BaseEvent e, String message) {"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        return \"---[Event handled][\" + e + \"]\" + message;"},{"lineNumber":122,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"-"},"content":""},{"lineNumber":124,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":125,"author":{"gitID":"-"},"content":"     * @see #getEventHandlingLogMessage(BaseEvent, String)"},{"lineNumber":126,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":127,"author":{"gitID":"-"},"content":"    public static String getEventHandlingLogMessage(BaseEvent e) {"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        return getEventHandlingLogMessage(e, \"\");"},{"lineNumber":129,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":1,"-":129}},{"path":"src/test/java/guitests/guihandles/BookCardHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * Provides a handle to a person card in the person list panel."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"public class BookCardHandle extends NodeHandle\u003cNode\u003e {"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    private static final String TITLE_FIELD_ID \u003d \"#title\";"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    private static final String AUTHORS_FIELD_ID \u003d \"#authors\";"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"    private static final String CATEGORIES_FIELD_ID \u003d \"#categories\";"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"    private final Label idLabel;"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    private final Label titleLabel;"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"    private final List\u003cLabel\u003e authorsLabel;"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    private final List\u003cLabel\u003e categoriesLabel;"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle(Node cardNode) {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        super(cardNode);"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"        this.idLabel \u003d getChildNode(ID_FIELD_ID);"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        this.titleLabel \u003d getChildNode(TITLE_FIELD_ID);"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        Region authorsContainer \u003d getChildNode(AUTHORS_FIELD_ID);"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        this.authorsLabel \u003d authorsContainer"},{"lineNumber":32,"author":{"gitID":"-"},"content":"                .getChildrenUnmodifiable()"},{"lineNumber":33,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":34,"author":{"gitID":"-"},"content":"                .map(Label.class::cast)"},{"lineNumber":35,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        Region categoriesContainer \u003d getChildNode(CATEGORIES_FIELD_ID);"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"        this.categoriesLabel \u003d categoriesContainer"},{"lineNumber":39,"author":{"gitID":"-"},"content":"                .getChildrenUnmodifiable()"},{"lineNumber":40,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":41,"author":{"gitID":"-"},"content":"                .map(Label.class::cast)"},{"lineNumber":42,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public String getId() {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        return idLabel.getText();"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"    public String getTitle() {"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        return titleLabel.getText();"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"    public List\u003cString\u003e getAuthors() {"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"        return authorsLabel"},{"lineNumber":55,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":56,"author":{"gitID":"-"},"content":"                .map(Label::getText)"},{"lineNumber":57,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    public List\u003cString\u003e getCategories() {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        return categoriesLabel"},{"lineNumber":62,"author":{"gitID":"-"},"content":"                .stream()"},{"lineNumber":63,"author":{"gitID":"-"},"content":"                .map(Label::getText)"},{"lineNumber":64,"author":{"gitID":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":28,"-":38}},{"path":"src/test/java/guitests/guihandles/BookListPanelHandle.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package guitests.guihandles;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.ui.BookCard;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":" * Provides a handle for {@code BookListPanel} containing the list of {@code BookCard}."},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"public class BookListPanelHandle extends NodeHandle\u003cListView\u003cBookCard\u003e\u003e {"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    public static final String BOOK_LIST_VIEW_ID \u003d \"#bookListView\";"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"    private Optional\u003cBookCard\u003e lastRememberedSelectedBookCard;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"    public BookListPanelHandle(ListView\u003cBookCard\u003e bookListPanelNode) {"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        super(bookListPanelNode);"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a handle to the selected {@code BookCardHandle}."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * A maximum of 1 item can be selected at any time."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * @throws AssertionError if no card is selected, or more than 1 card is selected."},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getHandleToSelectedCard() {"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e bookList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"        if (bookList.size() !\u003d 1) {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"            throw new AssertionError(\"Book list size expected 1.\");"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        return new BookCardHandle(bookList.get(0).getRoot());"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * Returns the index of the selected card."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public int getSelectedCardIndex() {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return getRootNode().getSelectionModel().getSelectedIndex();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitID":"-"},"content":"     * Returns true if a card is currently selected."},{"lineNumber":46,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public boolean isAnyCardSelected() {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedCardsList \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        if (selectedCardsList.size() \u003e 1) {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Card list size expected 0 or 1.\");"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return !selectedCardsList.isEmpty();"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitID":"qiu-siqi"},"content":"     * Navigates the listview to display and select the book."},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"    public void navigateToCard(Book book) {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e cards \u003d getRootNode().getItems();"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cBookCard\u003e matchingCard \u003d cards.stream().filter(card -\u003e card.book.equals(book)).findFirst();"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        if (!matchingCard.isPresent()) {"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"            throw new IllegalArgumentException(\"Book does not exist.\");"},{"lineNumber":66,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"-"},"content":"        guiRobot.interact(() -\u003e {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"            getRootNode().scrollTo(matchingCard.get());"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            getRootNode().getSelectionModel().select(matchingCard.get());"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        });"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        guiRobot.pauseForHuman();"},{"lineNumber":73,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the book card handle of a book associated with the {@code index} in the list."},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getBookCardHandle(int index) {"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        return getBookCardHandle(getRootNode().getItems().get(index).book);"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"     * Returns the {@code BookCardHandle} of the specified {@code book} in the list."},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"    public BookCardHandle getBookCardHandle(Book book) {"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cBookCardHandle\u003e handle \u003d getRootNode().getItems().stream()"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"                .filter(card -\u003e card.book.equals(book))"},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"                .map(card -\u003e new BookCardHandle(card.getRoot()))"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"                .findFirst();"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        return handle.orElseThrow(() -\u003e new IllegalArgumentException(\"Book does not exist.\"));"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"     * Selects the {@code BookCard} at {@code index} in the list."},{"lineNumber":95,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":96,"author":{"gitID":"-"},"content":"    public void select(int index) {"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        getRootNode().getSelectionModel().select(index);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"     * Remembers the selected {@code BookCard} in the list."},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"    public void rememberSelectedBookCard() {"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":"            lastRememberedSelectedBookCard \u003d Optional.empty();"},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"        } else {"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"            lastRememberedSelectedBookCard \u003d Optional.of(selectedItems.get(0));"},{"lineNumber":110,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"     * Returns true if the selected {@code BookCard} is different from the value remembered by the most recent"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"     * {@code rememberSelectedBookCard()} call."},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":"    public boolean isSelectedBookCardChanged() {"},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBookCard\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"        if (selectedItems.size() \u003d\u003d 0) {"},{"lineNumber":121,"author":{"gitID":"qiu-siqi"},"content":"            return lastRememberedSelectedBookCard.isPresent();"},{"lineNumber":122,"author":{"gitID":"qiu-siqi"},"content":"        } else {"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"            return !lastRememberedSelectedBookCard.isPresent()"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"                    || !lastRememberedSelectedBookCard.get().equals(selectedItems.get(0));"},{"lineNumber":125,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":126,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":129,"author":{"gitID":"-"},"content":"     * Returns the size of the list."},{"lineNumber":130,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":131,"author":{"gitID":"-"},"content":"    public int getListSize() {"},{"lineNumber":132,"author":{"gitID":"-"},"content":"        return getRootNode().getItems().size();"},{"lineNumber":133,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":77,"-":57}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.PrintWriter;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.StringWriter;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import java.io.UnsupportedEncodingException;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import java.net.URLEncoder;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * Helper functions for handling strings."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class StringUtil {"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     *   Ignores case, but a full word match is required."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e"},{"lineNumber":20,"author":{"gitID":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true"},{"lineNumber":21,"author":{"gitID":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match"},{"lineNumber":23,"author":{"gitID":"-"},"content":"     *       \u003c/pre\u003e"},{"lineNumber":24,"author":{"gitID":"-"},"content":"     * @param sentence cannot be null"},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        requireNonNull(sentence);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        requireNonNull(word);"},{"lineNumber":30,"author":{"gitID":"-"},"content":""},{"lineNumber":31,"author":{"gitID":"-"},"content":"        String preppedWord \u003d word.trim();"},{"lineNumber":32,"author":{"gitID":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"        String preppedSentence \u003d sentence;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"        for (String wordInSentence: wordsInPreppedSentence) {"},{"lineNumber":39,"author":{"gitID":"-"},"content":"            if (wordInSentence.equalsIgnoreCase(preppedWord)) {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"                return true;"},{"lineNumber":41,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        return false;"},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * Returns a detailed message of the t, including the stack trace."},{"lineNumber":48,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public static String getDetails(Throwable t) {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        requireNonNull(t);"},{"lineNumber":51,"author":{"gitID":"-"},"content":"        StringWriter sw \u003d new StringWriter();"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitID":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer"},{"lineNumber":58,"author":{"gitID":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e"},{"lineNumber":59,"author":{"gitID":"-"},"content":"     * Will return false for any other non-null string input"},{"lineNumber":60,"author":{"gitID":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)"},{"lineNumber":61,"author":{"gitID":"-"},"content":"     * @throws NullPointerException if {@code s} is null."},{"lineNumber":62,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitID":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {"},{"lineNumber":64,"author":{"gitID":"-"},"content":"        requireNonNull(s);"},{"lineNumber":65,"author":{"gitID":"-"},"content":""},{"lineNumber":66,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":67,"author":{"gitID":"-"},"content":"            int value \u003d Integer.parseInt(s);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":70,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the URL encoded form of the string {@code s}, or any empty string"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"     * if UTF-8 encoding is not supported."},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"    public static String urlEncode(String s) {"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(s);"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"            return URLEncoder.encode(s, \"UTF-8\");"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        } catch (UnsupportedEncodingException e) {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"            return \"\";"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":86,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":15,"-":71}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"-"},"content":" * Utility methods related to Collections"},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class CollectionUtil {"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    /** @see #requireAllNonNull(Collection) */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public static void requireAllNonNull(Object... items) {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        requireNonNull(items);"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null."},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        requireNonNull(items);"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        items.forEach(Objects::requireNonNull);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null."},{"lineNumber":34,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"-"},"content":"     * Returns true if every element in a collection are unique by {@link Object#equals(Object)}."},{"lineNumber":41,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public static boolean elementsAreUnique(Collection\u003c?\u003e items) {"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        final Set\u003cObject\u003e testSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        for (Object item : items) {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"            final boolean itemAlreadyExists \u003d !testSet.add(item); // see Set documentation"},{"lineNumber":46,"author":{"gitID":"-"},"content":"            if (itemAlreadyExists) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"                return false;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        return true;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"     * Returns a new {@link Set} containing all the specified items."},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    @SafeVarargs"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    public static \u003cT\u003e Set\u003cT\u003e toSet(T... items) {"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        HashSet\u003cT\u003e set \u003d new HashSet\u003c\u003e();"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        Collections.addAll(set, items);"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        return set;"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":62,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":11,"-":51}},{"path":"src/main/java/seedu/address/commons/events/ui/JumpToListRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" * Indicates a request to jump to the list of books"},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class JumpToListRequestEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public final int targetIndex;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"    public JumpToListRequestEvent(Index targetIndex) {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex.getZeroBased();"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"-":21}},{"path":"src/main/java/seedu/address/commons/events/network/ResultOutcome.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":" * Represents the type of result outcome of a network request."},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"public enum ResultOutcome {"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"    FAILURE, SUCCESS"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":8}},{"path":"src/main/java/seedu/address/ui/BookListPanel.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import org.fxmisc.easybind.EasyBind;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListCell;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.BookPanelSelectionChangedEvent;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":" * Panel containing the list of books."},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"public class BookListPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    private static final String FXML \u003d \"BookListPanel.fxml\";"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BookListPanel.class);"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"    private ListView\u003cBookCard\u003e bookListView;"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    public BookListPanel(ObservableList\u003cBook\u003e bookList) {"},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"        super(FXML);"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"        setConnections(bookList);"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        registerAsAnEventHandler(this);"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    private void setConnections(ObservableList\u003cBook\u003e bookList) {"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        ObservableList\u003cBookCard\u003e mappedList \u003d EasyBind.map("},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"                bookList, (book) -\u003e new BookCard(book, bookList.indexOf(book) + 1));"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        bookListView.setItems(mappedList);"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        bookListView.setCellFactory(listView -\u003e new BookListViewCell());"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        setEventHandlerForSelectionChangeEvent();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    private void setEventHandlerForSelectionChangeEvent() {"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        bookListView.getSelectionModel().selectedItemProperty()"},{"lineNumber":46,"author":{"gitID":"-"},"content":"                .addListener((observable, oldValue, newValue) -\u003e {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"                    if (newValue !\u003d null) {"},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"                        logger.fine(\"Selection in book list panel changed to : \u0027\" + newValue + \"\u0027\");"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"                        raise(new BookPanelSelectionChangedEvent(newValue));"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"                    }"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"                });"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"     * Scrolls to the {@code BookCard} at the {@code index} and selects it."},{"lineNumber":56,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    private void scrollTo(int index) {"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        Platform.runLater(() -\u003e {"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"            bookListView.scrollTo(index);"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"            bookListView.getSelectionModel().clearAndSelect(index);"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        });"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"    @Subscribe"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"    private void handleJumpToListRequestEvent(JumpToListRequestEvent event) {"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"        scrollTo(event.targetIndex);"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code BookCard}."},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"    class BookListViewCell extends ListCell\u003cBookCard\u003e {"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"        @Override"},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"        protected void updateItem(BookCard book, boolean empty) {"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"            super.updateItem(book, empty);"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"            if (empty || book \u003d\u003d null) {"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"                setGraphic(null);"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"                setText(null);"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"            } else {"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"                setGraphic(book.getRoot());"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"            }"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":88,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":66,"-":22}},{"path":"src/main/java/seedu/address/commons/events/ui/BookPanelSelectionChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.ui;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.ui.BookCard;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":" * Represents a selection change in the Book List Panel"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":" */"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"public class BookPanelSelectionChangedEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    private final BookCard newSelection;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    public BookPanelSelectionChangedEvent(BookCard newSelection) {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"        this.newSelection \u003d newSelection;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitID":"-"},"content":"        return this.getClass().getSimpleName();"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    public BookCard getNewSelection() {"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"        return newSelection;"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"}"}],"authorContributionMap":{"qiu-siqi":14,"-":11}},{"path":"src/main/java/seedu/address/commons/events/network/ApiSearchRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Indicates a request to search for books using the Google Books API."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class ApiSearchRequestEvent extends BaseEvent {"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"    public final String searchParameters;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public ApiSearchRequestEvent(String searchParameters) {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        this.searchParameters \u003d searchParameters;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        return \"searching for: \" + searchParameters;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":19,"-":1}},{"path":"src/main/java/seedu/address/network/Network.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":" * The API of the Network component."},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"public interface Network {"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"     * Stops the Network component."},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    void stop();"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":12}},{"path":"src/main/java/seedu/address/commons/events/network/ApiBookDetailsRequestEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Indicates a request to obtain details for a book using the Google Books API."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class ApiBookDetailsRequestEvent extends BaseEvent {"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"    public final String bookId;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public ApiBookDetailsRequestEvent(String bookId) {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"        this.bookId \u003d bookId;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        return \"book details for: \" + bookId;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":19,"-":1}},{"path":"src/main/java/seedu/address/commons/events/network/ApiSearchResultEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Represents the results of a search for books using the Google Books API."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class ApiSearchResultEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final ResultOutcome outcome;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public final ReadOnlyBookShelf bookShelf;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    public ApiSearchResultEvent(ResultOutcome outcome, ReadOnlyBookShelf bookShelf) {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"        this.outcome \u003d outcome;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"        this.bookShelf \u003d bookShelf;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        if (outcome \u003d\u003d ResultOutcome.FAILURE) {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            return \"API failure\";"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        return \"number of books \" + bookShelf.getBookList().size();"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":25,"-":1}},{"path":"src/main/java/seedu/address/commons/events/model/BookShelfChangedEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.commons.events.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"/** Indicates the BookShelf in the model has changed */"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"public class BookShelfChangedEvent extends BaseEvent {"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"    public final ReadOnlyBookShelf data;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public BookShelfChangedEvent(ReadOnlyBookShelf data) {"},{"lineNumber":12,"author":{"gitID":"-"},"content":"        this.data \u003d data;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"        return \"number of books \" + data.getBookList().size();"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":11,"-":8}},{"path":"src/main/java/seedu/address/commons/events/network/ApiBookDetailsResultEvent.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.commons.events.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.BaseEvent;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Represents the results of a search for book details using the Google Books API."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class ApiBookDetailsResultEvent extends BaseEvent {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final ResultOutcome outcome;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public final Book book;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    public ApiBookDetailsResultEvent(ResultOutcome outcome, Book book) {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"        this.outcome \u003d outcome;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"        this.book \u003d book;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        if (outcome \u003d\u003d ResultOutcome.FAILURE) {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            return \"API failure\";"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        return \"book: \" + book;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":25,"-":1}},{"path":"src/main/java/seedu/address/network/api/google/BookDeserializer.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import com.fasterxml.jackson.core.JsonParser;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import com.fasterxml.jackson.databind.deser.std.StdDeserializer;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.util.BookDataUtil;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":" * Custom Jackson deserializer for deserializing JSON to book."},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"public class BookDeserializer extends StdDeserializer\u003cBook\u003e {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    BookDeserializer() {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this(null);"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    BookDeserializer(Class\u003c?\u003e vc) {"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"        super(vc);"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    public Book deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        JsonRoot root \u003d jp.readValueAs(JsonRoot.class);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        JsonVolumeInfo volumeInfo \u003d root.volumeInfo;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        return new Book(BookDataUtil.getAuthorSet(volumeInfo.authors), new Title(volumeInfo.title),"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"                BookDataUtil.getCategorySet(volumeInfo.categories), new Description(volumeInfo.description));"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    private static class JsonRoot {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        private int error \u003d 0;"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        private String id \u003d \"\";"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        private JsonVolumeInfo volumeInfo \u003d new JsonVolumeInfo();"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        // This should fail if the API returns an error, due to incompatible types."},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        public void setError(int error) {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"            this.error \u003d error;"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        public void setId(String id) {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"            this.id \u003d id;"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        public void setVolumeInfo(JsonVolumeInfo volumeInfo) {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"            this.volumeInfo \u003d volumeInfo;"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    private static class JsonVolumeInfo {"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        private String title \u003d \"\";"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        private String[] authors \u003d new String[0];"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        private String publisher \u003d \"\";"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        private String publishedDate \u003d \"\";"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        private String description \u003d \"\";"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        private String[] categories \u003d new String[0];"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        public void setTitle(String title) {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"            this.title \u003d title;"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        public void setAuthors(String[] authors) {"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"            this.authors \u003d authors;"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        public void setPublisher(String publisher) {"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"            this.publisher \u003d publisher;"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        public void setPublishedDate(String publishedDate) {"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"            this.publishedDate \u003d publishedDate;"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        public void setDescription(String description) {"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"            this.description \u003d description;"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        public void setCategories(String[] categories) {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"            this.categories \u003d categories;"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":89,"-":1}},{"path":"src/main/java/seedu/address/network/NetworkManager.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import org.asynchttpclient.AsyncHttpClient;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import org.asynchttpclient.Dsl;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiBookDetailsRequestEvent;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiBookDetailsResultEvent;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiSearchRequestEvent;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ApiSearchResultEvent;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.network.ResultOutcome;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.api.google.GoogleBooksApi;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":" * Provides networking functionality (making API calls)."},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":" *"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":" * No API methods are directly exposed on this class. To make an API call,"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":" * raise the corresponding *RequestEvent. To receive the results of the call,"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":" * handle the corresponding *ResultEvent."},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"public class NetworkManager extends ComponentManager implements Network {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(NetworkManager.class);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    private static final int CONNECTION_TIMEOUT_MILLIS \u003d 1000 * 5; // 5 seconds"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    private static final int READ_TIMEOUT_MILLIS \u003d 1000 * 5; // 5 seconds"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    private static final int REQUEST_TIMEOUT_MILLIS \u003d 1000 * 5; // 5 seconds"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    private final HttpClient httpClient;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    private final GoogleBooksApi googleBooksApi;"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public NetworkManager() {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        super();"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        AsyncHttpClient asyncHttpClient \u003d Dsl.asyncHttpClient(Dsl.config()"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"                .setConnectTimeout(CONNECTION_TIMEOUT_MILLIS)"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"                .setReadTimeout(READ_TIMEOUT_MILLIS)"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"                .setRequestTimeout(REQUEST_TIMEOUT_MILLIS));"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        httpClient \u003d new HttpClient(asyncHttpClient);"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi \u003d new GoogleBooksApi(httpClient);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    public void stop() {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        httpClient.close();"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    private void handleGoogleApiSearchRequestEvent(ApiSearchRequestEvent event) {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.searchBooks(event.searchParameters)"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"                .thenApply(bookShelf -\u003e {"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"                    raise(new ApiSearchResultEvent(ResultOutcome.SUCCESS, bookShelf));"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"                    return bookShelf;"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"                })"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"                .exceptionally(e -\u003e {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"                    logger.warning(\"Search request failed: \" + StringUtil.getDetails(e));"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"                    raise(new ApiSearchResultEvent(ResultOutcome.FAILURE, null));"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"                    return null;"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"                });"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    private void handleGoogleApiBookDetailsRequestEvent(ApiBookDetailsRequestEvent event) {"},{"lineNumber":69,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        googleBooksApi.getBookDetails(event.bookId)"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"                .thenApply(book -\u003e {"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"                    raise(new ApiBookDetailsResultEvent(ResultOutcome.SUCCESS, book));"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"                    return book;"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"                })"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"                .exceptionally(e -\u003e {"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"                    logger.warning(\"Book detail request failed: \" + StringUtil.getDetails(e));"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"                    raise(new ApiBookDetailsResultEvent(ResultOutcome.FAILURE, null));"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"                    return null;"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"                });"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":75,"-":6}},{"path":"src/main/java/seedu/address/network/api/google/JsonDeserializer.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletionException;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":" * Provides utilities to deserialize JSON responses."},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"public class JsonDeserializer {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDeserializer.class);"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private final ObjectMapper mapper;"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    JsonDeserializer() {"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        mapper \u003d new ObjectMapper().configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"        SimpleModule module \u003d new SimpleModule();"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        module.addDeserializer(Book.class, new BookDeserializer());"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        module.addDeserializer(BookShelf.class, new BookShelfDeserializer());"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        mapper.registerModule(module);"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"     * Converts the JSON string from Google Books API into a book."},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public Book convertJsonStringToBook(String json) {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"            return mapper.readValue(json, Book.class);"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"            logger.warning(\"Failed to convert JSON to book.\");"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"            throw new CompletionException(e);"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"     * Converts the JSON string from Google Books API into a book shelf."},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"    public ReadOnlyBookShelf convertJsonStringToBookShelf(String json) {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"            return mapper.readValue(json, BookShelf.class);"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        } catch (IOException e) {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"            logger.warning(\"Failed to convert JSON to book shelf.\");"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"            throw new CompletionException(e);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":53,"-":3}},{"path":"src/main/java/seedu/address/network/HttpResponse.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import org.asynchttpclient.Response;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * A wrapper around the Response class from async-http-client."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class HttpResponse {"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"    private final int statusCode;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    private final String contentType;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    private final String responseBody;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    public HttpResponse(int statusCode, String contentType, String responseBody) {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"        this.statusCode \u003d statusCode;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"        this.contentType \u003d contentType;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"        this.responseBody \u003d responseBody;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public HttpResponse(Response response) {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        this(response.getStatusCode(), response.getContentType(), response.getResponseBody());"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public int getStatusCode() {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        return statusCode;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    public String getContentType() {"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        return contentType;"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    public String getResponseBody() {"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        return responseBody;"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":35}},{"path":"src/main/java/seedu/address/logic/Logic.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"-"},"content":" * API of the Logic component"},{"lineNumber":11,"author":{"gitID":"-"},"content":" */"},{"lineNumber":12,"author":{"gitID":"-"},"content":"public interface Logic {"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"-"},"content":"     * Executes the command and returns the result."},{"lineNumber":15,"author":{"gitID":"-"},"content":"     * @param commandText The command as entered by the user."},{"lineNumber":16,"author":{"gitID":"-"},"content":"     * @return the result of the command execution."},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * @throws CommandException If an error occurs during command execution."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     * @throws ParseException If an error occurs during parsing."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    /** Returns an unmodifiable view of the filtered list of books */"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    /** Returns the list of input entered by the user, encapsulated in a {@code ListElementPointer} object */"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    ListElementPointer getHistorySnapshot();"},{"lineNumber":27,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitID":"-"},"content":" * Parses input arguments and creates a new AddCommand object"},{"lineNumber":22,"author":{"gitID":"-"},"content":" */"},{"lineNumber":23,"author":{"gitID":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {"},{"lineNumber":24,"author":{"gitID":"-"},"content":""},{"lineNumber":25,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitID":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand"},{"lineNumber":27,"author":{"gitID":"-"},"content":"     * and returns an AddCommand object for execution."},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":29,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public AddCommand parse(String args) throws ParseException {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_AUTHOR, PREFIX_CATEGORY, PREFIX_DESCRIPTION);"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_AUTHOR, PREFIX_CATEGORY, PREFIX_DESCRIPTION)"},{"lineNumber":35,"author":{"gitID":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE)).get();"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        Set\u003cAuthor\u003e authorSet \u003d ParserUtil.parseAuthors(argMultimap.getAllValues(PREFIX_AUTHOR));"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        Set\u003cCategory\u003e categorySet \u003d ParserUtil.parseCategories(argMultimap.getAllValues(PREFIX_CATEGORY));"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION)).get();"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        Book book \u003d new Book(authorSet, title, categorySet, description);"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        return new AddCommand(book);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"},{"lineNumber":51,"author":{"gitID":"-"},"content":"     * {@code ArgumentMultimap}."},{"lineNumber":52,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitID":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":54,"author":{"gitID":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":17,"-":40}},{"path":"src/main/java/seedu/address/network/api/google/BookShelfDeserializer.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import java.util.logging.Logger;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import com.fasterxml.jackson.core.JsonParser;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import com.fasterxml.jackson.databind.deser.std.StdDeserializer;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.util.BookDataUtil;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":" * Custom Jackson deserializer for deserializing JSON to book shelf."},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"public class BookShelfDeserializer extends StdDeserializer\u003cBookShelf\u003e {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(BookShelfDeserializer.class);"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    BookShelfDeserializer() {"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        this(null);"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    BookShelfDeserializer(Class\u003c?\u003e vc) {"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        super(vc);"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    public BookShelf deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        JsonRoot root \u003d jp.readValueAs(JsonRoot.class);"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d new BookShelf();"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        for (JsonVolume volume : root.items) {"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"            convertAndAddBook(bookShelf, volume);"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelf;"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    /** Converts a JsonVolume into a Book, and add it into the book shelf. */"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    private void convertAndAddBook(BookShelf bookShelf, JsonVolume volume) {"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        JsonVolumeInfo volumeInfo \u003d volume.volumeInfo;"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        Book book \u003d new Book(BookDataUtil.getAuthorSet(volumeInfo.authors), new Title(volumeInfo.title),"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"                BookDataUtil.getCategorySet(volumeInfo.categories), new Description(volumeInfo.description));"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"            bookShelf.addBook(book);"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        } catch (DuplicateBookException e) {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"            logger.warning(\"Found duplicate book when deserializing: \" + book);"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    private static class JsonRoot {"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        private int error \u003d 0;"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        private int totalItems \u003d 0;"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        private JsonVolume[] items \u003d new JsonVolume[0];"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        // This should fail if the API returns an error, due to incompatible types."},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        public void setError(int error) {"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"            this.error \u003d error;"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        public void setTotalItems(int totalItems) {"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"            this.totalItems \u003d totalItems;"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        public void setItems(JsonVolume[] items) {"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"            this.items \u003d items;"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    private static class JsonVolume {"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"        private String id \u003d \"\";"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        private JsonVolumeInfo volumeInfo \u003d new JsonVolumeInfo();"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        public void setId(String id) {"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"            this.id \u003d id;"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        public void setVolumeInfo(JsonVolumeInfo volumeInfo) {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"            this.volumeInfo \u003d volumeInfo;"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"    /** Temporary data holder used for deserialization. */"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"    private static class JsonVolumeInfo {"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"        private String title \u003d \"\";"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"        private String[] authors \u003d new String[0];"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        private String publisher \u003d \"\";"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        private String publishedDate \u003d \"\";"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        private String description \u003d \"\";"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        private String[] categories \u003d new String[0];"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"        public void setTitle(String title) {"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"            this.title \u003d title;"},{"lineNumber":101,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":103,"author":{"gitID":"takuyakanbr"},"content":"        public void setAuthors(String[] authors) {"},{"lineNumber":104,"author":{"gitID":"takuyakanbr"},"content":"            this.authors \u003d authors;"},{"lineNumber":105,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"        public void setPublisher(String publisher) {"},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"            this.publisher \u003d publisher;"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"        public void setPublishedDate(String publishedDate) {"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"            this.publishedDate \u003d publishedDate;"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"        public void setDescription(String description) {"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"            this.description \u003d description;"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"        public void setCategories(String[] categories) {"},{"lineNumber":120,"author":{"gitID":"takuyakanbr"},"content":"            this.categories \u003d categories;"},{"lineNumber":121,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":122,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":123,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":124,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":123,"-":1}},{"path":"src/main/java/seedu/address/network/api/google/GoogleBooksApi.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network.api.google;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletionException;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import java.util.function.Function;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.network.HttpClient;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":" * Provides access to the Google Books API."},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"public class GoogleBooksApi {"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    protected static final String URL_SEARCH_BOOKS \u003d"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"            \"https://www.googleapis.com/books/v1/volumes?maxResults\u003d30\u0026printType\u003dbooks\u0026q\u003d%s\";"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    protected static final String URL_BOOK_DETAILS \u003d \"https://www.googleapis.com/books/v1/volumes/%s\";"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    private static final String CONTENT_TYPE_JSON \u003d \"application/json\";"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    private static final int HTTP_STATUS_OK \u003d 200;"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private final HttpClient httpClient;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private final JsonDeserializer deserializer;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public GoogleBooksApi(HttpClient httpClient) {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        this.httpClient \u003d httpClient;"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        this.deserializer \u003d new JsonDeserializer();"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     * Searches for books on Google Books that matches a set of parameters."},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"     * @param parameters search parameters."},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"     * @return a CompletableFuture that resolves to a ReadOnlyBookShelf."},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public CompletableFuture\u003cReadOnlyBookShelf\u003e searchBooks(String parameters) {"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        String requestUrl \u003d String.format(URL_SEARCH_BOOKS, StringUtil.urlEncode(parameters));"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        return executeGetAndApply(requestUrl, deserializer::convertJsonStringToBookShelf);"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"     * Retrieves the details of a single book on Google Books."},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"     * @param bookId the ID of the book on Google Books."},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"     * @return a CompletableFuture that resolves to a Book."},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    public CompletableFuture\u003cBook\u003e getBookDetails(String bookId) {"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        String requestUrl \u003d String.format(URL_BOOK_DETAILS, StringUtil.urlEncode(bookId));"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        return executeGetAndApply(requestUrl, deserializer::convertJsonStringToBook);"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"     * Asynchronously executes a HTTP GET request to the specified url and"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"     * applies the specified function to transform the resulting response body."},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    private \u003cT\u003e CompletableFuture\u003cT\u003e executeGetAndApply(String url, Function\u003cString, ? extends T\u003e fn) {"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        return httpClient"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"                .makeGetRequest(url)"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"                .thenApply(response -\u003e {"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"                    if (!response.getContentType().startsWith(CONTENT_TYPE_JSON)) {"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"                        throw new CompletionException("},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"                                new IOException(\"Unexpected content type \" + response.getContentType()));"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"                    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"                    if (response.getStatusCode() !\u003d HTTP_STATUS_OK) {"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"                        throw new CompletionException("},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"                                new IOException(\"Get request failed with status code \" + response.getStatusCode()));"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"                    }"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"                    return response.getResponseBody();"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"                })"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"                .thenApply(fn);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":74}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Collection;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":16,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitID":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes."},{"lineNumber":20,"author":{"gitID":"-"},"content":" * {@code ParserUtil} contains methods that take in {@code Optional} as parameters. However, it goes against Java\u0027s"},{"lineNumber":21,"author":{"gitID":"-"},"content":" * convention (see https://stackoverflow.com/a/39005452) as {@code Optional} should only be used a return type."},{"lineNumber":22,"author":{"gitID":"-"},"content":" * Justification: The methods in concern receive {@code Optional} return values from other methods as parameters and"},{"lineNumber":23,"author":{"gitID":"-"},"content":" * return {@code Optional} values based on whether the parameters were present. Therefore, it is redundant to unwrap the"},{"lineNumber":24,"author":{"gitID":"-"},"content":" * initial {@code Optional} before passing to {@code ParserUtil} as a parameter and then re-wrap it into an"},{"lineNumber":25,"author":{"gitID":"-"},"content":" * {@code Optional} return value inside {@code ParserUtil} methods."},{"lineNumber":26,"author":{"gitID":"-"},"content":" */"},{"lineNumber":27,"author":{"gitID":"-"},"content":"public class ParserUtil {"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_INSUFFICIENT_PARTS \u003d \"Number of parts must be more than 1.\";"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"},{"lineNumber":34,"author":{"gitID":"-"},"content":"     * trimmed."},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if the specified index is invalid (not non-zero unsigned integer)."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws IllegalValueException {"},{"lineNumber":38,"author":{"gitID":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"            throw new IllegalValueException(MESSAGE_INVALID_INDEX);"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitID":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"},{"lineNumber":43,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code String title} into a {@code Title}."},{"lineNumber":47,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":48,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":49,"author":{"gitID":"qiu-siqi"},"content":"    public static Title parseTitle(String title) {"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(title);"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        String trimmedTitle \u003d title.trim();"},{"lineNumber":52,"author":{"gitID":"qiu-siqi"},"content":"        return new Title(trimmedTitle);"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":55,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code Optional\u003cString\u003e title} into an {@code Optional\u003cTitle\u003e} if {@code title} is present."},{"lineNumber":57,"author":{"gitID":"-"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":58,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"qiu-siqi"},"content":"    public static Optional\u003cTitle\u003e parseTitle(Optional\u003cString\u003e title) {"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(title);"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        return title.isPresent() ? Optional.of(parseTitle(title.get())) : Optional.empty();"},{"lineNumber":62,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code String author} into a {@code Author}."},{"lineNumber":66,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":67,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":68,"author":{"gitID":"qiu-siqi"},"content":"    public static Author parseAuthor(String author) {"},{"lineNumber":69,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(author);"},{"lineNumber":70,"author":{"gitID":"qiu-siqi"},"content":"        String trimmedAuthor \u003d author.trim();"},{"lineNumber":71,"author":{"gitID":"qiu-siqi"},"content":"        return new Author(trimmedAuthor);"},{"lineNumber":72,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":75,"author":{"gitID":"qiu-siqi"},"content":"     * Parses {@code Collection\u003cString\u003e authors} into a {@code Set\u003cAuthor\u003e}."},{"lineNumber":76,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":77,"author":{"gitID":"qiu-siqi"},"content":"    public static Set\u003cAuthor\u003e parseAuthors(Collection\u003cString\u003e authors) {"},{"lineNumber":78,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(authors);"},{"lineNumber":79,"author":{"gitID":"qiu-siqi"},"content":"        final Set\u003cAuthor\u003e authorSet \u003d new HashSet\u003c\u003e();"},{"lineNumber":80,"author":{"gitID":"qiu-siqi"},"content":"        for (String author : authors) {"},{"lineNumber":81,"author":{"gitID":"qiu-siqi"},"content":"            authorSet.add(parseAuthor(author));"},{"lineNumber":82,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":83,"author":{"gitID":"qiu-siqi"},"content":"        return authorSet;"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":87,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code String category} into a {@code Category}."},{"lineNumber":88,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"    public static Category parseCategory(String category) {"},{"lineNumber":91,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(category);"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"        String trimmedCategory \u003d category.trim();"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"        return new Category(trimmedCategory);"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":95,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":97,"author":{"gitID":"qiu-siqi"},"content":"     * Parses {@code Collection\u003cString\u003e categories} into a {@code Set\u003cCategory\u003e}."},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"    public static Set\u003cCategory\u003e parseCategories(Collection\u003cString\u003e categories) {"},{"lineNumber":100,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(categories);"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"        final Set\u003cCategory\u003e categorySet \u003d new HashSet\u003c\u003e();"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"        for (String category : categories) {"},{"lineNumber":103,"author":{"gitID":"qiu-siqi"},"content":"            categorySet.add(parseCategory(category));"},{"lineNumber":104,"author":{"gitID":"qiu-siqi"},"content":"        }"},{"lineNumber":105,"author":{"gitID":"qiu-siqi"},"content":"        return categorySet;"},{"lineNumber":106,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":108,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":109,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code String description} into a {@code Description}."},{"lineNumber":110,"author":{"gitID":"-"},"content":"     * Leading and trailing whitespaces will be trimmed."},{"lineNumber":111,"author":{"gitID":"qiu-siqi"},"content":"     */"},{"lineNumber":112,"author":{"gitID":"qiu-siqi"},"content":"    public static Description parseDescription(String description) {"},{"lineNumber":113,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(description);"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        String trimmedDescription \u003d description.trim();"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"        return new Description(trimmedDescription);"},{"lineNumber":116,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":118,"author":{"gitID":"qiu-siqi"},"content":"    /**"},{"lineNumber":119,"author":{"gitID":"qiu-siqi"},"content":"     * Parses a {@code Optional\u003cString\u003e description} into an {@code Optional\u003cDescription\u003e}"},{"lineNumber":120,"author":{"gitID":"qiu-siqi"},"content":"     * if {@code description} is present."},{"lineNumber":121,"author":{"gitID":"-"},"content":"     * See header comment of this class regarding the use of {@code Optional} parameters."},{"lineNumber":122,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":123,"author":{"gitID":"qiu-siqi"},"content":"    public static Optional\u003cDescription\u003e parseDescription(Optional\u003cString\u003e description) {"},{"lineNumber":124,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(description);"},{"lineNumber":125,"author":{"gitID":"qiu-siqi"},"content":"        return description.isPresent() ? Optional.of(parseDescription(description.get())) : Optional.empty();"},{"lineNumber":126,"author":{"gitID":"qiu-siqi"},"content":"    }"},{"lineNumber":127,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":79,"-":49}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"},{"lineNumber":5,"author":{"gitID":"-"},"content":" */"},{"lineNumber":6,"author":{"gitID":"-"},"content":"public class CliSyntax {"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"    /* Prefix definitions */"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"    public static final Prefix PREFIX_AUTHOR \u003d new Prefix(\"a/\");"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    public static final Prefix PREFIX_ISBN \u003d new Prefix(\"i/\");"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"t/\");"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"takuyakanbr":3,"-":8}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":" * Deletes a book identified using it\u0027s last displayed index from the book shelf."},{"lineNumber":16,"author":{"gitID":"-"},"content":" */"},{"lineNumber":17,"author":{"gitID":"-"},"content":"public class DeleteCommand extends UndoableCommand {"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"            + \": Deletes the book identified by the index number used in the last book listing.\\n\""},{"lineNumber":23,"author":{"gitID":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\""},{"lineNumber":24,"author":{"gitID":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_DELETE_BOOK_SUCCESS \u003d \"Deleted Book: %1$s\";"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    private final Index targetIndex;"},{"lineNumber":29,"author":{"gitID":"-"},"content":""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"    private Book bookToDelete;"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    public DeleteCommand(Index targetIndex) {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() {"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(bookToDelete);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"            model.deleteBook(bookToDelete);"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        } catch (BookNotFoundException pnfe) {"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"            throw new AssertionError(\"The target book cannot be missing\");"},{"lineNumber":44,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete));"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBook\u003e lastShownList \u003d model.getFilteredBookList();"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"qiu-siqi"},"content":"        bookToDelete \u003d lastShownList.get(targetIndex.getZeroBased());"},{"lineNumber":58,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":61,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":63,"author":{"gitID":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls"},{"lineNumber":64,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.targetIndex.equals(((DeleteCommand) other).targetIndex) // state check"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(this.bookToDelete, ((DeleteCommand) other).bookToDelete));"},{"lineNumber":66,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":15,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":" * Lists all books in the book shelf to the user."},{"lineNumber":7,"author":{"gitID":"-"},"content":" */"},{"lineNumber":8,"author":{"gitID":"-"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all books\";"},{"lineNumber":13,"author":{"gitID":"-"},"content":""},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":17,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"-":16}},{"path":"src/main/java/seedu/address/network/HttpClient.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.network;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import org.asynchttpclient.AsyncHttpClient;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" * A wrapper around the AsyncHttpClient class from async-http-client."},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"public class HttpClient {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HttpClient.class);"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    private final AsyncHttpClient asyncHttpClient;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public HttpClient(AsyncHttpClient asyncHttpClient) {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        this.asyncHttpClient \u003d asyncHttpClient;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"     * Asynchronously executes a HTTP GET request to the specified url."},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public CompletableFuture\u003cHttpResponse\u003e makeGetRequest(String url) {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        return asyncHttpClient"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"                .prepareGet(url)"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"                .execute()"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"                .toCompletableFuture()"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                .thenApply(HttpResponse::new);"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"     * Stops and closes the underlying AsyncHttpClient."},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public void close() {"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"            if (!asyncHttpClient.isClosed()) {"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"                asyncHttpClient.close();"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"            }"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        } catch (IOException e) {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"            logger.warning(\"Failed to shut down AsyncHttpClient.\");"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":47}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * Clears the address book."},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class ClearCommand extends UndoableCommand {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Book shelf has been cleared!\";"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() {"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        requireNonNull(model);"},{"lineNumber":19,"author":{"gitID":"qiu-siqi"},"content":"        model.resetData(new BookShelf());"},{"lineNumber":20,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":3,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.logic.CommandHistory;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.logic.UndoRedoStack;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed."},{"lineNumber":11,"author":{"gitID":"-"},"content":" */"},{"lineNumber":12,"author":{"gitID":"-"},"content":"public abstract class Command {"},{"lineNumber":13,"author":{"gitID":"-"},"content":"    protected Model model;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    protected CommandHistory history;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"    protected UndoRedoStack undoRedoStack;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitID":"qiu-siqi"},"content":"     * Constructs a feedback message to summarise an operation that displayed a listing of books."},{"lineNumber":19,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":20,"author":{"gitID":"-"},"content":"     * @param displaySize used to generate summary"},{"lineNumber":21,"author":{"gitID":"qiu-siqi"},"content":"     * @return summary message for books displayed"},{"lineNumber":22,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"    public static String getMessageForBookListShownSummary(int displaySize) {"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"        return String.format(Messages.MESSAGE_BOOKS_LISTED_OVERVIEW, displaySize);"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * Executes the command and returns the result message."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":30,"author":{"gitID":"-"},"content":"     * @return feedback message of the operation result for display"},{"lineNumber":31,"author":{"gitID":"-"},"content":"     * @throws CommandException If an error occurs during command execution."},{"lineNumber":32,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public abstract CommandResult execute() throws CommandException;"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * Provides any needed dependencies to the command."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * Commands making use of any of these should override this method to gain"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     * access to the dependencies."},{"lineNumber":39,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public void setData(Model model, CommandHistory history, UndoRedoStack undoRedoStack) {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        this.model \u003d model;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":4,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AUTHOR;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;"},{"lineNumber":6,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;"},{"lineNumber":7,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":11,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":" * Adds a book to the book shelf."},{"lineNumber":15,"author":{"gitID":"-"},"content":" */"},{"lineNumber":16,"author":{"gitID":"-"},"content":"public class AddCommand extends UndoableCommand {"},{"lineNumber":17,"author":{"gitID":"-"},"content":""},{"lineNumber":18,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a book to the book shelf. \""},{"lineNumber":21,"author":{"gitID":"-"},"content":"            + \"Parameters: \""},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"            + PREFIX_TITLE + \"TITLE \""},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"            + PREFIX_AUTHOR + \"AUTHOR... \""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"            + PREFIX_CATEGORY + \"CATEGORY... \""},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION\\n\""},{"lineNumber":26,"author":{"gitID":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \""},{"lineNumber":27,"author":{"gitID":"qiu-siqi"},"content":"            + PREFIX_TITLE + \"Nudge \""},{"lineNumber":28,"author":{"gitID":"qiu-siqi"},"content":"            + PREFIX_AUTHOR + \"Cass Sunstein \""},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"            + PREFIX_AUTHOR + \"Richard Thaler \""},{"lineNumber":30,"author":{"gitID":"qiu-siqi"},"content":"            + PREFIX_CATEGORY + \"Psychology \""},{"lineNumber":31,"author":{"gitID":"qiu-siqi"},"content":"            + PREFIX_DESCRIPTION + \"Nudge is about how we make choices and \""},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"            + \"how we can make better ones. \";"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New book added: %1$s\";"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_DUPLICATE_BOOK \u003d \"This book already exists in the book shelf\";"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"    private final Book toAdd;"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"     * Creates an AddCommand to add the specified {@code Book}"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"    public AddCommand(Book book) {"},{"lineNumber":43,"author":{"gitID":"qiu-siqi"},"content":"        requireNonNull(book);"},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"        toAdd \u003d book;"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        requireNonNull(model);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":51,"author":{"gitID":"qiu-siqi"},"content":"            model.addBook(toAdd);"},{"lineNumber":52,"author":{"gitID":"-"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));"},{"lineNumber":53,"author":{"gitID":"qiu-siqi"},"content":"        } catch (DuplicateBookException e) {"},{"lineNumber":54,"author":{"gitID":"qiu-siqi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BOOK);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":62,"author":{"gitID":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls"},{"lineNumber":63,"author":{"gitID":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":28,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/SelectCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":10,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":" * Selects a book identified using it\u0027s last displayed index from the book shelf."},{"lineNumber":14,"author":{"gitID":"-"},"content":" */"},{"lineNumber":15,"author":{"gitID":"-"},"content":"public class SelectCommand extends Command {"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"select\";"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"            + \": Selects the book identified by the index number used in the last book listing.\\n\""},{"lineNumber":21,"author":{"gitID":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\""},{"lineNumber":22,"author":{"gitID":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_SELECT_BOOK_SUCCESS \u003d \"Selected Book: %1$s\";"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"-"},"content":"    private final Index targetIndex;"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public SelectCommand(Index targetIndex) {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        this.targetIndex \u003d targetIndex;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    public CommandResult execute() throws CommandException {"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"        List\u003cBook\u003e lastShownList \u003d model.getFilteredBookList();"},{"lineNumber":36,"author":{"gitID":"-"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":38,"author":{"gitID":"qiu-siqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":40,"author":{"gitID":"-"},"content":""},{"lineNumber":41,"author":{"gitID":"-"},"content":"        EventsCenter.getInstance().post(new JumpToListRequestEvent(targetIndex));"},{"lineNumber":42,"author":{"gitID":"qiu-siqi"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_BOOK_SUCCESS, targetIndex.getOneBased()));"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"-"},"content":""},{"lineNumber":46,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":49,"author":{"gitID":"-"},"content":"                || (other instanceof SelectCommand // instanceof handles nulls"},{"lineNumber":50,"author":{"gitID":"-"},"content":"                \u0026\u0026 this.targetIndex.equals(((SelectCommand) other).targetIndex)); // state check"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":7,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"-"},"content":" * Terminates the program."},{"lineNumber":8,"author":{"gitID":"-"},"content":" */"},{"lineNumber":9,"author":{"gitID":"-"},"content":"public class ExitCommand extends Command {"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";"},{"lineNumber":12,"author":{"gitID":"-"},"content":""},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Bibliotek as requested ...\";"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public CommandResult execute() {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"        EventsCenter.getInstance().post(new ExitAppRequestEvent());"},{"lineNumber":18,"author":{"gitID":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT);"},{"lineNumber":19,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitID":"-"},"content":""},{"lineNumber":21,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"-":20}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.parser.BookShelfParser;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitID":"-"},"content":" * The main LogicManager of the app."},{"lineNumber":18,"author":{"gitID":"-"},"content":" */"},{"lineNumber":19,"author":{"gitID":"-"},"content":"public class LogicManager extends ComponentManager implements Logic {"},{"lineNumber":20,"author":{"gitID":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private final Model model;"},{"lineNumber":23,"author":{"gitID":"-"},"content":"    private final CommandHistory history;"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private final BookShelfParser bookShelfParser;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    private final UndoRedoStack undoRedoStack;"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    public LogicManager(Model model) {"},{"lineNumber":28,"author":{"gitID":"-"},"content":"        this.model \u003d model;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        history \u003d new CommandHistory();"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        bookShelfParser \u003d new BookShelfParser();"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        undoRedoStack \u003d new UndoRedoStack();"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"            Command command \u003d bookShelfParser.parseCommand(commandText);"},{"lineNumber":39,"author":{"gitID":"-"},"content":"            command.setData(model, history, undoRedoStack);"},{"lineNumber":40,"author":{"gitID":"-"},"content":"            CommandResult result \u003d command.execute();"},{"lineNumber":41,"author":{"gitID":"-"},"content":"            undoRedoStack.push(command);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"            return result;"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        } finally {"},{"lineNumber":44,"author":{"gitID":"-"},"content":"            history.add(commandText);"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {"},{"lineNumber":50,"author":{"gitID":"qiu-siqi"},"content":"        return model.getFilteredBookList();"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public ListElementPointer getHistorySnapshot() {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        return new ListElementPointer(history.getHistory());"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"takuyakanbr":5,"-":50}},{"path":"src/main/java/seedu/address/storage/Storage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"-"},"content":" * API of the Storage component"},{"lineNumber":14,"author":{"gitID":"-"},"content":" */"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"public interface Storage extends BookShelfStorage, UserPrefsStorage {"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":21,"author":{"gitID":"-"},"content":"    void saveUserPrefs(UserPrefs userPrefs) throws IOException;"},{"lineNumber":22,"author":{"gitID":"-"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    String getBookShelfFilePath();"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    Optional\u003cReadOnlyBookShelf\u003e readBookShelf() throws DataConversionException, IOException;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    void saveBookShelf(ReadOnlyBookShelf bookShelf) throws IOException;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     * Saves the current version of the Book Shelf to the hard disk. Creates a new file if it is missing."},{"lineNumber":34,"author":{"gitID":"-"},"content":"     * Raises {@link DataSavingExceptionEvent} if there was an error during saving."},{"lineNumber":35,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    void handleBookShelfChangedEvent(BookShelfChangedEvent bsce);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":16,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/UndoableCommand.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"qiu-siqi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_BOOKS;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":8,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":9,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"-"},"content":" * Represents a command which can be undone and redone."},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public abstract class UndoableCommand extends Command {"},{"lineNumber":15,"author":{"gitID":"qiu-siqi"},"content":"    private ReadOnlyBookShelf previousBookShelf;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    protected abstract CommandResult executeUndoableCommand() throws CommandException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"qiu-siqi"},"content":"     * Stores the current state of {@code model#bookShelf}."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":22,"author":{"gitID":"qiu-siqi"},"content":"    private void saveBookShelfSnapshot() {"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        requireNonNull(model);"},{"lineNumber":24,"author":{"gitID":"qiu-siqi"},"content":"        this.previousBookShelf \u003d new BookShelf(model.getBookShelf());"},{"lineNumber":25,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * This method is called before the execution of {@code UndoableCommand}."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     * {@code UndoableCommand}s that require this preprocessing step should override this method."},{"lineNumber":30,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {}"},{"lineNumber":32,"author":{"gitID":"-"},"content":""},{"lineNumber":33,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"     * Reverts the BookShelf to the state before this command"},{"lineNumber":35,"author":{"gitID":"qiu-siqi"},"content":"     * was executed and updates the filtered book list to"},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"     * show all books."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    protected final void undo() {"},{"lineNumber":39,"author":{"gitID":"qiu-siqi"},"content":"        requireAllNonNull(model, previousBookShelf);"},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"        model.resetData(previousBookShelf);"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"     * Executes the command and updates the filtered book"},{"lineNumber":46,"author":{"gitID":"qiu-siqi"},"content":"     * list to show all books."},{"lineNumber":47,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    protected final void redo() {"},{"lineNumber":49,"author":{"gitID":"-"},"content":"        requireNonNull(model);"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            executeUndoableCommand();"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        } catch (CommandException ce) {"},{"lineNumber":53,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"The command has been successfully executed previously; \""},{"lineNumber":54,"author":{"gitID":"-"},"content":"                    + \"it should not fail now\");"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"qiu-siqi"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public final CommandResult execute() throws CommandException {"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"        saveBookShelfSnapshot();"},{"lineNumber":62,"author":{"gitID":"-"},"content":"        preprocessUndoableCommand();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        return executeUndoableCommand();"},{"lineNumber":64,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":17,"-":48}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":16,"author":{"gitID":"-"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * Manages storage of AddressBook data in local storage."},{"lineNumber":19,"author":{"gitID":"-"},"content":" */"},{"lineNumber":20,"author":{"gitID":"-"},"content":"public class StorageManager extends ComponentManager implements Storage {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    private BookShelfStorage bookShelfStorage;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private UserPrefsStorage userPrefsStorage;"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    public StorageManager(BookShelfStorage bookShelfStorage, UserPrefsStorage userPrefsStorage) {"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"        super();"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        this.bookShelfStorage \u003d bookShelfStorage;"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"-"},"content":"    public String getUserPrefsFilePath() {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();"},{"lineNumber":37,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"-"},"content":""},{"lineNumber":39,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        return userPrefsStorage.readUserPrefs();"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public void saveUserPrefs(UserPrefs userPrefs) throws IOException {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BookShelf methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    public String getBookShelfFilePath() {"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelfStorage.getBookShelfFilePath();"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readBookShelf() throws DataConversionException, IOException {"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        return readBookShelf(bookShelfStorage.getBookShelfFilePath());"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readBookShelf(String filePath) throws DataConversionException, IOException {"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelfStorage.readBookShelf(filePath);"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf(ReadOnlyBookShelf bookShelf) throws IOException {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        saveBookShelf(bookShelf, bookShelfStorage.getBookShelfFilePath());"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) throws IOException {"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        bookShelfStorage.saveBookShelf(bookShelf, filePath);"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"    @Subscribe"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    public void handleBookShelfChangedEvent(BookShelfChangedEvent event) {"},{"lineNumber":81,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event, \"Local data changed, saving to file\"));"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"            saveBookShelf(event.data);"},{"lineNumber":84,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":85,"author":{"gitID":"-"},"content":"            raise(new DataSavingExceptionEvent(e));"},{"lineNumber":86,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"-"},"content":""},{"lineNumber":89,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":37,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/BookShelfParser.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ClearCommand;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.Command;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.DeleteCommand;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.ExitCommand;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HelpCommand;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.ListCommand;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.RedoCommand;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.logic.commands.SelectCommand;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.logic.commands.UndoCommand;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitID":"-"},"content":" * Parses user input."},{"lineNumber":24,"author":{"gitID":"-"},"content":" */"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"public class BookShelfParser {"},{"lineNumber":26,"author":{"gitID":"-"},"content":""},{"lineNumber":27,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"-"},"content":"     * Used for initial separation of command word and args."},{"lineNumber":29,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"-"},"content":"     * Parses user input into command for execution."},{"lineNumber":34,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * @param userInput full user input string"},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * @return the command based on the user input"},{"lineNumber":37,"author":{"gitID":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":38,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {"},{"lineNumber":40,"author":{"gitID":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"},{"lineNumber":41,"author":{"gitID":"-"},"content":"        if (!matcher.matches()) {"},{"lineNumber":42,"author":{"gitID":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");"},{"lineNumber":47,"author":{"gitID":"qiu-siqi"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"        switch (commandWord) {"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"-"},"content":"        case AddCommand.COMMAND_WORD:"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            return new AddCommandParser().parse(arguments);"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"        case ClearCommand.COMMAND_WORD:"},{"lineNumber":54,"author":{"gitID":"-"},"content":"            return new ClearCommand();"},{"lineNumber":55,"author":{"gitID":"-"},"content":""},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        case DeleteCommand.COMMAND_WORD:"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"            return new DeleteCommandParser().parse(arguments);"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        case ExitCommand.COMMAND_WORD:"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            return new ExitCommand();"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        case HelpCommand.COMMAND_WORD:"},{"lineNumber":63,"author":{"gitID":"-"},"content":"            return new HelpCommand();"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"-"},"content":"        case HistoryCommand.COMMAND_WORD:"},{"lineNumber":66,"author":{"gitID":"-"},"content":"            return new HistoryCommand();"},{"lineNumber":67,"author":{"gitID":"-"},"content":""},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        case ListCommand.COMMAND_WORD:"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"            return new ListCommand();"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        case SelectCommand.COMMAND_WORD:"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"            return new SelectCommandParser().parse(arguments);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":74,"author":{"gitID":"-"},"content":"        case UndoCommand.COMMAND_WORD:"},{"lineNumber":75,"author":{"gitID":"-"},"content":"            return new UndoCommand();"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        case RedoCommand.COMMAND_WORD:"},{"lineNumber":78,"author":{"gitID":"-"},"content":"            return new RedoCommand();"},{"lineNumber":79,"author":{"gitID":"-"},"content":""},{"lineNumber":80,"author":{"gitID":"-"},"content":"        default:"},{"lineNumber":81,"author":{"gitID":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"},{"lineNumber":82,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":83,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitID":"-"},"content":""},{"lineNumber":85,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"takuyakanbr":11,"-":72}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedAuthor.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlValue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" * JAXB-friendly adapted version of the Author."},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"public class XmlAdaptedAuthor {"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    @XmlValue"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    private String authorName;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs an XmlAdaptedAuthor."},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * This is the no-arg constructor that is required by JAXB."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedAuthor() {}"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code XmlAdaptedAuthor} with the given {@code authorName}."},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedAuthor(String authorName) {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        this.authorName \u003d authorName;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     * Converts a given Author into this class for JAXB use."},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"     * @param source future changes to this will not affect the created."},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedAuthor(Author source) {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        authorName \u003d source.fullName;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"     * Converts this jaxb-friendly adapted author object into the model\u0027s Author object."},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    public Author toModelType() {"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        return new Author(authorName);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof XmlAdaptedAuthor)) {"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        return authorName.equals(((XmlAdaptedAuthor) other).authorName);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":42,"-":14}},{"path":"src/main/java/seedu/address/storage/BookShelfStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":" * Represents a storage for {@link seedu.address.model.BookShelf}."},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"public interface BookShelfStorage {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     * Returns the file path of the data file."},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    String getBookShelfFilePath();"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"     * Returns BookShelf data as a {@link ReadOnlyBookShelf}."},{"lineNumber":21,"author":{"gitID":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found."},{"lineNumber":22,"author":{"gitID":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format."},{"lineNumber":23,"author":{"gitID":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage."},{"lineNumber":24,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    Optional\u003cReadOnlyBookShelf\u003e readBookShelf() throws DataConversionException, IOException;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"     * @see #getBookShelfFilePath()"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    Optional\u003cReadOnlyBookShelf\u003e readBookShelf(String filePath) throws DataConversionException, IOException;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     * Saves the given {@link ReadOnlyBookShelf} to the storage."},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"     * @param bookShelf cannot be null."},{"lineNumber":35,"author":{"gitID":"-"},"content":"     * @throws IOException if there was any problem writing to the file."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    void saveBookShelf(ReadOnlyBookShelf bookShelf) throws IOException;"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     * @see #saveBookShelf(ReadOnlyBookShelf)"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) throws IOException;"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":32,"-":12}},{"path":"src/main/java/seedu/address/storage/XmlFileStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import javax.xml.bind.JAXBException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.XmlUtil;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" * Stores bookshelf data in an XML file"},{"lineNumber":13,"author":{"gitID":"-"},"content":" */"},{"lineNumber":14,"author":{"gitID":"-"},"content":"public class XmlFileStorage {"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     * Saves the given bookshelf data to the specified file."},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public static void saveDataToFile(File file, XmlSerializableBookShelf bookShelf)"},{"lineNumber":20,"author":{"gitID":"-"},"content":"            throws FileNotFoundException {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            XmlUtil.saveDataToFile(file, bookShelf);"},{"lineNumber":23,"author":{"gitID":"-"},"content":"        } catch (JAXBException e) {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"            throw new AssertionError(\"Unexpected exception \" + e.getMessage());"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     * Returns book shelf in the file or an empty book shelf."},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    public static XmlSerializableBookShelf loadDataFromSaveFile(File file) throws DataConversionException,"},{"lineNumber":32,"author":{"gitID":"-"},"content":"            FileNotFoundException {"},{"lineNumber":33,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"            return XmlUtil.getDataFromFile(file, XmlSerializableBookShelf.class);"},{"lineNumber":35,"author":{"gitID":"-"},"content":"        } catch (JAXBException e) {"},{"lineNumber":36,"author":{"gitID":"-"},"content":"            throw new DataConversionException(e);"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":11,"-":29}},{"path":"src/main/java/seedu/address/MainApp.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import com.google.common.eventbus.Subscribe;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.application.Application;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Config;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.EventsCenter;"},{"lineNumber":15,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.Version;"},{"lineNumber":17,"author":{"gitID":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;"},{"lineNumber":18,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":19,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.ConfigUtil;"},{"lineNumber":20,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":21,"author":{"gitID":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"import seedu.address.logic.LogicManager;"},{"lineNumber":23,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":24,"author":{"gitID":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":25,"author":{"gitID":"-"},"content":"import seedu.address.model.ModelManager;"},{"lineNumber":26,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"import seedu.address.model.UserPrefs;"},{"lineNumber":28,"author":{"gitID":"-"},"content":"import seedu.address.model.util.SampleDataUtil;"},{"lineNumber":29,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.storage.BookShelfStorage;"},{"lineNumber":30,"author":{"gitID":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;"},{"lineNumber":31,"author":{"gitID":"-"},"content":"import seedu.address.storage.Storage;"},{"lineNumber":32,"author":{"gitID":"-"},"content":"import seedu.address.storage.StorageManager;"},{"lineNumber":33,"author":{"gitID":"-"},"content":"import seedu.address.storage.UserPrefsStorage;"},{"lineNumber":34,"author":{"gitID":"qiu-siqi"},"content":"import seedu.address.storage.XmlBookShelfStorage;"},{"lineNumber":35,"author":{"gitID":"-"},"content":"import seedu.address.ui.Ui;"},{"lineNumber":36,"author":{"gitID":"-"},"content":"import seedu.address.ui.UiManager;"},{"lineNumber":37,"author":{"gitID":"-"},"content":""},{"lineNumber":38,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":39,"author":{"gitID":"-"},"content":" * The main entry point to the application."},{"lineNumber":40,"author":{"gitID":"-"},"content":" */"},{"lineNumber":41,"author":{"gitID":"-"},"content":"public class MainApp extends Application {"},{"lineNumber":42,"author":{"gitID":"-"},"content":""},{"lineNumber":43,"author":{"gitID":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);"},{"lineNumber":44,"author":{"gitID":"-"},"content":""},{"lineNumber":45,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"},{"lineNumber":46,"author":{"gitID":"-"},"content":""},{"lineNumber":47,"author":{"gitID":"-"},"content":"    protected Ui ui;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"    protected Logic logic;"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    protected Storage storage;"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    protected Model model;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    protected Config config;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"    protected UserPrefs userPrefs;"},{"lineNumber":53,"author":{"gitID":"-"},"content":""},{"lineNumber":54,"author":{"gitID":"-"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":56,"author":{"gitID":"-"},"content":"    public void init() throws Exception {"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Bibliotek ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"},{"lineNumber":58,"author":{"gitID":"-"},"content":"        super.init();"},{"lineNumber":59,"author":{"gitID":"-"},"content":""},{"lineNumber":60,"author":{"gitID":"-"},"content":"        config \u003d initConfig(getApplicationParameter(\"config\"));"},{"lineNumber":61,"author":{"gitID":"-"},"content":""},{"lineNumber":62,"author":{"gitID":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        userPrefs \u003d initPrefs(userPrefsStorage);"},{"lineNumber":64,"author":{"gitID":"qiu-siqi"},"content":"        BookShelfStorage bookShelfStorage \u003d new XmlBookShelfStorage(userPrefs.getBookShelfFilePath());"},{"lineNumber":65,"author":{"gitID":"qiu-siqi"},"content":"        storage \u003d new StorageManager(bookShelfStorage, userPrefsStorage);"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        initLogging(config);"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);"},{"lineNumber":70,"author":{"gitID":"-"},"content":""},{"lineNumber":71,"author":{"gitID":"-"},"content":"        logic \u003d new LogicManager(model);"},{"lineNumber":72,"author":{"gitID":"-"},"content":""},{"lineNumber":73,"author":{"gitID":"-"},"content":"        ui \u003d new UiManager(logic, config, userPrefs);"},{"lineNumber":74,"author":{"gitID":"-"},"content":""},{"lineNumber":75,"author":{"gitID":"-"},"content":"        initEventsCenter();"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    private String getApplicationParameter(String parameterName) {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        Map\u003cString, String\u003e applicationParameters \u003d getParameters().getNamed();"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        return applicationParameters.get(parameterName);"},{"lineNumber":81,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"-"},"content":""},{"lineNumber":83,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":84,"author":{"gitID":"qiu-siqi"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s book shelf and {@code userPrefs}. \u003cbr\u003e"},{"lineNumber":85,"author":{"gitID":"qiu-siqi"},"content":"     * The data from the sample book shelf will be used instead if {@code storage}\u0027s book shelf is not found,"},{"lineNumber":86,"author":{"gitID":"qiu-siqi"},"content":"     * or an empty book shelf will be used instead if errors occur when reading {@code storage}\u0027s book shelf."},{"lineNumber":87,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitID":"-"},"content":"    private Model initModelManager(Storage storage, UserPrefs userPrefs) {"},{"lineNumber":89,"author":{"gitID":"qiu-siqi"},"content":"        Optional\u003cReadOnlyBookShelf\u003e bookShelfOptional;"},{"lineNumber":90,"author":{"gitID":"qiu-siqi"},"content":"        ReadOnlyBookShelf initialData;"},{"lineNumber":91,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":92,"author":{"gitID":"qiu-siqi"},"content":"            bookShelfOptional \u003d storage.readBookShelf();"},{"lineNumber":93,"author":{"gitID":"qiu-siqi"},"content":"            if (!bookShelfOptional.isPresent()) {"},{"lineNumber":94,"author":{"gitID":"qiu-siqi"},"content":"                logger.info(\"Data file not found. Will be starting with a sample BookShelf\");"},{"lineNumber":95,"author":{"gitID":"-"},"content":"            }"},{"lineNumber":96,"author":{"gitID":"qiu-siqi"},"content":"            initialData \u003d bookShelfOptional.orElseGet(SampleDataUtil::getSampleBookShelf);"},{"lineNumber":97,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":98,"author":{"gitID":"qiu-siqi"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty BookShelf\");"},{"lineNumber":99,"author":{"gitID":"qiu-siqi"},"content":"            initialData \u003d new BookShelf();"},{"lineNumber":100,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":101,"author":{"gitID":"qiu-siqi"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty BookShelf\");"},{"lineNumber":102,"author":{"gitID":"qiu-siqi"},"content":"            initialData \u003d new BookShelf();"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":104,"author":{"gitID":"-"},"content":""},{"lineNumber":105,"author":{"gitID":"-"},"content":"        return new ModelManager(initialData, userPrefs);"},{"lineNumber":106,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"-"},"content":"    private void initLogging(Config config) {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        LogsCenter.init(config);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":113,"author":{"gitID":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"},{"lineNumber":114,"author":{"gitID":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"},{"lineNumber":115,"author":{"gitID":"-"},"content":"     * if {@code configFilePath} is null."},{"lineNumber":116,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":117,"author":{"gitID":"-"},"content":"    protected Config initConfig(String configFilePath) {"},{"lineNumber":118,"author":{"gitID":"-"},"content":"        Config initializedConfig;"},{"lineNumber":119,"author":{"gitID":"-"},"content":"        String configFilePathUsed;"},{"lineNumber":120,"author":{"gitID":"-"},"content":""},{"lineNumber":121,"author":{"gitID":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"},{"lineNumber":122,"author":{"gitID":"-"},"content":""},{"lineNumber":123,"author":{"gitID":"-"},"content":"        if (configFilePath !\u003d null) {"},{"lineNumber":124,"author":{"gitID":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);"},{"lineNumber":125,"author":{"gitID":"-"},"content":"            configFilePathUsed \u003d configFilePath;"},{"lineNumber":126,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":127,"author":{"gitID":"-"},"content":""},{"lineNumber":128,"author":{"gitID":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);"},{"lineNumber":129,"author":{"gitID":"-"},"content":""},{"lineNumber":130,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":131,"author":{"gitID":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"},{"lineNumber":132,"author":{"gitID":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());"},{"lineNumber":133,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":134,"author":{"gitID":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""},{"lineNumber":135,"author":{"gitID":"-"},"content":"                    + \"Using default config properties\");"},{"lineNumber":136,"author":{"gitID":"-"},"content":"            initializedConfig \u003d new Config();"},{"lineNumber":137,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"-"},"content":""},{"lineNumber":139,"author":{"gitID":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields"},{"lineNumber":140,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":141,"author":{"gitID":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"},{"lineNumber":142,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":143,"author":{"gitID":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"},{"lineNumber":144,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":145,"author":{"gitID":"-"},"content":"        return initializedConfig;"},{"lineNumber":146,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitID":"-"},"content":""},{"lineNumber":148,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":149,"author":{"gitID":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"},{"lineNumber":150,"author":{"gitID":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when"},{"lineNumber":151,"author":{"gitID":"-"},"content":"     * reading from the file."},{"lineNumber":152,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":153,"author":{"gitID":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {"},{"lineNumber":154,"author":{"gitID":"-"},"content":"        String prefsFilePath \u003d storage.getUserPrefsFilePath();"},{"lineNumber":155,"author":{"gitID":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);"},{"lineNumber":156,"author":{"gitID":"-"},"content":""},{"lineNumber":157,"author":{"gitID":"-"},"content":"        UserPrefs initializedPrefs;"},{"lineNumber":158,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":159,"author":{"gitID":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"},{"lineNumber":160,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"},{"lineNumber":161,"author":{"gitID":"-"},"content":"        } catch (DataConversionException e) {"},{"lineNumber":162,"author":{"gitID":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""},{"lineNumber":163,"author":{"gitID":"-"},"content":"                    + \"Using default user prefs\");"},{"lineNumber":164,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d new UserPrefs();"},{"lineNumber":165,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":166,"author":{"gitID":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"},{"lineNumber":167,"author":{"gitID":"-"},"content":"            initializedPrefs \u003d new UserPrefs();"},{"lineNumber":168,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitID":"-"},"content":""},{"lineNumber":170,"author":{"gitID":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields"},{"lineNumber":171,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":172,"author":{"gitID":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);"},{"lineNumber":173,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":174,"author":{"gitID":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"},{"lineNumber":175,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":176,"author":{"gitID":"-"},"content":""},{"lineNumber":177,"author":{"gitID":"-"},"content":"        return initializedPrefs;"},{"lineNumber":178,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitID":"-"},"content":""},{"lineNumber":180,"author":{"gitID":"-"},"content":"    private void initEventsCenter() {"},{"lineNumber":181,"author":{"gitID":"-"},"content":"        EventsCenter.getInstance().registerHandler(this);"},{"lineNumber":182,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitID":"-"},"content":""},{"lineNumber":184,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":185,"author":{"gitID":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":186,"author":{"gitID":"takuyakanbr"},"content":"        logger.info(\"Starting Bibliotek \" + MainApp.VERSION);"},{"lineNumber":187,"author":{"gitID":"-"},"content":"        ui.start(primaryStage);"},{"lineNumber":188,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitID":"-"},"content":""},{"lineNumber":190,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":191,"author":{"gitID":"-"},"content":"    public void stop() {"},{"lineNumber":192,"author":{"gitID":"qiu-siqi"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Bibliotek ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"},{"lineNumber":193,"author":{"gitID":"-"},"content":"        ui.stop();"},{"lineNumber":194,"author":{"gitID":"-"},"content":"        try {"},{"lineNumber":195,"author":{"gitID":"-"},"content":"            storage.saveUserPrefs(userPrefs);"},{"lineNumber":196,"author":{"gitID":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":197,"author":{"gitID":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"},{"lineNumber":198,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitID":"-"},"content":"        Platform.exit();"},{"lineNumber":200,"author":{"gitID":"-"},"content":"        System.exit(0);"},{"lineNumber":201,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":202,"author":{"gitID":"-"},"content":""},{"lineNumber":203,"author":{"gitID":"-"},"content":"    @Subscribe"},{"lineNumber":204,"author":{"gitID":"-"},"content":"    public void handleExitAppRequestEvent(ExitAppRequestEvent event) {"},{"lineNumber":205,"author":{"gitID":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));"},{"lineNumber":206,"author":{"gitID":"-"},"content":"        this.stop();"},{"lineNumber":207,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitID":"-"},"content":""},{"lineNumber":209,"author":{"gitID":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":210,"author":{"gitID":"-"},"content":"        launch(args);"},{"lineNumber":211,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":20,"takuyakanbr":2,"-":190}},{"path":"src/main/java/seedu/address/storage/XmlSerializableBookShelf.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlElement;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":" * An Immutable BookShelf that is serializable to XML format"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"@XmlRootElement(name \u003d \"bookshelf\")"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"public class XmlSerializableBookShelf {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    private List\u003cXmlAdaptedBook\u003e books;"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"     * Creates an empty XmlSerializableBookShelf."},{"lineNumber":25,"author":{"gitID":"-"},"content":"     * This empty constructor is required for marshalling."},{"lineNumber":26,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public XmlSerializableBookShelf() {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        books \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     * Converts a given BookShelf into this class for JAXB use."},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    public XmlSerializableBookShelf(ReadOnlyBookShelf src) {"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        this();"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        books.addAll(src.getBookList().stream().map(XmlAdaptedBook::new).collect(Collectors.toList()));"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     * Converts this bookshelf into the model\u0027s {@code BookShelf} object."},{"lineNumber":41,"author":{"gitID":"-"},"content":"     *"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated or duplicates in the"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"     * {@code XmlAdaptedBook}."},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    public BookShelf toModelType() throws IllegalValueException {"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        BookShelf bookShelf \u003d new BookShelf();"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        for (XmlAdaptedBook b : books) {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"            bookShelf.addBook(b.toModelType());"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelf;"},{"lineNumber":51,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"-"},"content":""},{"lineNumber":53,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":56,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof XmlSerializableBookShelf)) {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf otherBookShelf \u003d (XmlSerializableBookShelf) other;"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        return books.equals(otherBookShelf.books);"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":44,"-":22}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedCategory.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlValue;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" * JAXB-friendly adapted version of the Category."},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"public class XmlAdaptedCategory {"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"    @XmlValue"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    private String category;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs an XmlAdaptedCategory."},{"lineNumber":17,"author":{"gitID":"-"},"content":"     * This is the no-arg constructor that is required by JAXB."},{"lineNumber":18,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedCategory() {}"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code XmlAdaptedCategory} with the given {@code category}."},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedCategory(String category) {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        this.category \u003d category;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"     * Converts a given Category into this class for JAXB use."},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"     * @param source future changes to this will not affect the created."},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedCategory(Category source) {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        category \u003d source.category;"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"     * Converts this jaxb-friendly adapted category object into the model\u0027s Category object."},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    public Category toModelType() {"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"        return new Category(category);"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":45,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":47,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":48,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":49,"author":{"gitID":"-"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof XmlAdaptedCategory)) {"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        return category.equals(((XmlAdaptedCategory) other).category);"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":42,"-":14}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model.util;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.util.CollectionUtil;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.BookShelf;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":""},{"lineNumber":15,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" * Contains utility methods for populating {@code BookShelf} with sample data."},{"lineNumber":17,"author":{"gitID":"-"},"content":" */"},{"lineNumber":18,"author":{"gitID":"-"},"content":"public class SampleDataUtil {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    public static Book[] getSampleBooks() {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        return new Book[]{"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"            new Book(Collections.singleton(new Author(\"Andy Weir\")), new Title(\"Artemis\"),"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"                CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\")),"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"                new Description(\"This is Artemis.\")),"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"            new Book(Collections.singleton(new Author(\"Sylvain Neuvel\")), new Title(\"Waking Gods\"),"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"                CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\")),"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"                new Description(\"This is Waking Gods.\")),"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"            new Book(Collections.singleton(new Author(\"James S. A. Corey\")), new Title(\"Babylon\u0027s Ashes\"),"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"                CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\"),"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"                    new Category(\"Space Opera\")),"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"                new Description(\"This is Babylon\u0027s Ashes.\")),"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"            new Book(Collections.singleton(new Author(\"John Scalzi\")), new Title(\"The Collapsing Empire\"),"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"                CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\"),"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"                    new Category(\"Space Opera\")),"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"                new Description(\"This is The Collapsing Empire.\")),"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"            new Book(Collections.singleton(new Author(\"Iain M. Banks\")), new Title(\"Consider Phlebas\"),"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"                    CollectionUtil.toSet(new Category(\"Fiction\"), new Category(\"Science Fiction\"),"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"                            new Category(\"Space Opera\")),"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"                    new Description(\"This is Consider Phlebas.\"))"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        };"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public static ReadOnlyBookShelf getSampleBookShelf() {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"            BookShelf sampleBookShelf \u003d new BookShelf();"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"            for (Book sampleBook : getSampleBooks()) {"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"                sampleBookShelf.addBook(sampleBook);"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"            }"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"            return sampleBookShelf;"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        } catch (DuplicateBookException e) {"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"            throw new AssertionError(\"sample data cannot contain duplicate books\", e);"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":55,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":47,"-":8}},{"path":"src/main/java/seedu/address/model/ReadOnlyBookShelf.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Unmodifiable view of a book shelf"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public interface ReadOnlyBookShelf {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an unmodifiable view of the book list."},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"     * This list will not contain any duplicate books."},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    ObservableList\u003cBook\u003e getBookList();"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":14,"-":3}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.GuiSettings;"},{"lineNumber":6,"author":{"gitID":"-"},"content":""},{"lineNumber":7,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitID":"-"},"content":" * Represents User\u0027s preferences."},{"lineNumber":9,"author":{"gitID":"-"},"content":" */"},{"lineNumber":10,"author":{"gitID":"-"},"content":"public class UserPrefs {"},{"lineNumber":11,"author":{"gitID":"-"},"content":""},{"lineNumber":12,"author":{"gitID":"-"},"content":"    private GuiSettings guiSettings;"},{"lineNumber":13,"author":{"gitID":"qiu-siqi"},"content":"    private String bookShelfFilePath \u003d \"data/bookshelf.xml\";"},{"lineNumber":14,"author":{"gitID":"qiu-siqi"},"content":"    private String bookShelfName \u003d \"MyBookShelf\";"},{"lineNumber":15,"author":{"gitID":"-"},"content":""},{"lineNumber":16,"author":{"gitID":"-"},"content":"    public UserPrefs() {"},{"lineNumber":17,"author":{"gitID":"-"},"content":"        this.setGuiSettings(500, 500, 0, 0);"},{"lineNumber":18,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitID":"-"},"content":""},{"lineNumber":20,"author":{"gitID":"-"},"content":"    public GuiSettings getGuiSettings() {"},{"lineNumber":21,"author":{"gitID":"-"},"content":"        return guiSettings \u003d\u003d null ? new GuiSettings() : guiSettings;"},{"lineNumber":22,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public void updateLastUsedGuiSetting(GuiSettings guiSettings) {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        this.guiSettings \u003d guiSettings;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    public void setGuiSettings(double width, double height, int x, int y) {"},{"lineNumber":29,"author":{"gitID":"-"},"content":"        guiSettings \u003d new GuiSettings(width, height, x, y);"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"-"},"content":""},{"lineNumber":32,"author":{"gitID":"qiu-siqi"},"content":"    public String getBookShelfFilePath() {"},{"lineNumber":33,"author":{"gitID":"qiu-siqi"},"content":"        return bookShelfFilePath;"},{"lineNumber":34,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"qiu-siqi"},"content":"    public void setBookShelfFilePath(String bookShelfFilePath) {"},{"lineNumber":37,"author":{"gitID":"qiu-siqi"},"content":"        this.bookShelfFilePath \u003d bookShelfFilePath;"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"qiu-siqi"},"content":"    public String getBookShelfName() {"},{"lineNumber":41,"author":{"gitID":"qiu-siqi"},"content":"        return bookShelfName;"},{"lineNumber":42,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitID":"-"},"content":""},{"lineNumber":44,"author":{"gitID":"qiu-siqi"},"content":"    public void setBookShelfName(String bookShelfName) {"},{"lineNumber":45,"author":{"gitID":"qiu-siqi"},"content":"        this.bookShelfName \u003d bookShelfName;"},{"lineNumber":46,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":49,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":50,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":51,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":52,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well."},{"lineNumber":54,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"        return Objects.equals(guiSettings, o.guiSettings)"},{"lineNumber":60,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(bookShelfFilePath, o.bookShelfFilePath)"},{"lineNumber":61,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 Objects.equals(bookShelfName, o.bookShelfName);"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":65,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":66,"author":{"gitID":"qiu-siqi"},"content":"        return Objects.hash(guiSettings, bookShelfFilePath, bookShelfName);"},{"lineNumber":67,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"-"},"content":""},{"lineNumber":69,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":70,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":71,"author":{"gitID":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":72,"author":{"gitID":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings.toString());"},{"lineNumber":73,"author":{"gitID":"qiu-siqi"},"content":"        sb.append(\"\\nLocal data file location : \" + bookShelfFilePath);"},{"lineNumber":74,"author":{"gitID":"qiu-siqi"},"content":"        sb.append(\"\\nBookShelf name : \" + bookShelfName);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        return sb.toString();"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":15,"-":63}},{"path":"src/main/java/seedu/address/model/util/BookDataUtil.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.util;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"import java.util.HashSet;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Set;"},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":" * Contains utility methods for manipulating book data."},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"public class BookDataUtil {"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an author set containing the list of strings given."},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    public static Set\u003cAuthor\u003e getAuthorSet(String... strings) {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"        HashSet\u003cAuthor\u003e authors \u003d new HashSet\u003c\u003e();"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        for (String s : strings) {"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"            authors.add(new Author(s));"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        return authors;"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"     * Returns a category set containing the list of strings given."},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    public static Set\u003cCategory\u003e getCategorySet(String... strings) {"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        HashSet\u003cCategory\u003e categories \u003d new HashSet\u003c\u003e();"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        for (String s : strings) {"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"            categories.add(new Category(s));"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        return categories;"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":38}},{"path":"src/main/java/seedu/address/storage/XmlBookShelfStorage.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitID":"-"},"content":""},{"lineNumber":11,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":14,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.ReadOnlyBookShelf;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":" * A class to access BookShelf data stored as an xml file on the hard disk."},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"public class XmlBookShelfStorage implements BookShelfStorage {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(XmlBookShelfStorage.class);"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    private String filePath;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    public XmlBookShelfStorage(String filePath) {"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    public String getBookShelfFilePath() {"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        return filePath;"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readBookShelf() throws DataConversionException, IOException {"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        return readBookShelf(filePath);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"     * Similar to {@link #readBookShelf()}"},{"lineNumber":41,"author":{"gitID":"-"},"content":"     * @param filePath location of the data. Cannot be null"},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public Optional\u003cReadOnlyBookShelf\u003e readBookShelf(String filePath) throws DataConversionException,"},{"lineNumber":45,"author":{"gitID":"-"},"content":"                                                                             FileNotFoundException {"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":47,"author":{"gitID":"-"},"content":""},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        File bookShelfFile \u003d new File(filePath);"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        if (!bookShelfFile.exists()) {"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"            logger.info(\"BookShelf file \"  + bookShelfFile + \" not found\");"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"            return Optional.empty();"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"        XmlSerializableBookShelf xmlBookShelf \u003d XmlFileStorage.loadDataFromSaveFile(new File(filePath));"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"            return Optional.of(xmlBookShelf.toModelType());"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"            logger.info(\"Illegal values found in \" + bookShelfFile + \": \" + ive.getMessage());"},{"lineNumber":60,"author":{"gitID":"-"},"content":"            throw new DataConversionException(ive);"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"-"},"content":""},{"lineNumber":64,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf(ReadOnlyBookShelf bookShelf) throws IOException {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        saveBookShelf(bookShelf, filePath);"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"     * Similar to {@link #saveBookShelf(ReadOnlyBookShelf)}"},{"lineNumber":71,"author":{"gitID":"-"},"content":"     * @param filePath location of the data. Cannot be null"},{"lineNumber":72,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    public void saveBookShelf(ReadOnlyBookShelf bookShelf, String filePath) throws IOException {"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(bookShelf);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":78,"author":{"gitID":"-"},"content":"        FileUtil.createIfMissing(file);"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        XmlFileStorage.saveDataToFile(file, new XmlSerializableBookShelf(bookShelf));"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":51,"-":31}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedBook.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":""},{"lineNumber":8,"author":{"gitID":"-"},"content":"import javax.xml.bind.annotation.XmlElement;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Author;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Category;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Description;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Title;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":" * JAXB-friendly version of the Book."},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"public class XmlAdaptedBook {"},{"lineNumber":21,"author":{"gitID":"-"},"content":""},{"lineNumber":22,"author":{"gitID":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";"},{"lineNumber":23,"author":{"gitID":"-"},"content":""},{"lineNumber":24,"author":{"gitID":"-"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    private String title;"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement(required \u003d true)"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private String description;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    private List\u003cXmlAdaptedAuthor\u003e authors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"    @XmlElement"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    private List\u003cXmlAdaptedCategory\u003e categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs an XmlAdaptedBook."},{"lineNumber":36,"author":{"gitID":"-"},"content":"     * This is the no-arg constructor that is required by JAXB."},{"lineNumber":37,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedBook() {}"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs an {@code XmlAdaptedBook} with the given book details."},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedBook(String title, String description, List\u003cXmlAdaptedAuthor\u003e authors,"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"                          List\u003cXmlAdaptedCategory\u003e categories) {"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d title;"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d description;"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        if (authors !\u003d null) {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"            this.authors \u003d new ArrayList\u003c\u003e(authors);"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        if (categories !\u003d null) {"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"            this.categories \u003d new ArrayList\u003c\u003e(categories);"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"     * Converts a given Book into this class for JAXB use."},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"     * @param source future changes to this will not affect the created XmlAdaptedBook."},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    public XmlAdaptedBook(Book source) {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        title \u003d source.getTitle().title;"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        description \u003d source.getDescription().description;"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"        authors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        for (Author author : source.getAuthors()) {"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"            authors.add(new XmlAdaptedAuthor(author));"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        categories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"        for (Category category : source.getCategories()) {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"            categories.add(new XmlAdaptedCategory(category));"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"     * Converts this jaxb-friendly adapted book object into the model\u0027s Book object."},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted book."},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"    public Book toModelType() throws IllegalValueException {"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        final List\u003cAuthor\u003e bookAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        for (XmlAdaptedAuthor author : authors) {"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"            bookAuthors.add(author.toModelType());"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        final List\u003cCategory\u003e bookCategories \u003d new ArrayList\u003c\u003e();"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        for (XmlAdaptedCategory category : categories) {"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"            bookCategories.add(category.toModelType());"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"        if (this.title \u003d\u003d null) {"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        final Title title \u003d new Title(this.title);"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"        if (this.description \u003d\u003d null) {"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"                    Description.class.getSimpleName()));"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        final Description description \u003d new Description(this.description);"},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"        return new Book(new HashSet\u003c\u003e(bookAuthors), title, new HashSet\u003c\u003e(bookCategories), description);"},{"lineNumber":100,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitID":"-"},"content":""},{"lineNumber":102,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":103,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":106,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":107,"author":{"gitID":"-"},"content":""},{"lineNumber":108,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof XmlAdaptedBook)) {"},{"lineNumber":109,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":110,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"        XmlAdaptedBook otherBook \u003d (XmlAdaptedBook) other;"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        return Objects.equals(title, otherBook.title)"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 Objects.equals(description, otherBook.description)"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 authors.equals(otherBook.authors)"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 categories.equals(otherBook.categories);"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":118,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":94,"-":24}},{"path":"src/main/java/seedu/address/model/ModelManager.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.collections.transformation.FilteredList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.ComponentManager;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.commons.events.model.BookShelfChangedEvent;"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":18,"author":{"gitID":"-"},"content":""},{"lineNumber":19,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":" * Represents the in-memory model of the book shelf data."},{"lineNumber":21,"author":{"gitID":"-"},"content":" * All changes to any model should be synchronized."},{"lineNumber":22,"author":{"gitID":"-"},"content":" */"},{"lineNumber":23,"author":{"gitID":"-"},"content":"public class ModelManager extends ComponentManager implements Model {"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"},{"lineNumber":25,"author":{"gitID":"-"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    private final BookShelf bookShelf;"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    private final FilteredList\u003cBook\u003e filteredBooks;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     * Initializes a ModelManager with the given bookShelf and userPrefs."},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    public ModelManager(ReadOnlyBookShelf bookShelf, UserPrefs userPrefs) {"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"        super();"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(bookShelf, userPrefs);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"        logger.fine(\"Initializing with book shelf: \" + bookShelf + \" and user prefs \" + userPrefs);"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        this.bookShelf \u003d new BookShelf(bookShelf);"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"        this.filteredBooks \u003d new FilteredList\u003c\u003e(this.bookShelf.getBookList());"},{"lineNumber":40,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"    public ModelManager() {"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"        this(new BookShelf(), new UserPrefs());"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    public void resetData(ReadOnlyBookShelf newData) {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.resetData(newData);"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        indicateBookShelfChanged();"},{"lineNumber":50,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitID":"-"},"content":""},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    public ReadOnlyBookShelf getBookShelf() {"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        return bookShelf;"},{"lineNumber":55,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitID":"-"},"content":""},{"lineNumber":57,"author":{"gitID":"-"},"content":"    /** Raises an event to indicate the model has changed */"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    private void indicateBookShelfChanged() {"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"        raise(new BookShelfChangedEvent(bookShelf));"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"    public void deleteBook(Book target) throws BookNotFoundException {"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.removeBook(target);"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        indicateBookShelfChanged();"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"    public void addBook(Book book) throws DuplicateBookException {"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.addBook(book);"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        indicateBookShelfChanged();"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook(Book target, Book editedBook) throws BookNotFoundException, DuplicateBookException {"},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(target, editedBook);"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"        bookShelf.updateBook(target, editedBook);"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"        indicateBookShelfChanged();"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Book List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an unmodifiable view of the list of {@code Book} backed by the internal list of"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"     * {@code bookShelf}"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":"        return FXCollections.unmodifiableObservableList(filteredBooks);"},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"    public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        requireNonNull(predicate);"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":"        filteredBooks.setPredicate(predicate);"},{"lineNumber":98,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitID":"-"},"content":""},{"lineNumber":100,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":102,"author":{"gitID":"-"},"content":"        // short circuit if same object"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":104,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":108,"author":{"gitID":"-"},"content":"        if (!(obj instanceof ModelManager)) {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"            return false;"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":111,"author":{"gitID":"-"},"content":""},{"lineNumber":112,"author":{"gitID":"-"},"content":"        // state check"},{"lineNumber":113,"author":{"gitID":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;"},{"lineNumber":114,"author":{"gitID":"qiu-siqi"},"content":"        return bookShelf.equals(other.bookShelf)"},{"lineNumber":115,"author":{"gitID":"qiu-siqi"},"content":"                \u0026\u0026 filteredBooks.equals(other.filteredBooks);"},{"lineNumber":116,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":117,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":118,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"qiu-siqi":2,"takuyakanbr":70,"-":46}},{"path":"src/main/java/seedu/address/model/book/Title.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Represents a book\u0027s title."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class Title {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final String title;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code Title}."},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * @param title A book title."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public Title(String title) {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(title);"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d title;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        return title;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof Title // instanceof handles nulls"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.title.equals(((Title) other).title)); // state check"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public int hashCode() {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        return title.hashCode();"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":34,"-":7}},{"path":"src/main/java/seedu/address/model/book/Category.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Represents a single book category."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class Category {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final String category;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code Category}."},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * @param category A book category."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public Category(String category) {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(category);"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this.category \u003d category;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitID":"qiu-siqi"},"content":"        return category;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof Category // instanceof handles nulls"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.category.equals(((Category) other).category)); // state check"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public int hashCode() {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        return category.hashCode();"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"qiu-siqi":1,"takuyakanbr":32,"-":7}},{"path":"src/main/java/seedu/address/model/book/exceptions/BookNotFoundException.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book.exceptions;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":" * Signals that the operation is unable to find the specified book."},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"public class BookNotFoundException extends Exception {}"}],"authorContributionMap":{"takuyakanbr":6}},{"path":"src/main/java/seedu/address/model/book/Description.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Represents a book\u0027s description."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class Description {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final String description;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code Description}."},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * @param description A book description."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public Description(String description) {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(description);"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        return description;"},{"lineNumber":27,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitID":"-"},"content":""},{"lineNumber":29,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof Description // instanceof handles nulls"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.description.equals(((Description) other).description)); // state check"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"    public int hashCode() {"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"        return description.hashCode();"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":34,"-":7}},{"path":"src/main/java/seedu/address/model/book/Author.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Represents a single book author."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" * Guarantees: immutable."},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"public class Author {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    public final String fullName;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs a {@code Author}."},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":"     * @param fullName An author name."},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    public Author(String fullName) {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(fullName);"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"        this.fullName \u003d fullName;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitID":"-"},"content":"        return fullName;"},{"lineNumber":26,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitID":"-"},"content":""},{"lineNumber":28,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof Author // instanceof handles nulls"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.fullName.equals(((Author) other).fullName)); // state check"},{"lineNumber":33,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"-"},"content":""},{"lineNumber":35,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":36,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":37,"author":{"gitID":"-"},"content":"        return fullName.hashCode();"},{"lineNumber":38,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"-"},"content":""},{"lineNumber":40,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":22,"-":18}},{"path":"src/main/java/seedu/address/model/book/exceptions/DuplicateBookException.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book.exceptions;"},{"lineNumber":2,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DuplicateDataException;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":" * Signals that the operation will result in duplicate Book objects."},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"public class DuplicateBookException extends DuplicateDataException {"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"    public DuplicateBookException() {"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"        super(\"Operation would result in duplicate books\");"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":11,"-":1}},{"path":"src/main/java/seedu/address/model/Model.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import java.util.function.Predicate;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitID":"-"},"content":" * The API of the Model component."},{"lineNumber":12,"author":{"gitID":"-"},"content":" */"},{"lineNumber":13,"author":{"gitID":"-"},"content":"public interface Model {"},{"lineNumber":14,"author":{"gitID":"-"},"content":"    /** {@code Predicate} that always evaluate to true */"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"    Predicate\u003cBook\u003e PREDICATE_SHOW_ALL_BOOKS \u003d unused -\u003e true;"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"-"},"content":"    /** Clears existing backing model and replaces with the provided new data. */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    void resetData(ReadOnlyBookShelf newData);"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    /** Returns the BookShelf */"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"    ReadOnlyBookShelf getBookShelf();"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"    /** Deletes the given book. */"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    void deleteBook(Book target) throws BookNotFoundException;"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    /** Adds the given book */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    void addBook(Book book) throws DuplicateBookException;"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     * Replaces the given book {@code target} with {@code editedBook}."},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException if {@code target} could not be found in the list."},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if updating the book details causes the book to be equivalent to"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"     *      another existing book in the list."},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    void updateBook(Book target, Book editedBook)"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"            throws BookNotFoundException, DuplicateBookException;"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    /** Returns an unmodifiable view of the filtered book list */"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"     * Updates the filter of the filtered book list to filter by the given {@code predicate}."},{"lineNumber":44,"author":{"gitID":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null."},{"lineNumber":45,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"    void updateFilteredBookList(Predicate\u003cBook\u003e predicate);"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":48,"author":{"gitID":"-"},"content":"}"}],"authorContributionMap":{"takuyakanbr":33,"-":15}},{"path":"src/main/java/seedu/address/model/book/UniqueBookList.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collection;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.UniqueList;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":" * Represents a unique collection of books. Does not allow nulls."},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":" *"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":" * Supports a minimal set of list operations."},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"public class UniqueBookList extends UniqueList\u003cBook\u003e {"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"     * Adds a book to the list."},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if the book to add is a duplicate of an existing book in the list."},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    public void add(Book toAdd) throws DuplicateBookException {"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(toAdd);"},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"        if (contains(toAdd)) {"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"            throw new DuplicateBookException();"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        internalList.add(toAdd);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"     * Replaces the book {@code target} in the list with {@code editedBook}."},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException if {@code target} could not be found in the list."},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if the replacement is equivalent to another existing book in the list."},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    public void setBook(Book target, Book editedBook)"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"            throws BookNotFoundException, DuplicateBookException {"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(editedBook);"},{"lineNumber":41,"author":{"gitID":"-"},"content":""},{"lineNumber":42,"author":{"gitID":"-"},"content":"        int index \u003d internalList.indexOf(target);"},{"lineNumber":43,"author":{"gitID":"-"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"            throw new BookNotFoundException();"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"        if (!target.equals(editedBook) \u0026\u0026 internalList.contains(editedBook)) {"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"            throw new DuplicateBookException();"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"        internalList.set(index, editedBook);"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"     * Removes the equivalent book from the list."},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException if no such book could be found in the list."},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"    public boolean remove(Book toRemove) throws BookNotFoundException {"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(toRemove);"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        final boolean bookFoundAndDeleted \u003d internalList.remove(toRemove);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        if (!bookFoundAndDeleted) {"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":"            throw new BookNotFoundException();"},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        return bookFoundAndDeleted;"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"    public void setBooks(Collection\u003cBook\u003e books) throws DuplicateBookException {"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(books);"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        final UniqueBookList replacement \u003d new UniqueBookList();"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"        for (final Book book : books) {"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"            replacement.add(book);"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        internalList.setAll(replacement.asObservableList());"},{"lineNumber":75,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"-"},"content":""},{"lineNumber":77,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":78,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":79,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof UniqueBookList // instanceof handles nulls"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.internalList.equals(((UniqueBookList) other).internalList));"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":72,"-":12}},{"path":"src/main/java/seedu/address/model/book/Book.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model.book;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":""},{"lineNumber":5,"author":{"gitID":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitID":"-"},"content":""},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.UniqueList;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":" * Contains data about a single book."},{"lineNumber":13,"author":{"gitID":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable."},{"lineNumber":14,"author":{"gitID":"-"},"content":" */"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"public class Book {"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":17,"author":{"gitID":"takuyakanbr"},"content":"    private final UniqueList\u003cAuthor\u003e authors;"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"    private final Title title;"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":"    private final UniqueList\u003cCategory\u003e categories;"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private final Description description;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    // TODO add more fields: gid, isbn13, publisher, publishedDate"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"     * Every field must be present and not null."},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public Book(Set\u003cAuthor\u003e authors, Title title, Set\u003cCategory\u003e categories, Description description) {"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(authors, title, categories, description);"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"        this.authors \u003d new UniqueList\u003c\u003e(authors);"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"        this.title \u003d title;"},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"        this.categories \u003d new UniqueList\u003c\u003e(categories);"},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"        this.description \u003d description;"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an immutable authors set, which throws {@code UnsupportedOperationException}"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"     * if modification is attempted."},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":"    public Set\u003cAuthor\u003e getAuthors() {"},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"        return Collections.unmodifiableSet(authors.toSet());"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public Title getTitle() {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        return title;"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"     * Returns an immutable categories set, which throws {@code UnsupportedOperationException}"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"     * if modification is attempted."},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    public Set\u003cCategory\u003e getCategories() {"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"        return Collections.unmodifiableSet(categories.toSet());"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    public Description getDescription() {"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"        return description;"},{"lineNumber":57,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitID":"-"},"content":""},{"lineNumber":59,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":60,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":61,"author":{"gitID":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":62,"author":{"gitID":"-"},"content":"            return true;"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":64,"author":{"gitID":"-"},"content":""},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"        if (!(other instanceof Book)) {"},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"            return false;"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"        Book otherBook \u003d (Book) other;"},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"        return otherBook.getTitle().equals(this.getTitle());"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"    public int hashCode() {"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"        return Objects.hash(title);"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":79,"author":{"gitID":"-"},"content":"    public String toString() {"},{"lineNumber":80,"author":{"gitID":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"        builder.append(getTitle())"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"                .append(\" - Authors: \");"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        getAuthors().forEach(author -\u003e builder.append(\"[\").append(author).append(\"]\"));"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        builder.append(\" Categories: \");"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        getCategories().forEach(category -\u003e builder.append(\"[\").append(category).append(\"]\"));"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"        return builder.toString();"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":67,"-":22}},{"path":"src/main/java/seedu/address/model/UniqueList.java","lines":[{"lineNumber":1,"author":{"gitID":"takuyakanbr"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitID":"-"},"content":""},{"lineNumber":6,"author":{"gitID":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitID":"-"},"content":"import java.util.Iterator;"},{"lineNumber":8,"author":{"gitID":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitID":"-"},"content":""},{"lineNumber":10,"author":{"gitID":"-"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":11,"author":{"gitID":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":12,"author":{"gitID":"-"},"content":"import seedu.address.commons.exceptions.DuplicateDataException;"},{"lineNumber":13,"author":{"gitID":"-"},"content":"import seedu.address.commons.util.CollectionUtil;"},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":16,"author":{"gitID":"takuyakanbr"},"content":" * A list of items that enforces no nulls and uniqueness between its elements."},{"lineNumber":17,"author":{"gitID":"-"},"content":" *"},{"lineNumber":18,"author":{"gitID":"-"},"content":" * Supports minimal set of list operations for the app\u0027s features."},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":" */"},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"public class UniqueList\u003cT\u003e implements Iterable\u003cT\u003e {"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    protected final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":"     * Constructs empty UniqueList."},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"    public UniqueList() {}"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":30,"author":{"gitID":"takuyakanbr"},"content":"     * Creates a UniqueList using given set."},{"lineNumber":31,"author":{"gitID":"takuyakanbr"},"content":"     * Enforces no nulls."},{"lineNumber":32,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":33,"author":{"gitID":"takuyakanbr"},"content":"    public UniqueList(Set\u003cT\u003e items) {"},{"lineNumber":34,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(items);"},{"lineNumber":35,"author":{"gitID":"takuyakanbr"},"content":"        internalList.addAll(items);"},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":37,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     * Returns all items in this list as a Set."},{"lineNumber":42,"author":{"gitID":"-"},"content":"     * This set is mutable and change-insulated against the internal list."},{"lineNumber":43,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"    public Set\u003cT\u003e toSet() {"},{"lineNumber":45,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":46,"author":{"gitID":"-"},"content":"        return new HashSet\u003c\u003e(internalList);"},{"lineNumber":47,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitID":"-"},"content":""},{"lineNumber":49,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"     * Replaces the items in this list with those in the argument list."},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":"    public void setItems(Set\u003cT\u003e items) {"},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"        requireAllNonNull(items);"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":"        internalList.setAll(items);"},{"lineNumber":55,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"     * Ensures every item in the argument list exists in this object."},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"    public void mergeFrom(UniqueList\u003cT\u003e from) {"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"        final Set\u003cT\u003e alreadyInside \u003d this.toSet();"},{"lineNumber":63,"author":{"gitID":"-"},"content":"        from.internalList.stream()"},{"lineNumber":64,"author":{"gitID":"-"},"content":"                .filter(tag -\u003e !alreadyInside.contains(tag))"},{"lineNumber":65,"author":{"gitID":"-"},"content":"                .forEach(internalList::add);"},{"lineNumber":66,"author":{"gitID":"-"},"content":""},{"lineNumber":67,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":68,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitID":"-"},"content":""},{"lineNumber":70,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"     * Returns true if the list contains an equivalent item as the given argument."},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"    public boolean contains(T toCheck) {"},{"lineNumber":74,"author":{"gitID":"-"},"content":"        requireNonNull(toCheck);"},{"lineNumber":75,"author":{"gitID":"-"},"content":"        return internalList.contains(toCheck);"},{"lineNumber":76,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitID":"-"},"content":""},{"lineNumber":78,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"     * Adds an item to the list."},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateItemException if the item to add is a duplicate of an existing item in the list."},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"    public void add(T toAdd) throws DuplicateDataException {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(toAdd);"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        if (contains(toAdd)) {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"            throw new DuplicateItemException();"},{"lineNumber":87,"author":{"gitID":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"-"},"content":"        internalList.add(toAdd);"},{"lineNumber":89,"author":{"gitID":"-"},"content":""},{"lineNumber":90,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":91,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitID":"-"},"content":""},{"lineNumber":93,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"    public Iterator\u003cT\u003e iterator() {"},{"lineNumber":95,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":96,"author":{"gitID":"-"},"content":"        return internalList.iterator();"},{"lineNumber":97,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitID":"-"},"content":""},{"lineNumber":99,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":100,"author":{"gitID":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}."},{"lineNumber":101,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":102,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cT\u003e asObservableList() {"},{"lineNumber":103,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":104,"author":{"gitID":"-"},"content":"        return FXCollections.unmodifiableObservableList(internalList);"},{"lineNumber":105,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitID":"-"},"content":""},{"lineNumber":107,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":109,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":110,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":111,"author":{"gitID":"takuyakanbr"},"content":"                || (other instanceof UniqueList // instanceof handles nulls"},{"lineNumber":112,"author":{"gitID":"takuyakanbr"},"content":"                \u0026\u0026 this.internalList.equals(((UniqueList) other).internalList));"},{"lineNumber":113,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitID":"-"},"content":""},{"lineNumber":115,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitID":"-"},"content":"     * Returns true if the element in this list is equal to the elements in {@code other}."},{"lineNumber":117,"author":{"gitID":"-"},"content":"     * The elements do not have to be in the same order."},{"lineNumber":118,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":119,"author":{"gitID":"takuyakanbr"},"content":"    public boolean equalsOrderInsensitive(UniqueList\u003cT\u003e other) {"},{"lineNumber":120,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":121,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(other.internalList);"},{"lineNumber":122,"author":{"gitID":"-"},"content":"        return this \u003d\u003d other || new HashSet\u003c\u003e(this.internalList).equals(new HashSet\u003c\u003e(other.internalList));"},{"lineNumber":123,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitID":"-"},"content":""},{"lineNumber":125,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":126,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":127,"author":{"gitID":"-"},"content":"        assert CollectionUtil.elementsAreUnique(internalList);"},{"lineNumber":128,"author":{"gitID":"-"},"content":"        return internalList.hashCode();"},{"lineNumber":129,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitID":"-"},"content":""},{"lineNumber":131,"author":{"gitID":"-"},"content":"    /**"},{"lineNumber":132,"author":{"gitID":"-"},"content":"     * Signals that an operation would have violated the \u0027no duplicates\u0027 property of the list."},{"lineNumber":133,"author":{"gitID":"-"},"content":"     */"},{"lineNumber":134,"author":{"gitID":"takuyakanbr"},"content":"    public static class DuplicateItemException extends DuplicateDataException {"},{"lineNumber":135,"author":{"gitID":"takuyakanbr"},"content":"        protected DuplicateItemException() {"},{"lineNumber":136,"author":{"gitID":"takuyakanbr"},"content":"            super(\"Operation would result in duplicate items\");"},{"lineNumber":137,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":138,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":139,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":140,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":62,"-":78}},{"path":"src/main/java/seedu/address/model/BookShelf.java","lines":[{"lineNumber":1,"author":{"gitID":"-"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitID":"-"},"content":""},{"lineNumber":3,"author":{"gitID":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":5,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Collection;"},{"lineNumber":6,"author":{"gitID":"takuyakanbr"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":8,"author":{"gitID":"takuyakanbr"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.Book;"},{"lineNumber":10,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.UniqueBookList;"},{"lineNumber":11,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.BookNotFoundException;"},{"lineNumber":12,"author":{"gitID":"takuyakanbr"},"content":"import seedu.address.model.book.exceptions.DuplicateBookException;"},{"lineNumber":13,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":14,"author":{"gitID":"takuyakanbr"},"content":"/**"},{"lineNumber":15,"author":{"gitID":"takuyakanbr"},"content":" * Wraps all data at the book-shelf level"},{"lineNumber":16,"author":{"gitID":"-"},"content":" * Duplicates are not allowed (by .equals comparison)"},{"lineNumber":17,"author":{"gitID":"-"},"content":" */"},{"lineNumber":18,"author":{"gitID":"takuyakanbr"},"content":"public class BookShelf implements ReadOnlyBookShelf {"},{"lineNumber":19,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":20,"author":{"gitID":"takuyakanbr"},"content":"    private final UniqueBookList books;"},{"lineNumber":21,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":22,"author":{"gitID":"takuyakanbr"},"content":"    public BookShelf() {"},{"lineNumber":23,"author":{"gitID":"takuyakanbr"},"content":"        books \u003d new UniqueBookList();"},{"lineNumber":24,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":25,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":26,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":27,"author":{"gitID":"takuyakanbr"},"content":"     * Creates a BookShelf using the Books in the {@code toBeCopied}"},{"lineNumber":28,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":29,"author":{"gitID":"takuyakanbr"},"content":"    public BookShelf(ReadOnlyBookShelf toBeCopied) {"},{"lineNumber":30,"author":{"gitID":"-"},"content":"        this();"},{"lineNumber":31,"author":{"gitID":"-"},"content":"        resetData(toBeCopied);"},{"lineNumber":32,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitID":"-"},"content":""},{"lineNumber":34,"author":{"gitID":"-"},"content":"    //// list overwrite operations"},{"lineNumber":35,"author":{"gitID":"-"},"content":""},{"lineNumber":36,"author":{"gitID":"takuyakanbr"},"content":"    public void setBooks(Collection\u003cBook\u003e books) throws DuplicateBookException {"},{"lineNumber":37,"author":{"gitID":"takuyakanbr"},"content":"        this.books.setBooks(books);"},{"lineNumber":38,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":39,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":40,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":41,"author":{"gitID":"takuyakanbr"},"content":"     * Resets the existing data of this {@code BookShelf} with {@code newData}."},{"lineNumber":42,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":43,"author":{"gitID":"takuyakanbr"},"content":"    public void resetData(ReadOnlyBookShelf newData) {"},{"lineNumber":44,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(newData);"},{"lineNumber":45,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":46,"author":{"gitID":"takuyakanbr"},"content":"        try {"},{"lineNumber":47,"author":{"gitID":"takuyakanbr"},"content":"            setBooks(newData.getBookList());"},{"lineNumber":48,"author":{"gitID":"takuyakanbr"},"content":"        } catch (DuplicateBookException e) {"},{"lineNumber":49,"author":{"gitID":"takuyakanbr"},"content":"            throw new AssertionError(\"BookShelf should not have duplicate books\");"},{"lineNumber":50,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":51,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":52,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":53,"author":{"gitID":"takuyakanbr"},"content":"    //// book-level operations"},{"lineNumber":54,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":55,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":56,"author":{"gitID":"takuyakanbr"},"content":"     * Adds a book to the book shelf."},{"lineNumber":57,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":58,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if an equivalent book already exists."},{"lineNumber":59,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":60,"author":{"gitID":"takuyakanbr"},"content":"    public void addBook(Book book) throws DuplicateBookException {"},{"lineNumber":61,"author":{"gitID":"takuyakanbr"},"content":"        books.add(book);"},{"lineNumber":62,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":63,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":64,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":65,"author":{"gitID":"takuyakanbr"},"content":"     * Replaces the given book {@code target} in the list with {@code editedBook}."},{"lineNumber":66,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":67,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException  if {@code target} could not be found in the list."},{"lineNumber":68,"author":{"gitID":"takuyakanbr"},"content":"     * @throws DuplicateBookException if updating the book\u0027s details causes the book to be equivalent to"},{"lineNumber":69,"author":{"gitID":"takuyakanbr"},"content":"     *                                another existing book in the list."},{"lineNumber":70,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":71,"author":{"gitID":"takuyakanbr"},"content":"    public void updateBook(Book target, Book editedBook)"},{"lineNumber":72,"author":{"gitID":"takuyakanbr"},"content":"        throws BookNotFoundException, DuplicateBookException {"},{"lineNumber":73,"author":{"gitID":"takuyakanbr"},"content":"        requireNonNull(editedBook);"},{"lineNumber":74,"author":{"gitID":"takuyakanbr"},"content":"        books.setBook(target, editedBook);"},{"lineNumber":75,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":76,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":77,"author":{"gitID":"takuyakanbr"},"content":"    /**"},{"lineNumber":78,"author":{"gitID":"takuyakanbr"},"content":"     * Removes {@code key} from this {@code BookShelf}."},{"lineNumber":79,"author":{"gitID":"takuyakanbr"},"content":"     *"},{"lineNumber":80,"author":{"gitID":"takuyakanbr"},"content":"     * @throws BookNotFoundException if the {@code key} is not in this {@code BookShelf}."},{"lineNumber":81,"author":{"gitID":"takuyakanbr"},"content":"     */"},{"lineNumber":82,"author":{"gitID":"takuyakanbr"},"content":"    public boolean removeBook(Book key) throws BookNotFoundException {"},{"lineNumber":83,"author":{"gitID":"takuyakanbr"},"content":"        if (books.remove(key)) {"},{"lineNumber":84,"author":{"gitID":"takuyakanbr"},"content":"            return true;"},{"lineNumber":85,"author":{"gitID":"takuyakanbr"},"content":"        } else {"},{"lineNumber":86,"author":{"gitID":"takuyakanbr"},"content":"            throw new BookNotFoundException();"},{"lineNumber":87,"author":{"gitID":"takuyakanbr"},"content":"        }"},{"lineNumber":88,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":89,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":90,"author":{"gitID":"takuyakanbr"},"content":"    //// util methods"},{"lineNumber":91,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":92,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":93,"author":{"gitID":"takuyakanbr"},"content":"    public String toString() {"},{"lineNumber":94,"author":{"gitID":"takuyakanbr"},"content":"        return books.asObservableList().size() + \" books\";"},{"lineNumber":95,"author":{"gitID":"takuyakanbr"},"content":"        // TODO: refine later"},{"lineNumber":96,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":97,"author":{"gitID":"takuyakanbr"},"content":""},{"lineNumber":98,"author":{"gitID":"takuyakanbr"},"content":"    @Override"},{"lineNumber":99,"author":{"gitID":"takuyakanbr"},"content":"    public ObservableList\u003cBook\u003e getBookList() {"},{"lineNumber":100,"author":{"gitID":"takuyakanbr"},"content":"        return books.asObservableList();"},{"lineNumber":101,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitID":"-"},"content":""},{"lineNumber":103,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":104,"author":{"gitID":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":105,"author":{"gitID":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":106,"author":{"gitID":"takuyakanbr"},"content":"            || (other instanceof BookShelf // instanceof handles nulls"},{"lineNumber":107,"author":{"gitID":"takuyakanbr"},"content":"            \u0026\u0026 this.books.equalsOrderInsensitive(((BookShelf) other).books));"},{"lineNumber":108,"author":{"gitID":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitID":"-"},"content":""},{"lineNumber":110,"author":{"gitID":"-"},"content":"    @Override"},{"lineNumber":111,"author":{"gitID":"-"},"content":"    public int hashCode() {"},{"lineNumber":112,"author":{"gitID":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":113,"author":{"gitID":"takuyakanbr"},"content":"        return Objects.hash(books);"},{"lineNumber":114,"author":{"gitID":"takuyakanbr"},"content":"    }"},{"lineNumber":115,"author":{"gitID":"takuyakanbr"},"content":"}"}],"authorContributionMap":{"takuyakanbr":94,"-":21}}]
